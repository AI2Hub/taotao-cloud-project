dependencies {
    implementation project(':taotao-cloud-microservice:taotao-cloud-uc:taotao-cloud-uc-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-order:taotao-cloud-order-api')

    annotationProcessor 'com.querydsl:querydsl-apt:4.3.1:jpa'
    annotationProcessor "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.1.Final"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
}


jib {
//  https://cr.console.aliyun.com/cn-hangzhou/instances/repositories
    allowInsecureRegistries = true
    from {
        image = 'registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-skywalking:8.7.0-es7'
        auth {
            username System.getenv("TAOTAO_CLOUD_REGISTRY_USERNAME")
            password System.getenv("TAOTAO_CLOUD_REGISTRY_PASSWORD")
        }
    }
    to {
        image = 'registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-uc'
        tags = ["${project.name}-${project.version}"]
        auth {
            username System.getenv("TAOTAO_CLOUD_REGISTRY_USERNAME")
            password System.getenv("TAOTAO_CLOUD_REGISTRY_PASSWORD")
        }
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-Djava.security.egd=file:/dev/./urandom', '-Dspring.profiles.active=dev', '-Dfile.encoding=utf-8', '-Duser.timezone=Asia/Shanghai']
        mainClass = 'com.taotao.cloud.uc.biz.TaoTaoCloudUcApplication'
        args = ['some', 'args']
        ports = ['33337']
        labels = ['app_name': 'taotao-cloud-uc', 'port': '33337']
    }
}

smartdoc {
    configFile = file("src/main/resources/smart-doc.json")
    // exclude artifact
    //exclude 'org.springframework.boot:xx'
    //exclude 'org.springframework.boot:ddd'
    // 你可以使用include配置来让插件自动加载指定依赖的source.
    //include 'org.springframework.boot:spring-boot-starter-tomcat'
}
