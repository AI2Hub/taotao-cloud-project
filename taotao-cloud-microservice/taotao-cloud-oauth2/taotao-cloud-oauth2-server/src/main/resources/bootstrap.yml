#server:
#  port: 9800
#  http2:
#    enabled: true
#  undertow:
#    buffer-size: 2048
#    direct-buffers: true
#
#spring:
#  main:
#    allow-bean-definition-overriding: true
#  mvc:
#    servlet:
#      load-on-startup: 1
#  thymeleaf:
#    prefix: classpath:/views/
#    suffix: .html
#    cache: false
#  security:
#    oauth2:
#      client:
#        provider:
#          qq:
#            authorizationUri: https://graph.qq.com/oauth2.0/authorize
#            tokenUri: https://graph.qq.com/oauth2.0/token
#            userInfoUri: https://graph.qq.com/user/get_user_info
#            userNameAttribute: nickname
#        registration:
#          github:
#            clientId: Iv1.f4c52616ef60f7be
#            clientSecret: fd586fca34671a8a95ac6f8b5cfeb3fd149e57ca
#            redirectUri: http://localhost/api/login/oauth2/code/github
#          qq:
#            clientId: clientId
#            clientSecret: clientSecret
#            # 在本地测试时需要配置代理将自己在qq注册的redirectUri重定向为http://localhost/api/login/oauth2/code/qq
#            redirectUri: https://www.zyc.red/api/login/oauth2/code/qq
#            authorizationGrantType: authorization_code
#            # 授权码模式需要传递code、state、client_id、client_secret等参数，OAuth2AuthorizationCodeGrantRequestEntityConverter
#            # 会根据当前的认证方式传递不同的参数
#            clientAuthenticationMethod: post
#      resourceserver:
#        jwt:
#          issuer-uri: http://auth-server:9000
#          public-key-location: classpath:key.public
#          jws-algorithm: RS512
#
#logging:
#  level:
#    org.springframework.security: debug
#
