server:
  port: 33335
  http2:
    enabled: true
  undertow:
    buffer-size: 2048
    direct-buffers: true
  #servlet:
  #  context-path: /xxl-job-admin

decorator:
  datasource:
    enabled: true
    datasource-proxy:
      logging: slf4j
      query:
        enable-logging: true
        log-level: debug
        logger-name: net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener
      slow-query:
        enable-logging: true
        log-level: warn
        logger-name: net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener
        threshold: 300
      multiline: true
      json-format: false
      count-query: false

jasypt:
  encryptor:
    password: ${TAOTAO_CLOUD_ENCRYPTOR_PASSWORD:taotao-cloud}
    algorithm: PBEWITHHMACSHA512ANDAES_256
    property:
      prefix: "ENC@["
      suffix: "]"

arthas:
  # telnetPort、httpPort为 -1 ，则不listen telnet端口，为 0 ，则随机telnet端口
  # 如果是防止一个机器上启动多个 arthas端口冲突。可以配置为随机端口，或者配置为 -1，并且通过tunnel server来使用arthas。
  # ~/logs/arthas/arthas.log (用户目录下面)里可以找到具体端口日志
  telnetPort: -1
  httpPort: -1
  # 127.0.0.1只能本地访问，0.0.0.0则可网络访问，但是存在安全问题
  ip: 0.0.0.0
  agent-id: ${spring.application.name}
  app-name: ${spring.application.name}
  tunnel-server: ws://192.168.10.210:7777/ws

spring:
  config:
    activate:
      on-profile: test
  pid:
    file: ${user.home}/logs/${spring.application.name}/${spring.application.name}.pid
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true
    banner-mode: off
    register-shutdown-hook: true
  application:
    name: taotao-cloud-xxljob
  data:
    redis:
      host: 192.168.10.210
      port: 6379
      #sentinel:
      #  master:
      #  nodes:
      database: 1
      password: ${TAOTAO_CLOUD_REDIS_PASSWORD:taotao-cloud}
      connect-timeout: 60000
      #cluster:
      #  nodes: 192.168.10.210:6381,192.168.10.210:6382,192.168.10.210:6383,192.168.10.210:6384,192.168.10.210:6385,192.168.10.210:6386
      #  max-redirects: 3
      client-type: lettuce
      lettuce:
        pool:
          max-active: 1500
          max-wait: 60000
          max-idle: 500
          min-idle: 100
      redisson:
        config: |
          singleServerConfig:
            # 连接空闲超时，单位：毫秒
            idleConnectionTimeout: 10000
            # 连接超时，单位：毫秒
            connectTimeout: 10000
            # 命令等待超时，单位：毫秒
            timeout: 3000
            # 命令失败重试次数,如果尝试达到 retryAttempts（命令失败重试次数） 仍然不能将命令发送至某个指定的节点时，将抛出错误。
            # 如果尝试在此限制之内发送成功，则开始启用 timeout（命令等待超时） 计时。
            retryAttempts: 3
            # 命令重试发送时间间隔，单位：毫秒
            retryInterval: 1500
            # 密码，没有设置密码时，需要注释掉，否则会报错
            password: taotao-cloud
            # 单个连接最大订阅数量
            subscriptionsPerConnection: 5
            # 客户端名称
            clientName: "taotao-cloud-redis-client"
            # 节点地址
            address: "redis://192.168.10.210:6379"
            # 发布和订阅连接的最小空闲连接数
            subscriptionConnectionMinimumIdleSize: 1
            # 发布和订阅连接池大小
            subscriptionConnectionPoolSize: 50
            # 最小空闲连接数
            connectionMinimumIdleSize: 32
            # 连接池大小
            connectionPoolSize: 64
            # 数据库编号
            database: 1
            # DNS监测时间间隔，单位：毫秒
            dnsMonitoringInterval: 5000
          # 线程池数量,默认值: 当前处理核数量 * 2
          threads: 0
          # Netty线程池数量,默认值: 当前处理核数量 * 2
          nettyThreads: 0
          # 编码
          codec: !<org.redisson.codec.JsonJacksonCodec> {}
          # 传输模式
          transportMode : "NIO"
          # 配置看门狗的默认超时时间为30s，这里改为 10s
          lockWatchdogTimeout: 10000
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    #    url: jdbc:mysql://${TAOTAO_CLOUD_MYSQL_HOST:192.168.10.210}:${TAOTAO_CLOUD_MYSQL_PORT:3306}/${spring.application.name}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&rewriteBatchedStatements=true&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&allowMultiQueries=true&autoReconnect=true
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:p6spy:mysql://192.168.10.210:13306/${spring.application.name}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&rewriteBatchedStatements=true&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&allowMultiQueries=true&autoReconnect=true
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    username: root
    password: 123456
    hikari:
      auto-commit: true
      connection-timeout: 30000
      idle-timeout: 25000
      login-timeout: 5
      validation-timeout: 3000
      max-lifetime: 50000
      read-only: false
      connection-test-query: SELECT 1
      maximum-pool-size: 15
      minimum-idle: 10
      pool-name: DatebookHikariCP
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
  kafka:
    enabled: true
    bootstrap-servers: 192.168.10.210:9092
    producer:
      retries: 1
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: 0
      compression-type: gzip
      properties:
        linger.ms: 100
        partitioner.class: org.apache.kafka.clients.producer.RoundRobinPartitioner
    consumer:
      auto-commit-interval: 1S
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      concurrency: 5
      ack-mode: manual_immediate
      missing-topics-fatal: false
  #mail:
  #  host: smtp.qq.com
  #  port: 465
  #  password: ${TAOTAO_CLOUD_MAIL_PASSWORD:taotao-cloud}
  #  username: 981376577@qq.com
  #  from: 981376577@qq.com
  #  protocol: smtps
  #  properties:
  #    mail:
  #      smtp:
  #        auth: true
  #        starttls:
  #          enable: true
  #          required: true
  #        socketFactory:
  #          class: javax.net.ssl.SSLSocketFactory
  mail:
    host: smtp.qq.com
    port: 465
    password: ${TAOTAO_CLOUD_MAIL_PASSWORD:xxx}
    username: 981376577@qq.com
    from: 981376577@qq.com
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          port: ${spring.mail.port}
          starttls:
            enable: true
            required: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
  web:
    resources:
      static-locations: classpath:/static/
  freemarker:
    template-loader-path: classpath:/templates/
    suffix: .ftl
    charset: UTF-8
    request-context-attribute: request
    settings: { number_format: 0.########## }
  mvc:
    servlet:
      load-on-startup: 0
    static-path-pattern: /static/**
  cloud:
    compatibility-verifier:
      enabled: false

mybatis:
  mapper-locations: classpath:/mybatis-mapper/*Mapper.xml

xxl:
  job:
    login:
      username: admin
      password: 123456
    accessToken: f4snMzv6qazC0kxc1A8l51rK0ksJLs
    i18n: zh_CN
    #触发池
    triggerpool:
      fast:
        max: 200
      slow:
        max: 100
    logretentiondays: 30


taotao:
  cloud:
    data:
      p6spy:
        enabled: true
        dateformat: yyyy-MM-dd HH:mm:ss
        driverlist: com.mysql.cj.jdbc.Driver
        database-dialect-date-format: yyyy-MM-dd HH:mm:ss
        appender: com.p6spy.engine.spy.appender.FileLogger
        remoteServiceName: p6spy-${spring.application.name}
    core:
      enabled: true
      collect-hook-enabled: true
      context-restart-enabled: false
      async:
        enabled: true
    dinger:
      enabled: true
      httpclient:
        enabled: true
      threadpool:
        enabled: true
      project-id: ${spring.application.name}
      dingers:
        dingtalk:
          tokenId: ${DINGDING_TOKEN_ID:xxx}
          secret: ${DINGDING_SECRET:xxxx}
    logger:
      enabled: true

management:
  info:
    java:
      enabled: true
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: ALWAYS
    shutdown:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  health:
    mail:
      enabled: false
    elasticsearch:
      enabled: true
    rabbit:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  zipkin:
    tracing:
      connect-timeout: 1
      read-timeout: 10
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    enabled: true
    sampling:
      probability: 1.0

logging:
  level:
    root: INFO
    org.springframework.web: off
    org.springframework.security: off
    org.springframework.security.oauth2: off
    org.springframework.boot.autoconfigure: off
    net.ttddyy.dsproxy.listener: debug
    net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener: debug
