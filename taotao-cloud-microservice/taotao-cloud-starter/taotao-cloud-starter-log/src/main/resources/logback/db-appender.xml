<?xml version="1.0" encoding="UTF-8"?>
<included>
	<appender name="DB" class="ch.qos.logback.classic.db.DBAppender">
		<connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
			<dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">
				<driverClass>com.mysql.jdbc.Driver</driverClass>
				<url>jdbc:mysql://127.0.0.1:3306/databaseName</url>
				<user>root</user>
				<password>root</password>
			</dataSource>
		</connectionSource>

<!--		<appender name="db-classic-mysql-pool" class="ch.qos.logback.classic.db.DBAppender">-->
<!--			<connectionSource class="ch.qos.logback.core.db.DataSourceConnectionSource">-->
<!--				<dataSource class="org.apache.commons.dbcp.BasicDataSource">-->
<!--					<driverClassName>com.mysql.jdbc.Driver</driverClassName>-->
<!--					<url>jdbc:mysql://localhost:3306/logbackdb</url>-->
<!--					<username>root</username>-->
<!--					<password>qqqqqq</password>-->
<!--				</dataSource>-->
<!--			</connectionSource>-->
<!--		</appender>-->


		<!-- 使用jdbc方式 -->
		<!-- <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
			<driverClass>com.mysql.cj.jdbc.Driver</driverClass>
			<url>jdbc:mysql://localhost:3306/github_demo?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=true</url>
			<user>root</user>
			<password>root</password>
		</connectionSource> -->
	</appender>

	<appender name="LOGSTASH_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<queueSize>512</queueSize>
		<discardingThreshold>0</discardingThreshold>
		<includeCallerData>true</includeCallerData>

		<appender-ref ref="LOGSTASH"/>
	</appender>
</included>

<!--	# Logback: the reliable, generic, fast and flexible logging framework.-->
<!--	# Copyright (C) 1999-2010, QOS.ch. All rights reserved.-->
<!--	#-->
<!--	# See http://logback.qos.ch/license.html for the applicable licensing-->
<!--	# conditions.-->

<!--	# This SQL script creates the required tables by ch.qos.logback.classic.db.DBAppender.-->
<!--	#-->
<!--	# It is intended for MySQL databases. It has been tested on MySQL 5.1.37-->
<!--	# on Linux-->

<!--	use tumorpredict;-->

<!--	BEGIN;-->
<!--	DROP TABLE IF EXISTS logging_event_property;-->
<!--	DROP TABLE IF EXISTS logging_event_exception;-->
<!--	DROP TABLE IF EXISTS logging_event;-->
<!--	COMMIT;-->


<!--	BEGIN;-->
<!--	CREATE TABLE logging_event-->
<!--	(-->
<!--	timestmp         BIGINT NOT NULL,-->
<!--	formatted_message  TEXT NOT NULL,-->
<!--	logger_name       VARCHAR(254) NOT NULL,-->
<!--	level_string      VARCHAR(254) NOT NULL,-->
<!--	thread_name       VARCHAR(254),-->
<!--	reference_flag    SMALLINT,-->
<!--	arg0              VARCHAR(254),-->
<!--	arg1              VARCHAR(254),-->
<!--	arg2              VARCHAR(254),-->
<!--	arg3              VARCHAR(254),-->
<!--	caller_filename   VARCHAR(254) NOT NULL,-->
<!--	caller_class      VARCHAR(254) NOT NULL,-->
<!--	caller_method     VARCHAR(254) NOT NULL,-->
<!--	caller_line       CHAR(4) NOT NULL,-->
<!--	event_id          BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY-->
<!--	);-->
<!--	COMMIT;-->

<!--	BEGIN;-->
<!--	CREATE TABLE logging_event_property-->
<!--	(-->
<!--	event_id          BIGINT NOT NULL,-->
<!--	mapped_key        VARCHAR(254) NOT NULL,-->
<!--	mapped_value      TEXT,-->
<!--	PRIMARY KEY(event_id, mapped_key),-->
<!--	FOREIGN KEY (event_id) REFERENCES logging_event(event_id)-->
<!--	);-->
<!--	COMMIT;-->

<!--	BEGIN;-->
<!--	CREATE TABLE logging_event_exception-->
<!--	(-->
<!--	event_id         BIGINT NOT NULL,-->
<!--	i                SMALLINT NOT NULL,-->
<!--	trace_line       VARCHAR(254) NOT NULL,-->
<!--	PRIMARY KEY(event_id, i),-->
<!--	FOREIGN KEY (event_id) REFERENCES logging_event(event_id)-->
<!--	);-->
<!--	COMMIT;-->
