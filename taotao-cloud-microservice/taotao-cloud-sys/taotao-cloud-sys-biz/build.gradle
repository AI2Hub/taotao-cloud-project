import org.springframework.aot.gradle.dsl.AotMode

plugins {
    id 'org.springframework.experimental.aot' version '0.12.1'
}

dependencies {
    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-web')
    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-stream')
    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-mail')
    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-elasticsearch')
    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-ip2region')
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-dubbo")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-disruptor")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-job-elastic")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-job-xxl")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-dingtalk")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-mongodb")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-pulsar")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-rxjava")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-laytpl")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-shardingsphere")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-elasticsearch")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-elk")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-rabbitmq")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-rocketmq")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-canal")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-captcha")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-kafka")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-websocket-netty")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-websocket")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-third-client")
    implementation project(":taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-office")
    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-oss:taotao-cloud-starter-oss-minio')
    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-sms:taotao-cloud-starter-sms-aliyun')

    implementation project(':taotao-cloud-microservice:taotao-cloud-sys:taotao-cloud-sys-api')

    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java
    implementation 'com.google.protobuf:protobuf-java:3.21.3'
    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java-util
    implementation 'com.google.protobuf:protobuf-java-util:3.21.3'
    //https://search.maven.org/artifact/com.googlecode.protobuf-java-format/protobuf-java-format
    implementation 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'

    //https://search.maven.org/artifact/io.protostuff/protostuff-core
    implementation 'io.protostuff:protostuff-core:1.8.0'
    //https://search.maven.org/artifact/io.protostuff/protostuff-runtime
    implementation 'io.protostuff:protostuff-runtime:1.8.0'

    //https://search.maven.org/artifact/io.github.memorydoc/gobrs-async-starter
    implementation 'io.github.memorydoc:gobrs-async-starter:1.2.0-RELEASE'

    //https://search.maven.org/artifact/io.soabase.record-builder/record-builder-core
    implementation 'io.soabase.record-builder:record-builder-core:33'

    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.2.Final"
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
    annotationProcessor 'io.soabase.record-builder:record-builder-processor:33'
    annotationProcessor "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.16.2'

    testImplementation 'org.assertj:assertj-guava:3.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.testng:testng:7.5'
    testImplementation 'com.google.inject:guice:5.1.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

mainClassName="com.taotao.cloud.sys.biz.TaoTaoCloudSysApplication"

smartdoc {
    configFile = file("src/main/resources/smart-doc.json")
    //exclude artifact
    //exclude 'org.springframework.boot:xx'
    //exclude 'org.springframework.boot:ddd'
    //你可以使用include配置来让插件自动加载指定依赖的source.
    //include 'org.springframework.boot:spring-boot-starter-tomcat'
}

configurations {
    all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'

        //resolutionStrategy {
        //    //force 'org.codehaus.groovy:groovy:4.0.0'
        //    force 'com.alibaba.nacos:nacos-client:2.1.0'
        //}

        //exclude group: 'org.codehaus.groovy', module: 'groovy'
        //exclude group: 'org.projectlombok', module: 'lombok'
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'log4j', module: 'slf4j-simple'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
}

bootRun {
    systemProperty 'springAot', 'true'
}

springAot {
    mode = AotMode.NATIVE
    debugVerify = false
    removeXmlSupport = true
    removeSpelSupport = false
    removeYamlSupport = false
    removeJmxSupport = true
    verify = true
}
