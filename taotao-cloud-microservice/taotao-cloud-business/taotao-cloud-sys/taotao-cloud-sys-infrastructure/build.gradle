/**
 * DDD: infrastructure 基础实施层  最底层(但与所有层进行交互)
 * 向其他层提供 通用的 技术能力(比如工具类,第三方库类支持,常用基本配置,数据访问底层实现)
 * 基础实施层主要包含以下的内容:
 * 为应用层 传递消息(比如通知)
 * 为领域层 提供持久化机制(最底层的实现)
 * 为用户界面层 提供组件配置
 * 基础设施层还能够通过架构框架来支持四个层次间的交互模式。
 *
 * 2.基础层承载数据访问和entity 工具层承载工具代码 不依赖本项目其它模块 只依赖一些通用工具包
 * 同时承载基础服务（ES、Redis、MQ）
 *
 * 这一层是一个适配层，主要负责外部系统和内部业务系统的适配，
 * 这一层的主要作用就是外部系统和内部系统的适配和协议转换。
 */

dependencies {
    api project(":taotao-cloud-microservice:taotao-cloud-business:taotao-cloud-sys:taotao-cloud-sys-domain")

    api "io.github.shuigedeng:taotao-cloud-starter-facility-alibaba"
    api "io.github.shuigedeng:taotao-cloud-starter-seata"
    api "io.github.shuigedeng:taotao-cloud-starter-sentinel"
    api "io.github.shuigedeng:taotao-cloud-starter-dubbo"
    api "io.github.shuigedeng:taotao-cloud-starter-eventbus"
    api "io.github.shuigedeng:taotao-cloud-starter-mq-pulsar"
    api "io.github.shuigedeng:taotao-cloud-starter-mq-rocketmq"
    api "io.github.shuigedeng:taotao-cloud-starter-mq-rabbitmq"
    api "io.github.shuigedeng:taotao-cloud-starter-mq-kafka"
    api "io.github.shuigedeng:taotao-cloud-starter-mq-stream"
    api "io.github.shuigedeng:taotao-cloud-starter-grpc"
    api "io.github.shuigedeng:taotao-cloud-starter-lock"
    api "io.github.shuigedeng:taotao-cloud-starter-dingtalk"
    api "io.github.shuigedeng:taotao-cloud-starter-laytpl"
    api "io.github.shuigedeng:taotao-cloud-starter-elk"
    api "io.github.shuigedeng:taotao-cloud-starter-captcha"
    api "io.github.shuigedeng:taotao-cloud-starter-office"
    api "io.github.shuigedeng:taotao-cloud-starter-third-client"
    api("io.github.shuigedeng:taotao-cloud-starter-web") {
        exclude group: "com.baomidou", module: "dynamic-datasource-spring-boot3-starter"
    }

    //AVIATOR——轻量级JAVA表达式求值引擎 https://blog.csdn.net/ZhangQingmu/article/details/125087255
    //https://code.google.com/p/aviator/
    //http://code.google.com/p/aviator/wiki/User_Guide_zh
    //https://search.maven.org/artifact/com.googlecode.aviator/aviator
    api "com.googlecode.aviator:aviator:5.4.1"

    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java
    api "com.google.protobuf:protobuf-java:3.25.2"
    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java-util
    api "com.google.protobuf:protobuf-java-util:3.25.2"
    //https://search.maven.org/artifact/com.googlecode.protobuf-java-format/protobuf-java-format
    //api "com.googlecode.protobuf-java-format:protobuf-java-format:1.4"

    //https://search.maven.org/artifact/io.protostuff/protostuff-core
    api "io.protostuff:protostuff-core:1.8.0"
    //https://search.maven.org/artifact/io.protostuff/protostuff-runtime
    api "io.protostuff:protostuff-runtime:1.8.0"

    //https://search.maven.org/artifact/io.github.memorydoc/gobrs-async-starter
    api "io.github.memorydoc:gobrs-async-starter:1.3.1-RELEASE"
    api 'io.github.memorydoc:gobrs-async-skywalking-plugin:1.3.1-RELEASE'
    api 'io.github.memorydoc:gobrs-async-trace-plugin:1.3.1-RELEASE'
    api 'io.github.memorydoc:gobrs-async-monitor-plugin:1.3.1-RELEASE'

    //https://search.maven.org/artifact/org.apache.velocity/velocity-engine-core
    api 'org.apache.velocity:velocity-engine-core:2.3'

    //https://search.maven.org/artifact/org.freemarker/freemarker
    api 'org.springframework.boot:spring-boot-starter-freemarker'

    //https://search.maven.org/artifact/com.github.gavlyukovskiy/datasource-proxy-spring-boot-starter
    api 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.9.1'

    api 'com.github.oshi:oshi-core:6.4.10'

    //api "io.github.shuigedeng:taotao-cloud-starter-apt")
    //annotationProcessor "io.github.shuigedeng:taotao-cloud-starter-apt")

    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    api "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    api "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
}
