plugins {
    //Gradle依赖关系分析插件。这个插件试图复制maven依赖插件的分析目标的功能，如果依赖被声明但没有被使用或者使用但没有被声明，则构建失败。
    //https://plugins.gradle.org/plugin/ca.cutterslade.analyze
    id "ca.cutterslade.analyze" version "1.9.1"
}

//appl  "ca.cutterslade.analyze"

dependencies {
    implementation project(":taotao-cloud-microservice:taotao-cloud-business:taotao-cloud-sys:taotao-cloud-sys-api")

    implementation "io.github.shuigedeng:taotao-cloud-starter-web"
    implementation "io.github.shuigedeng:taotao-cloud-starter-dubbo"
    implementation "io.github.shuigedeng:taotao-cloud-starter-disruptor"
    implementation "io.github.shuigedeng:taotao-cloud-starter-dingtalk"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-rxjava"
    implementation "io.github.shuigedeng:taotao-cloud-starter-laytpl"
    implementation "io.github.shuigedeng:taotao-cloud-starter-elk"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-canal"
    implementation "io.github.shuigedeng:taotao-cloud-starter-captcha"
    implementation "io.github.shuigedeng:taotao-cloud-starter-office"
    implementation "io.github.shuigedeng:taotao-cloud-starter-third-client"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-security-satoken"
    implementation "io.github.shuigedeng:taotao-cloud-starter-grpc"

    implementation "io.github.shuigedeng:taotao-cloud-starter-alibaba-seata"
    implementation "io.github.shuigedeng:taotao-cloud-starter-alibaba-sentinel"
    implementation "io.github.shuigedeng:taotao-cloud-starter-facility-alibaba"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-facility-tencent"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-facility-zookeeper"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-facility-huawei"

    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-pulsar"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-rocketmq"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-rabbitmq"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-kafka"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-stream"

    //AVIATOR——轻量级JAVA表达式求值引擎 https://blog.csdn.net/ZhangQingmu/article/details/125087255
    //https://code.google.com/p/aviator/
    //http://code.google.com/p/aviator/wiki/User_Guide_zh
    //https://search.maven.org/artifact/com.googlecode.aviator/aviator
    implementation "com.googlecode.aviator:aviator:5.3.3"

    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java
    implementation "com.google.protobuf:protobuf-java:3.24.0"
    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java-util
    implementation "com.google.protobuf:protobuf-java-util:3.24.0"
    //https://search.maven.org/artifact/com.googlecode.protobuf-java-format/protobuf-java-format
    //implementation "com.googlecode.protobuf-java-format:protobuf-java-format:1.4"

    //https://search.maven.org/artifact/io.protostuff/protostuff-core
    implementation "io.protostuff:protostuff-core:1.8.0"
    //https://search.maven.org/artifact/io.protostuff/protostuff-runtime
    implementation "io.protostuff:protostuff-runtime:1.8.0"

    //https://search.maven.org/artifact/io.github.memorydoc/gobrs-async-starter
    implementation "io.github.memorydoc:gobrs-async-starter:1.3.1-RELEASE"
    implementation 'io.github.memorydoc:gobrs-async-skywalking-plugin:1.3.1-RELEASE'
    implementation 'io.github.memorydoc:gobrs-async-trace-plugin:1.3.1-RELEASE'
    implementation 'io.github.memorydoc:gobrs-async-monitor-plugin:1.3.1-RELEASE'

    //https://search.maven.org/artifact/org.apache.velocity/velocity-engine-core
    implementation 'org.apache.velocity:velocity-engine-core:2.3'

    //https://search.maven.org/artifact/org.freemarker/freemarker
    implementation 'org.freemarker:freemarker:2.3.32'

    //https://search.maven.org/artifact/com.github.gavlyukovskiy/datasource-proxy-spring-boot-starter
    implementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.9.0'

    implementation 'com.github.oshi:oshi-core:6.4.4'

    //implementation "io.github.shuigedeng:taotao-cloud-starter-apt")
    //annotationProcessor "io.github.shuigedeng:taotao-cloud-starter-apt")

    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    api "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    api "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"


    //implementation 'com.maciejwalkowiak.spring:spring-boot-startup-report:0.2.0'
    //implementation "io.github.linyimin0812:spring-async-bean-starter:2.0.4"
    //implementation "io.github.linyimin0812:spring-profiler-starter:2.0.4"

    //implementation "com.101tec:zkclient:0.11"
    //implementation "org.eclipse.jgit:org.eclipse.jgit:4.11.0.201803080745-r"
    //implementation "org.benf:cfr:0.151"
    //implementation "org.ow2.asm:asm-util:8.0.1"
    //implementation "org.ow2.asm:asm-commons:8.0.1"
    //implementation "com.github.javaparser:javaparser-symbol-solver-core:3.15.21"
    //implementation "com.esotericsoftware:kryo:4.0.0"
    //implementation "com.caucho:hessian:4.0.38"
    //implementation "redis.clients:jedis:4.2.3"
    //implementation "com.jianggujin:IKAnalyzer-lucene:8.0.0"
    //implementation "org.lionsoul:jcseg-core:1.9.9"
    //implementation "org.apache.lucene:lucene-analyzers-common:4.2.0"
    //implementation "org.mongodb:mongo-java-driver:3.12.11"
    //implementation "org.apache.maven:maven-core:3.8.6"
    //implementation "org.eclipse.aether:aether-connector-basic:1.1.0"
    //implementation "org.eclipse.aether:aether-transport-file:1.1.0"
    //implementation "org.eclipse.aether:aether-transport-http:1.1.0"
    //implementation "org.apache.maven.shared:maven-invoker:3.0.1"
    //implementation "org.apache.lucene:lucene-core:4.2.0"
    //implementation "org.apache.lucene:lucene-analyzers-common:4.2.0"
    //implementation "commons-dbutils:commons-dbutils:1.5"
    //implementation "com.github.jsqlparser:jsqlparser:0.9.5"
    //implementation "com.alibaba:druid:1.2.18"
    //implementation("org.springframework.boot:spring-boot-starter-freemarker") {
    //    exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
    //}
}

mainClassName = "com.taotao.cloud.sys.biz.TaoTaoCloudSysApplication"
description = "系统中心"
archivesBaseName = 'taotao-cloud-sys'

configurations {
    all {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
        resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"

        resolutionStrategy {
            //force "org.codehaus.groovy:groovy:4.0.0"
            force 'org.antlr:antlr4:4.10.1'
        }

        //exclude group: "log4j", module: "log4j"
        //exclude group: "log4j", module: "slf4j-simple"
        //exclude group: "org.slf4j", module: "slf4j-log4j12"
        //exclude group: "org.apache.logging.log4j", module: "log4j-slf4j-impl"
        //exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
        //exclude group: "org.apache.logging.log4j", module: "log4j-api"
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
}

//nativeBuild {
////    buildArgs = ["--initialize-at-run-time=org.apache.commons.logging.LogFactoryService,org.apache.commons.logging.LogFactory"]
//    buildArgs = ["--no-fallback",
//                 "--initialize-at-build-time=org.springframework.util.unit.DataSize",
//                 "--initialize-at-build-time=org.slf4j.MDC",
//                 "--initialize-at-build-time=ch.qos.logback.classic.Level",
//                 "--initialize-at-build-time=ch.qos.logback.classic.Logger",
//                 "--initialize-at-build-time=ch.qos.logback.core.util.StatusPrinter",
//                 "--initialize-at-build-time=ch.qos.logback.core.status.StatusBase",
//                 "--initialize-at-build-time=ch.qos.logback.core.status.InfoStatus",
//                 "--initialize-at-build-time=ch.qos.logback.core.spi.AppenderAttachableImpl",
//                 "--initialize-at-build-time=org.slf4j.LoggerFactory",
//                 "--initialize-at-build-time=ch.qos.logback.core.util.Loader",
//                 "--initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder",
//                 "--initialize-at-build-time=ch.qos.logback.classic.spi.ThrowableProxy",
//                 "--initialize-at-build-time=ch.qos.logback.core.CoreConstants",
//                 "--initialize-at-build-time=java.net.Inet6Address",
//                 "--report-unsupported-elements-at-runtime",
//                 "--allow-incomplete-classpath",
//                 "--trace-class-initialization=org.apache.commons.logging.LogFactory,org.apache.commons.logging.LogFactoryService",
//                 "-H:+ReportExceptionStackTraces",
//                 "--trace-object-instantiation=java.net.Inet6Address"
//    ]
//}

//bootBuildImage {
//    imageName = "registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-demo:2023.1.2"
//    pullPolicy = "IF_NOT_PRESENT"
//    cleanCache = true
//    verboseLogging = true
//    publish = true
//
//    docker {
//        //使用docker
//        //host = "tcp://127.0.0.1:2376"
//        //tlsVerify = true
//        //certPath = "/home/users/.minikube/certs"
//
//        //使用podman @since 2.7.0
//        //host = "unix:///run/user/1000/podman/podman.sock"
//        //bindHostToBuilder = true
//
//        publishRegistry {
//            username = findProperty("TAOTAO_CLOUD_REGISTRY_USERNAME") ?: System.getenv("TAOTAO_CLOUD_REGISTRY_USERNAME")
//            password = findProperty("TAOTAO_CLOUD_REGISTRY_PASSWORD") ?: System.getenv("TAOTAO_CLOUD_REGISTRY_PASSWORD")
//            url = "registry.cn-hangzhou.aliyuncs.com"
//        }
//    }
//}
