dependencies {
    implementation project(":taotao-cloud-microservice:taotao-cloud-business:taotao-cloud-log:taotao-cloud-log-api")

    implementation "io.github.shuigedeng:taotao-cloud-starter-seata"
    implementation "io.github.shuigedeng:taotao-cloud-starter-sentinel"
    implementation "io.github.shuigedeng:taotao-cloud-starter-facility-alibaba"
    implementation "io.github.shuigedeng:taotao-cloud-starter-dubbo"
    implementation "io.github.shuigedeng:taotao-cloud-starter-dingtalk"
    implementation "io.github.shuigedeng:taotao-cloud-starter-eventbus"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-pulsar"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-rocketmq"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-kafka"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-stream"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-data-shardingsphere"
    implementation "io.github.shuigedeng:taotao-cloud-starter-data-elasticsearch"
    implementation "io.github.shuigedeng:taotao-cloud-starter-data-mongodb"
    implementation "io.github.shuigedeng:taotao-cloud-starter-grpc"
    implementation "io.github.shuigedeng:taotao-cloud-starter-lock"
    implementation("io.github.shuigedeng:taotao-cloud-starter-web") {
        exclude group: "com.baomidou", module: "dynamic-datasource-spring-boot3-starter"
    }

    //https://search.maven.org/artifact/com.github.gavlyukovskiy/datasource-proxy-spring-boot-starter
    implementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.9.1'

    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    api "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    api "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
}

mainClassName = "com.taotao.cloud.log.biz.TaoTaoCloudLogApplication"
description = "日志中心biz"
archivesBaseName = 'taotao-cloud-log'

configurations {
    all {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
        resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"

        resolutionStrategy {
            //force "org.codehaus.groovy:groovy:4.0.0"
            force 'org.antlr:antlr4:4.13.1'

            //todo 临时处理 用高版本有问题
            force 'io.zipkin.reporter2:zipkin-sender-urlconnection:2.16.3'
            force 'io.zipkin.zipkin2:zipkin:2.23.2'
            force 'io.zipkin.reporter2:zipkin-reporter:2.16.3'
            force 'io.opentelemetry:opentelemetry-exporter-zipkin:1.31.0'
        }

        //exclude group: "log4j", module: "log4j"
        //exclude group: "log4j", module: "slf4j-simple"
        //exclude group: "org.slf4j", module: "slf4j-log4j12"
        //exclude group: "org.apache.logging.log4j", module: "log4j-slf4j-impl"
        //exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
        //exclude group: "org.apache.logging.log4j", module: "log4j-api"
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
}

//compileJava {
//    options.compilerArgs += [
//            '-Xlint:unchecked',
//            '-Xlint:deprecation',
//            '--add-exports=java.desktop/sun.font=ALL-UNNAMED',
//            '--add-exports=java.base/sun.reflect.generics.tree=ALL-UNNAMED',
//            '--add-exports=java.base/sun.net.www.protocol.ftp=ALL-UNNAMED',
//            '-AmapstructSpi.enumPostfixOverrides=com.taotao.cloud.log.api.grpc.EnumPostfixOverrideProtos=INVALID'
//    ]
//}


