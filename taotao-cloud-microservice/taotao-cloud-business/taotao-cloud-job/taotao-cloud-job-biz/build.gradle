dependencies {
    implementation project(":taotao-cloud-microservice:taotao-cloud-business:taotao-cloud-job:taotao-cloud-job-api")

    implementation("io.github.shuigedeng:taotao-cloud-starter-web") {
        exclude group: "com.baomidou", module: "dynamic-datasource-spring-boot-starter"
    }
    implementation "io.github.shuigedeng:taotao-cloud-starter-dubbo"
    implementation "io.github.shuigedeng:taotao-cloud-starter-disruptor"
    implementation "io.github.shuigedeng:taotao-cloud-starter-dingtalk"

    implementation "io.github.shuigedeng:taotao-cloud-starter-job-elastic"
    implementation "io.github.shuigedeng:taotao-cloud-starter-job-xxl"
    implementation "io.github.shuigedeng:taotao-cloud-starter-job-schedule"
    implementation "io.github.shuigedeng:taotao-cloud-starter-job-quartz"
    implementation "io.github.shuigedeng:taotao-cloud-starter-job-powerjob"

    //implementation "io.github.shuigedeng:taotao-cloud-starter-mq-pulsar"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-mq-rocketmq"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-mq-rabbitmq"
    implementation "io.github.shuigedeng:taotao-cloud-starter-mq-kafka"
    //implementation "io.github.shuigedeng:taotao-cloud-starter-mq-stream"

    implementation "io.github.shuigedeng:taotao-cloud-starter-alibaba-seata"
    implementation "io.github.shuigedeng:taotao-cloud-starter-alibaba-sentinel"
    implementation "io.github.shuigedeng:taotao-cloud-starter-facility-alibaba"

    implementation 'com.maciejwalkowiak.spring:spring-boot-startup-report:0.1.0'

    //https://search.maven.org/artifact/com.github.gavlyukovskiy/datasource-proxy-spring-boot-starter
    //implementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.9.0'

    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    api "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    api "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
}

mainClassName = "com.taotao.cloud.job.biz.TaoTaoCloudJobApplication"
description = "定时任务中心"
archivesBaseName = 'taotao-cloud-job'

graalvmNative {
    binaries {
        //all {
        //    resources.autodetect()
        //}
        main {
            imageName.set('taotao-cloud-job')
            buildArgs.add('--verbose')
            buildArgs.add('--add-opens=java.base/java.nio=ALL-UNNAMED')
            buildArgs.add('--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED')
            buildArgs.add('--add-opens=java.base/jdk.internal.ref=ALL-UNNAMED')
            buildArgs.add('--trace-class-initialization=ch.qos.logback.classic.Logger')
            buildArgs.add('--trace-object-instantiation=ch.qos.logback.core.AsyncAppenderBase$Worker')
            buildArgs.add('--initialize-at-build-time=org.slf4j.LoggerFactory,ch.qos.logback')
            buildArgs.add('--initialize-at-run-time=io.netty')
            buildArgs.add('--no-fallback')
            buildArgs.add('--initialize-at-build-time=org.springframework.util.unit.DataSize')
            buildArgs.add('--initialize-at-build-time=org.slf4j.MDC')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.classic.Level')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.classic.Logger')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.core.util.StatusPrinter')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.core.status.StatusBase')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.core.status.InfoStatus')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.core.spi.AppenderAttachableImpl')
            buildArgs.add('--initialize-at-build-time=org.slf4j.LoggerFactory')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.core.util.Loader')
            buildArgs.add('--initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.classic.spi.ThrowableProxy')
            buildArgs.add('--initialize-at-build-time=ch.qos.logback.core.CoreConstants')
            buildArgs.add('--report-unsupported-elements-at-runtime')
            buildArgs.add('--allow-incomplete-classpath')
            buildArgs.add('-H:+ReportExceptionStackTraces')
        }
    }
}

//nativeBuild {
//    buildArgs('-H:ReflectionConfigurationFiles=../../../src/main/resources/reflection-config.json')
//    buildArgs('-H:ReflectionConfigurationFiles=./reflection-config.json')
//}
