package com.taotao.cloud.ddd.interfaces;

/**
 * facade服务实现可以作为RPC提供服务，controller则作为本项目HTTP接口提供服务，供前端调用。
 * controller需要注意HTTP相关特性，敏感信息例如登陆用户ID不能依赖前端传递，
 * 登陆后前端会在请求头带一个登陆用户信息，服务端需要从请求头中获取并解析。
 */

//Interface Adapters层：这一层是一个适配层，
// 主要负责外部系统和内部业务系统的适配，这一层的主要作用就是外部系统和内部系统的适配和协议转换。

/**
 * Api模块编码规范：
 *
 * Api模块是专门用于定义对外接口的模块，所以这个模块中只包含接口定义，出入参定义，尽量不依赖其他包。
 * Api中的接口定义类以xxxxResource(或者xxxxService)结尾。这条规范完全是为了和老的应用保持一致。
 * Api接口的入参尽量不要使用Java中的原子类型(Primitive Type)， 需要将入参定义为单独的类。 最好是继承现有的BaseRequest类。
 * Api接口的出参统一使用泛型类对真实的返回类型进行包装。
 * 出入参类都以DTO结尾。
 * 出入参中尽量不适用枚举值类型的成员变量。
 *
 */
