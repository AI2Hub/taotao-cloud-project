dependencies {
    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-web')

    implementation project(':taotao-cloud-microservice:taotao-cloud-starter:taotao-cloud-starter-stream')
    implementation project(':taotao-cloud-microservice:taotao-cloud-order:taotao-cloud-order-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-sys:taotao-cloud-sys-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-payment:taotao-cloud-payment-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-member:taotao-cloud-member-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-goods:taotao-cloud-goods-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-store:taotao-cloud-store-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-promotion:taotao-cloud-promotion-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-operation:taotao-cloud-operation-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-distribution:taotao-cloud-distribution-api')
    implementation project(':taotao-cloud-microservice:taotao-cloud-message:taotao-cloud-message-api')
    //implementation project(':taotao-cloud-microservice:taotao-cloud-stock:taotao-cloud-stock-api')

    implementation "org.springframework.amqp:spring-amqp:2.3.10"
    implementation('io.github.majusko:pulsar-java-spring-boot-starter:1.0.7'){
        exclude group: 'io.swagger', module: 'swagger-annotations'
    }

    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
    annotationProcessor "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.1.Final"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
}

configurations {
    all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'

        //resolutionStrategy {
        //    force 'org.codehaus.groovy:groovy:4.0.0'
        //}

        //exclude group: 'org.codehaus.groovy', module: 'groovy'
        //exclude group: 'org.projectlombok', module: 'lombok'
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'log4j', module: 'slf4j-simple'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
}

smartdoc {
	configFile = file("src/main/resources/smart-doc.json")
	// exclude artifact
	//exclude 'org.springframework.boot:xx'
	//exclude 'org.springframework.boot:ddd'
	// 你可以使用include配置来让插件自动加载指定依赖的source.
	//include 'org.springframework.boot:spring-boot-starter-tomcat'
}

//configurations {
//	all {
//		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//		resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
//
//		resolutionStrategy {
//			force 'com.alibaba.csp:sentinel-core:1.8.1'
//		}
//
//		exclude group: 'log4j', module: 'log4j'
//		exclude group: 'log4j', module: 'slf4j-simple'
//		exclude group: 'org.slf4j', module: 'slf4j-log4j12'
//		exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
//		exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
//		exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
//		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
//	}
//}
