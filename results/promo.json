{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Declaration redundancy",
  "type": "Access static member via instance reference",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Static member 'java.lang.Thread.sleep(long)' accessed via instance reference",
  "detailsInfo": "Reports references to `static` methods and fields via a class instance rather than the class itself.\n\nEven though referring to static members via instance variables is allowed by The Java Language Specification,\nthis makes the code confusing as the reader may think that the result of the method depends on the instance.\n\nThe quick-fix replaces the instance variable with the class name.\n\nExample:\n\n\n      String s1 = s.valueOf(0);\n\nAfter the quick-fix is applied:\n\n\n      String s = String.valueOf(0);\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/nio/groupchat/GroupChatClient.java",
      "language": "JAVA",
      "line": 97,
      "offset": 24,
      "length": 28,
      "code": {
        "startLine": 95,
        "length": 28,
        "offset": 93,
        "surroundingCode": "                    chatClient.readInfo();\n                    try {\n                        Thread.currentThread().sleep(3000);\n                    }catch (InterruptedException e) {\n                        e.printStackTrace();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "AccessStaticViaInstance"
  },
  "hash": "-4107167146127726402"
},{
  "tool": "Code Inspection",
  "category": "Declaration redundancy",
  "type": "Access static member via instance reference",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Static member 'java.nio.channels.SocketChannel.open(java.net.SocketAddress)' accessed via instance reference",
  "detailsInfo": "Reports references to `static` methods and fields via a class instance rather than the class itself.\n\nEven though referring to static members via instance variables is allowed by The Java Language Specification,\nthis makes the code confusing as the reader may think that the result of the method depends on the instance.\n\nThe quick-fix replaces the instance variable with the class name.\n\nExample:\n\n\n      String s1 = s.valueOf(0);\n\nAfter the quick-fix is applied:\n\n\n      String s = String.valueOf(0);\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/nio/groupchat/GroupChatClient.java",
      "language": "JAVA",
      "line": 27,
      "offset": 24,
      "length": 18,
      "code": {
        "startLine": 25,
        "length": 18,
        "offset": 76,
        "surroundingCode": "        selector = Selector.open();\n        //连接服务器\n        socketChannel = socketChannel.open(new InetSocketAddress(\"127.0.0.1\", PORT));\n        //设置非阻塞\n        socketChannel.configureBlocking(false);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "AccessStaticViaInstance"
  },
  "hash": "-4481113632916212482"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment to static field from instance context",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Assignment to static field <code>isconnection</code> from instance context",
  "detailsInfo": "Reports assignment to, or modification of `static` fields from within an instance method.\n\nAlthough legal, such assignments are tricky to do\nsafely and are often a result of marking fields `static` inadvertently.\n\n**Example:**\n\n\n      class Counter {\n        private static int count = 0;\n\n        void increment() {\n          // Warning: updating a static field\n          // from an instance method\n          count++;\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/queue/ConsumerTool.java",
      "language": "JAVA",
      "line": 45,
      "offset": 2,
      "length": 12,
      "code": {
        "startLine": 43,
        "length": 12,
        "offset": 128,
        "surroundingCode": "\t\tconnection.setExceptionListener((javax.jms.ExceptionListener) this);\n\t\tSystem.out.println(\"Consumer:->Begin listening...\");\n\t\tisconnection = true;\n\t\t// 开始监听\n\t\tMessage message = consumer.receive();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "AssignmentToStaticFieldFromInstanceMethod"
  },
  "hash": "-207659100031035106"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment to static field from instance context",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Assignment to static field <code>isconnection</code> from instance context",
  "detailsInfo": "Reports assignment to, or modification of `static` fields from within an instance method.\n\nAlthough legal, such assignments are tricky to do\nsafely and are often a result of marking fields `static` inadvertently.\n\n**Example:**\n\n\n      class Counter {\n        private static int count = 0;\n\n        void increment() {\n          // Warning: updating a static field\n          // from an instance method\n          count++;\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/topic/ConsumerTool.java",
      "language": "JAVA",
      "line": 43,
      "offset": 2,
      "length": 12,
      "code": {
        "startLine": 41,
        "length": 12,
        "offset": 80,
        "surroundingCode": "\t\tconsumer.setMessageListener(this);\n\t\tconnection.setExceptionListener(this);\n\t\tisconnection = true;\n\t\tSystem.out.println(\"Consumer:->Begin listening...\");\n\t\t// 开始监听"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "AssignmentToStaticFieldFromInstanceMethod"
  },
  "hash": "-4592565095859073030"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment to static field from instance context",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Assignment to static field <code>isconnection</code> from instance context",
  "detailsInfo": "Reports assignment to, or modification of `static` fields from within an instance method.\n\nAlthough legal, such assignments are tricky to do\nsafely and are often a result of marking fields `static` inadvertently.\n\n**Example:**\n\n\n      class Counter {\n        private static int count = 0;\n\n        void increment() {\n          // Warning: updating a static field\n          // from an instance method\n          count++;\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/topic/ConsumerTool.java",
      "language": "JAVA",
      "line": 82,
      "offset": 2,
      "length": 12,
      "code": {
        "startLine": 80,
        "length": 12,
        "offset": 59,
        "surroundingCode": "\t@Override\n\tpublic void onException(JMSException arg0) {\n\t\tisconnection = false;\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "AssignmentToStaticFieldFromInstanceMethod"
  },
  "hash": "9126654378531436354"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment to static field from instance context",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Assignment to static field <code>PrometheusConfiguration.histogramRequestTimer</code> from instance context",
  "detailsInfo": "Reports assignment to, or modification of `static` fields from within an instance method.\n\nAlthough legal, such assignments are tricky to do\nsafely and are often a result of marking fields `static` inadvertently.\n\n**Example:**\n\n\n      class Counter {\n        private static int count = 0;\n\n        void increment() {\n          // Warning: updating a static field\n          // from an instance method\n          count++;\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-web/src/main/java/com/taotao/cloud/web/interceptor/PrometheusMetricsInterceptor.java",
      "language": "JAVA",
      "line": 61,
      "offset": 2,
      "length": 45,
      "code": {
        "startLine": 59,
        "length": 45,
        "offset": 58,
        "surroundingCode": "\t\tinprogressRequests.labels(requestURI, method).inc();\n\n\t\tPrometheusConfiguration.histogramRequestTimer = requestLatencyHistogram\n\t\t\t.labels(requestURI, method, String.valueOf(status)).startTimer();\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-web.main",
    "inspectionName": "AssignmentToStaticFieldFromInstanceMethod"
  },
  "hash": "3791529556999727228"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment to static field from instance context",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Assignment to static field <code>PrometheusConfiguration.requestTimer</code> from instance context",
  "detailsInfo": "Reports assignment to, or modification of `static` fields from within an instance method.\n\nAlthough legal, such assignments are tricky to do\nsafely and are often a result of marking fields `static` inadvertently.\n\n**Example:**\n\n\n      class Counter {\n        private static int count = 0;\n\n        void increment() {\n          // Warning: updating a static field\n          // from an instance method\n          count++;\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-web/src/main/java/com/taotao/cloud/web/interceptor/PrometheusMetricsInterceptor.java",
      "language": "JAVA",
      "line": 64,
      "offset": 2,
      "length": 36,
      "code": {
        "startLine": 62,
        "length": 36,
        "offset": 72,
        "surroundingCode": "\t\t\t.labels(requestURI, method, String.valueOf(status)).startTimer();\n\n\t\tPrometheusConfiguration.requestTimer = requestLatency\n\t\t\t.labels(requestURI, method, String.valueOf(status)).startTimer();\n\t\treturn true;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-web.main",
    "inspectionName": "AssignmentToStaticFieldFromInstanceMethod"
  },
  "hash": "40296773475728743"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment to static field from instance context",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Assignment to static field <code>DiffParseFunction.diffItemsToLogContentService</code> from instance context",
  "detailsInfo": "Reports assignment to, or modification of `static` fields from within an instance method.\n\nAlthough legal, such assignments are tricky to do\nsafely and are often a result of marking fields `static` inadvertently.\n\n**Example:**\n\n\n      class Counter {\n        private static int count = 0;\n\n        void increment() {\n          // Warning: updating a static field\n          // from an instance method\n          count++;\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-logger/src/main/java/com/taotao/cloud/logger/mztlog/service/impl/DiffParseFunction.java",
      "language": "JAVA",
      "line": 66,
      "offset": 8,
      "length": 46,
      "code": {
        "startLine": 64,
        "length": 46,
        "offset": 119,
        "surroundingCode": "\n    public void setDiffItemsToLogContentService(IDiffItemsToLogContentService diffItemsToLogContentService) {\n        DiffParseFunction.diffItemsToLogContentService = diffItemsToLogContentService;\n    }\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-logger.main",
    "inspectionName": "AssignmentToStaticFieldFromInstanceMethod"
  },
  "hash": "-7833217429369965640"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>vCircle</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/base/RectificationController.java",
      "language": "JAVA",
      "line": 205,
      "offset": 15,
      "length": 7,
      "code": {
        "startLine": 203,
        "length": 7,
        "offset": 79,
        "surroundingCode": "\t\tif (cols > 0) {\n\t\t\tfor (int i = 0; i < circles.cols(); i++) {\n\t\t\t\tBigDecimal vCircle[] = circles.get(0, i);\n\t\t\t\tPoint center = new Point(vCircle[0], vCircle[1]);\n\t\t\t\tint radius = (int) Math.round(vCircle[2]);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "-6802043488468694562"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>vCircle</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/base/RectificationController.java",
      "language": "JAVA",
      "line": 222,
      "offset": 15,
      "length": 7,
      "code": {
        "startLine": 220,
        "length": 7,
        "offset": 89,
        "surroundingCode": "\t\tif (circles.cols() > 0) {\n\t\t\tfor (int i = 0; i < circles.cols(); i++) {\n\t\t\t\tBigDecimal vCircle[] = circles.get(0, i);\n\t\t\t\tPoint center = new Point(vCircle[0], vCircle[1]);\n\t\t\t\tint radius = (int) Math.round(vCircle[2]);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "5486668848267893516"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>vCircle</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/base/RectificationController.java",
      "language": "JAVA",
      "line": 238,
      "offset": 15,
      "length": 7,
      "code": {
        "startLine": 236,
        "length": 7,
        "offset": 89,
        "surroundingCode": "\t\tif (circles.cols() > 0) {\n\t\t\tfor (int i = 0; i < circles.cols(); i++) {\n\t\t\t\tBigDecimal vCircle[] = circles.get(0, i);\n\t\t\t\tPoint center = new Point(vCircle[0], vCircle[1]);\n\t\t\t\tint radius = (int) Math.round(vCircle[2]);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "-7726319797018728745"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>vCircle</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/base/RectificationController.java",
      "language": "JAVA",
      "line": 254,
      "offset": 15,
      "length": 7,
      "code": {
        "startLine": 252,
        "length": 7,
        "offset": 89,
        "surroundingCode": "\t\tif (circles.cols() > 0) {\n\t\t\tfor (int i = 0; i < circles.cols(); i++) {\n\t\t\t\tBigDecimal vCircle[] = circles.get(0, i);\n\t\t\t\tPoint center = new Point(vCircle[0], vCircle[1]);\n\t\t\t\tint radius = (int) Math.round(vCircle[2]);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "5336814110940205215"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>fontcolor</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-gateway/src/main/java/com/taotao/cloud/gateway/captcha/GifCaptcha.java",
      "language": "JAVA",
      "line": 45,
      "offset": 9,
      "length": 9,
      "code": {
        "startLine": 43,
        "length": 9,
        "offset": 61,
        "surroundingCode": "\t\t\tgifEncoder.setRepeat(0);\n\t\t\tBufferedImage frame;\n\t\t\tColor fontcolor[] = new Color[len];\n\t\t\tfor (int i = 0; i < len; i++) {\n\t\t\t\tfontcolor[i] = new Color(20 + num(110), 20 + num(110), 20 + num(110));"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-gateway.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "-5356699256934258291"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>bytes</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-disruptor/src/main/java/com/taotao/cloud/disruptor/util/StringUtils.java",
      "language": "JAVA",
      "line": 1297,
      "offset": 7,
      "length": 5,
      "code": {
        "startLine": 1295,
        "length": 5,
        "offset": 57,
        "surroundingCode": "\t\t}\n\t\tList<String> ret = new ArrayList<String>();\n\t\tbyte bytes[] = src.getBytes();\n\t\tint curPoint = 0;\n\t\tfor (int i = 0; i < bytes.length; i++) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-disruptor.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "-1517752154992705267"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>keyValues</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-disruptor/src/main/java/com/taotao/cloud/disruptor/util/StringUtils.java",
      "language": "JAVA",
      "line": 1191,
      "offset": 9,
      "length": 9,
      "code": {
        "startLine": 1189,
        "length": 9,
        "offset": 146,
        "surroundingCode": "\tpublic static Map<String, String> getMapFromQueryParamString(String str) {\n\t\tMap<String, String> param = new HashMap<String, String>();\n\t\tString keyValues[] = str.split(\"`\");\n\t\tfor (int i = 0; i < keyValues.length; i++) {\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-disruptor.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "6344113468625395954"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>bytesSrc</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-disruptor/src/main/java/com/taotao/cloud/disruptor/util/StringUtils.java",
      "language": "JAVA",
      "line": 1211,
      "offset": 7,
      "length": 8,
      "code": {
        "startLine": 1209,
        "length": 8,
        "offset": 120,
        "surroundingCode": "\tpublic static String replaceAll(String src, String tar, String str) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tbyte bytesSrc[] = src.getBytes();\n\n\t\tbyte bytes[] = str.getBytes();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-disruptor.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "-5434333363009285482"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of local variable <code>bytes</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-disruptor/src/main/java/com/taotao/cloud/disruptor/util/StringUtils.java",
      "language": "JAVA",
      "line": 1213,
      "offset": 7,
      "length": 5,
      "code": {
        "startLine": 1211,
        "length": 5,
        "offset": 44,
        "surroundingCode": "\t\tbyte bytesSrc[] = src.getBytes();\n\n\t\tbyte bytes[] = str.getBytes();\n\t\tint point = 0;\n\t\tfor (int i = 0; i < bytes.length; i++) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-disruptor.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "8305297355496676683"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of parameter <code>bytesSrc</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-disruptor/src/main/java/com/taotao/cloud/disruptor/util/StringUtils.java",
      "language": "JAVA",
      "line": 1236,
      "offset": 41,
      "length": 8,
      "code": {
        "startLine": 1234,
        "length": 8,
        "offset": 58,
        "surroundingCode": "\t * @return\n\t */\n\tprivate static boolean isStartWith(byte bytesSrc[], int startSrc,\n\t\tbyte bytesTar[], int startTar) {\n\t\tfor (int j = startTar; j < bytesTar.length; j++) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-disruptor.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "-3613815191794530408"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "C-style array declaration",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "C-style array declaration of parameter <code>bytesTar</code>",
  "detailsInfo": "Reports array declarations written in C-style syntax in which the array indicator brackets are placed after the variable name or after the method parameter list.\n\nExample:\n\n\n      public String process(String value[])[] {\n        return value;\n      }\n\nMost code styles prefer Java-style array declarations in which the array indicator brackets are attached to the type name, for example:\n\n\n      public String[] process(String[] value) {\n        return value;\n      }\n\nConfigure the inspection:\n\n\nUse the **Ignore C-style declarations in variables** option to report C-style array declaration of method return types only.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-disruptor/src/main/java/com/taotao/cloud/disruptor/util/StringUtils.java",
      "language": "JAVA",
      "line": 1237,
      "offset": 7,
      "length": 8,
      "code": {
        "startLine": 1235,
        "length": 8,
        "offset": 79,
        "surroundingCode": "\t */\n\tprivate static boolean isStartWith(byte bytesSrc[], int startSrc,\n\t\tbyte bytesTar[], int startTar) {\n\t\tfor (int j = startTar; j < bytesTar.length; j++) {\n\t\t\tif (bytesSrc[startSrc + j] != bytesTar[j]) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-disruptor.main",
    "inspectionName": "CStyleArrayDeclaration"
  },
  "hash": "-6247080245549460595"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c8_rabbitmq/java/helloworld/Consumer.java",
      "language": "JAVA",
      "line": 36,
      "offset": 67,
      "length": 7,
      "code": {
        "startLine": 34,
        "length": 7,
        "offset": 196,
        "surroundingCode": "                String result = jedis.set(messageId, \"0\");\n                if(result != null && result.equalsIgnoreCase(\"OK\")) {\n                    System.out.println(\"接收到消息：\" + new String(body, \"UTF-8\"));\n                    //2. 消费成功，set messageId 1\n                    jedis.set(messageId,\"1\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "-185651202628523496"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/LoginThread.java",
      "language": "JAVA",
      "line": 22,
      "offset": 86,
      "length": 7,
      "code": {
        "startLine": 20,
        "length": 7,
        "offset": 136,
        "surroundingCode": "\t\t\tSocket socket=listener.accept();\n\t\t\t//3获取输入输出流\n\t\t\tBufferedReader br=new BufferedReader(new InputStreamReader(socket.getInputStream(),\"utf-8\"));\n\t\t\tBufferedWriter bw=new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(),\"utf-8\"));\n\t\t\t//4接收客户端发送的数据{id : 1001, pwd :123}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "5786394324554808383"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/LoginThread.java",
      "language": "JAVA",
      "line": 23,
      "offset": 88,
      "length": 7,
      "code": {
        "startLine": 21,
        "length": 7,
        "offset": 199,
        "surroundingCode": "\t\t\t//3获取输入输出流\n\t\t\tBufferedReader br=new BufferedReader(new InputStreamReader(socket.getInputStream(),\"utf-8\"));\n\t\t\tBufferedWriter bw=new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(),\"utf-8\"));\n\t\t\t//4接收客户端发送的数据{id : 1001, pwd :123}\n\t\t\tString json=br.readLine();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "3492100164081452655"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 36,
      "offset": 88,
      "length": 7,
      "code": {
        "startLine": 34,
        "length": 7,
        "offset": 151,
        "surroundingCode": "\t\tSocket socket = new Socket(\"192.168.0.103\", 6666);\n\t\t// 2获取流\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream(), \"utf-8\"));\n\t\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), \"utf-8\"));\n\t\t// 3获取用户信息"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "-6070427268495073949"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 37,
      "offset": 90,
      "length": 7,
      "code": {
        "startLine": 35,
        "length": 7,
        "offset": 199,
        "surroundingCode": "\t\t// 2获取流\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream(), \"utf-8\"));\n\t\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), \"utf-8\"));\n\t\t// 3获取用户信息\n\t\tString json = getRegistInfo();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "2695614929204951413"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 72,
      "offset": 88,
      "length": 7,
      "code": {
        "startLine": 70,
        "length": 7,
        "offset": 151,
        "surroundingCode": "\t\tSocket socket = new Socket(\"192.168.0.103\", 7777);\n\t\t// 2获取流\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream(), \"utf-8\"));\n\t\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), \"utf-8\"));\n\t\t// 3获取用户信息"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "5639184119514311209"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 73,
      "offset": 90,
      "length": 7,
      "code": {
        "startLine": 71,
        "length": 7,
        "offset": 199,
        "surroundingCode": "\t\t// 2获取流\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream(), \"utf-8\"));\n\t\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), \"utf-8\"));\n\t\t// 3获取用户信息\n\t\tString json = getLoginInfo();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "-3923146576168037601"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaweb/src/main/java/com/taotao/cloud/java/javaweb/p5_servlet/WebProject/java/cookies/CookieServlet3.java",
      "language": "JAVA",
      "line": 21,
      "offset": 57,
      "length": 7,
      "code": {
        "startLine": 19,
        "length": 7,
        "offset": 186,
        "surroundingCode": "    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        Cookie cookie =new Cookie(URLEncoder.encode(\"姓名\",\"UTF-8\"),URLEncoder.encode(\"张三\",\"UTF-8\"));\n\n        cookie.setPath(\"/WebProject_war_exploded/get\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaweb.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "2882219584757624519"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaweb/src/main/java/com/taotao/cloud/java/javaweb/p5_servlet/WebProject/java/cookies/CookieServlet3.java",
      "language": "JAVA",
      "line": 21,
      "offset": 89,
      "length": 7,
      "code": {
        "startLine": 19,
        "length": 7,
        "offset": 218,
        "surroundingCode": "    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        Cookie cookie =new Cookie(URLEncoder.encode(\"姓名\",\"UTF-8\"),URLEncoder.encode(\"张三\",\"UTF-8\"));\n\n        cookie.setPath(\"/WebProject_war_exploded/get\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaweb.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "6402790027066270793"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/nio/TraditionalServer.java",
      "language": "JAVA",
      "line": 27,
      "offset": 57,
      "length": 7,
      "code": {
        "startLine": 25,
        "length": 7,
        "offset": 144,
        "surroundingCode": "            while (true) {\n                int nread = input.read(byteArray, 0, 4096);\n                System.out.println(new String(byteArray, \"UTF-8\"));\n                if (-1 == nread) {\n                    break;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "-4121633686361519285"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/netty/handler2/MyServerHandler.java",
      "language": "JAVA",
      "line": 21,
      "offset": 44,
      "length": 24,
      "code": {
        "startLine": 19,
        "length": 24,
        "offset": 76,
        "surroundingCode": "        msg.readBytes(buffer);\n\n        String message = new String(buffer, Charset.forName(\"utf-8\"));\n\n        System.out.println(\"服务端接收到的消息内容： \" + message);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "2535748733882707461"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/netty/handler2/MyServerHandler.java",
      "language": "JAVA",
      "line": 26,
      "offset": 86,
      "length": 24,
      "code": {
        "startLine": 24,
        "length": 24,
        "offset": 149,
        "surroundingCode": "        System.out.println(\"服务端接收到的消息数量： \" + (++this.count));\n\n        ByteBuf responseByteBuf = Unpooled.copiedBuffer(UUID.randomUUID().toString(), Charset.forName(\"utf-8\"));\n        ctx.writeAndFlush(responseByteBuf);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "5146670392401101602"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-stock/taotao-cloud-stock-api/src/main/java/com/taotao/cloud/stock/api/common/util/xss/XssHttpServletRequestWrapper.java",
      "language": "JAVA",
      "line": 48,
      "offset": 80,
      "length": 7,
      "code": {
        "startLine": 46,
        "length": 7,
        "offset": 128,
        "surroundingCode": "        //xss过滤\n        json = xssEncode(json);\n        final ByteArrayInputStream bis = new ByteArrayInputStream(json.getBytes(\"utf-8\"));\n        return new ServletInputStream() {\n            @Override"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-stock.taotao-cloud-stock-api.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "3753080269623900473"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.ISO_8859_1 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-web/src/main/java/com/taotao/cloud/web/utils/DownUtil.java",
      "language": "JAVA",
      "line": 114,
      "offset": 66,
      "length": 12,
      "code": {
        "startLine": 112,
        "length": 12,
        "offset": 121,
        "surroundingCode": "\t\t\t} else if (agent.contains(\"mozilla\")) {\n\t\t\t\t//火狐，谷歌\n\t\t\t\tcodeFileName = new String(fileName.getBytes(Constants.UTF_8), \"iso-8859-1\");\n\t\t\t} else {\n\t\t\t\tcodeFileName = URLEncoder.encode(fileName, Constants.UTF_8);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-web.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "-8710099061788228900"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.UTF_8 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-web/src/main/java/com/taotao/cloud/web/utils/DownUtil.java",
      "language": "JAVA",
      "line": 119,
      "offset": 65,
      "length": 7,
      "code": {
        "startLine": 117,
        "length": 7,
        "offset": 115,
        "surroundingCode": "\t\t\t}\n\t\t\tresponse.setHeader(\"Content-Disposition\",\n\t\t\t\t\"attachment;filename=\" + new String(codeFileName.getBytes(), \"utf-8\"));\n\t\t\tOutputStream os = response.getOutputStream();\n\t\t\tint i;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-web.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "-5629297954230178794"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Standard 'Charset' object can be used",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "StandardCharsets.ISO_8859_1 can be used instead",
  "detailsInfo": "Reports methods and constructors in which constant charset `String` literal (for example, `\"UTF-8\"`) can be replaced with the predefined `StandardCharsets.UTF_8` code.\n\nThe code after the fix may work faster, because the charset lookup becomes unnecessary.\nAlso, catching `UnsupportedEncodingException` may become unnecessary as well. In this case,\nthe catch block will be removed automatically.\n\nExample:\n\n\n      try {\n        byte[] bytes = \"str\".getBytes(\"UTF-8\");\n      } catch (UnsupportedEncodingException e) {\n      }\n\nAfter quick-fix is applied:\n\n\n      byte[] bytes = \"str\".getBytes(StandardCharsets.UTF_8);\n\nThe inspection is available in Java 7 and later.\n\nNew in 2018.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-web/src/main/java/com/taotao/cloud/web/utils/DownUtil.java",
      "language": "JAVA",
      "line": 71,
      "offset": 73,
      "length": 12,
      "code": {
        "startLine": 69,
        "length": 12,
        "offset": 128,
        "surroundingCode": "\t\t\t} else if (agent.contains(\"mozilla\")) {\n\t\t\t\t//火狐，谷歌\n\t\t\t\tcodeFileName = new String(fileName.getBytes(StandardCharsets.UTF_8), \"iso-8859-1\");\n\t\t\t} else {\n\t\t\t\tcodeFileName = URLEncoder.encode(fileName, Constants.UTF_8);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-web.main",
    "inspectionName": "CharsetObjectCanBeUsed"
  },
  "hash": "7996069434723316285"
},{
  "tool": "Code Inspection",
  "category": "Class",
  "type": "Class name same as ancestor name",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Class name <code>Builder</code> is the same as one of its superclass' names",
  "detailsInfo": "Reports classes that have the same name as one of their superclasses, while their fully qualified names remain different. Such class names may be very confusing.\n\n**Example:**\n\n\n      package util;\n      abstract class Iterable<T> implements java.lang.Iterable<T> {}\n\nA quick-fix that renames such classes is available only in the editor.",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/proto/MyRequest.java",
      "language": "JAVA",
      "line": 285,
      "offset": 30,
      "length": 7,
      "code": {
        "startLine": 283,
        "length": 7,
        "offset": 78,
        "surroundingCode": "     * Protobuf type {@code  MyRequest}\n     */\n    public static final class Builder extends\n            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements\n            // @@protoc_insertion_point(builder_implements: MyRequest)"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "ClassNameSameAsAncestorName"
  },
  "hash": "4237434211094190209"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (66 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/apollo/ApolloController.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "///*\n// * Copyright (c) 2020-2030, Shuigedeng (981376577@qq.com & https://blog.taotaocloud.top/).\n// *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "1174618637192980482"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (12 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c4_spring/p3/java/aspect/MyAspect.java",
      "language": "JAVA",
      "line": 17,
      "offset": 4,
      "length": 2,
      "code": {
        "startLine": 15,
        "length": 2,
        "offset": 28,
        "surroundingCode": "    public void pc(){}\n\n    /*@Before(\"pc()\") // 前置通知\n    public void mybefore(JoinPoint a) {\n        System.out.println(\"target:\"+a.getTarget());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7778901955068012634"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (7 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c4_spring/p3/java/aspect/MyAspect.java",
      "language": "JAVA",
      "line": 30,
      "offset": 4,
      "length": 2,
      "code": {
        "startLine": 28,
        "length": 2,
        "offset": 13,
        "surroundingCode": "    }*/\n\n    /*@Around(\"pc()\") // 环绕通知\n    public Object myInterceptor(ProceedingJoinPoint p) throws Throwable {\n        System.out.println(\"interceptor1~~~~\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-4111446582069064773"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (19 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c3_mybatis/mybatisadvance/java/dao/UserDAO.java",
      "language": "JAVA",
      "line": 19,
      "offset": 4,
      "length": 2,
      "code": {
        "startLine": 17,
        "length": 2,
        "offset": 78,
        "surroundingCode": "    List<User> queryUserByUsernameorId(User user); // ${username}  ${id}\n\n    /*@Select(\"SELECT id,username,password,gender,regist_time FROM t_user\")\n    List<User> queryUsers();\n    @Select(\"SELECT id,username,password,gender,regist_time\\n\" +"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5528074236842243135"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (4 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c3_mybatis/mybatisadvance/test/MyBatisTest.java",
      "language": "JAVA",
      "line": 101,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 99,
        "length": 2,
        "offset": 52,
        "surroundingCode": "        User user2 = mapper.queryUserById2(10012);\n\n//        User user2 = new User();\n//        user2.setId(10013);\n//        user2.setUsername(\"李四\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "860712459746741530"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (7 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c3_mybatis/mybatisadvance/test/MyBatisTest.java",
      "language": "JAVA",
      "line": 15,
      "offset": 8,
      "length": 2,
      "code": {
        "startLine": 13,
        "length": 2,
        "offset": 96,
        "surroundingCode": "    public void test1(){\n        UserDAO mapper = MyBatisUtil.getMapper(UserDAO.class);\n        /*List<User> users = mapper.queryUsers();\n        for (User user : users) {\n            System.out.println(user);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2535518557414119126"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (4 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c6_elasticsearch/java/test/Demo12.java",
      "language": "JAVA",
      "line": 43,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 41,
        "length": 2,
        "offset": 21,
        "surroundingCode": "\n        //4. 获取返回结果\n//        ExtendedStats agg = resp.getAggregations().get(\"agg\");\n//        double max = agg.getMax();\n//        double min = agg.getMin();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8964027516574370076"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaweb/src/main/java/com/taotao/cloud/java/javaweb/p5_servlet/EmpProject/java/controller/CreateCodeController.java",
      "language": "JAVA",
      "line": 18,
      "offset": 8,
      "length": 2,
      "code": {
        "startLine": 16,
        "length": 2,
        "offset": 179,
        "surroundingCode": "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    \t//import cn.dsna.util.images.ValidateCode;\n        //ValidateCode validateCode = new ValidateCode(200,30,4,20);\n        //String codes = validateCode.getCode();\n        HttpSession session = request.getSession();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaweb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "4587682680610565619"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (9 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/topic/ConsumerTest.java",
      "language": "JAVA",
      "line": 23,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 21,
        "length": 2,
        "offset": 44,
        "surroundingCode": "         * 如果发生异常，则重启consumer\n         */\n\t\t/*while (true) {\n\t\t\tSystem.out.println(t1.isAlive());\n\t\t\tif (!t1.isAlive()) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5489831458485092251"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/topic/ConsumerTest.java",
      "language": "JAVA",
      "line": 33,
      "offset": 8,
      "length": 2,
      "code": {
        "startLine": 31,
        "length": 2,
        "offset": 41,
        "surroundingCode": "\t\t}*/\n        // 延时500毫秒之后停止接受消息\n        // Thread.sleep(500);\n        // consumer.close();\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-6569962181887161272"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/netty/bytebuf/ByteBufTest0.java",
      "language": "JAVA",
      "line": 15,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 13,
        "length": 2,
        "offset": 11,
        "surroundingCode": "        }\n\n//        for (int i = 0; i < buffer.capacity(); ++i) {\n//            System.out.println(buffer.getByte(i));\n//        }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "7732363445700579103"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/test/IOCTest_Autowired.java",
      "language": "JAVA",
      "line": 20,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 18,
        "length": 2,
        "offset": 38,
        "surroundingCode": "\t\tSystem.out.println(bookService);\n\n\t\t//BookDao bean = applicationContext.getBean(BookDao.class);\n\t\t//System.out.println(bean);\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-4268016964020665786"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (9 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-hudi/src/main/java/com/taotao/cloud/bigdata/hudi/oss/HudiOssDemo.java",
      "language": "JAVA",
      "line": 55,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 53,
        "length": 2,
        "offset": 23,
        "surroundingCode": "\t\t\t.save(basePath);\n\n\t\t// Dataset<Row> roViewDF = spark\n\t\t// \t.read()\n\t\t// \t.format(\"org.apache.hudi\")"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-hudi.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-8623900719207411063"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (4 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-hadoop/src/main/java/com/taotao/cloud/bigdata/hadoop/mr/component/wordcount/WordCountReducer.java",
      "language": "JAVA",
      "line": 46,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 44,
        "length": 2,
        "offset": 20,
        "surroundingCode": "\t\tint count = 0;\n\n\t\t/*Iterator<IntWritable> iterator = values.iterator();\n\t\twhile(iterator.hasNext()){\n\t\t\tcount += iterator.next().get();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-hadoop.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "7467051022939137107"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-hadoop/src/main/java/com/taotao/cloud/bigdata/hadoop/mr/component/provinceflow/FlowCount.java",
      "language": "JAVA",
      "line": 82,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 80,
        "length": 2,
        "offset": 105,
        "surroundingCode": "\tpublic static void main(String[] args) throws Exception {\n\t\tConfiguration conf = new Configuration();\n\t\t/*conf.set(\"mapreduce.framework.name\", \"yarn\");\n\t\tconf.set(\"yarn.resoucemanager.hostname\", \"mini1\");*/\n\t\tJob job = Job.getInstance(conf);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-hadoop.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-4431321540683811271"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/api/controller/tools/codegen/GeneratorController.java",
      "language": "JAVA",
      "line": 59,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 57,
        "length": 2,
        "offset": 53,
        "surroundingCode": "\tprivate final IGenConfigService genConfigService;\n\n\t//@Value(\"${generator.enabled:false}\")\n\t//private Boolean generatorEnabled = false;\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "4000958768421310608"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/api/controller/tools/codegen/GeneratorController.java",
      "language": "JAVA",
      "line": 87,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 85,
        "length": 2,
        "offset": 115,
        "surroundingCode": "\t\tList<ColumnConfig> columnInfos = generatorService.getColumns(tableName);\n\t\treturn Result.success(columnInfos);\n\t\t//return new ResponseEntity<>(PageUtil.toPage(columnInfos, columnInfos.size()),\n\t\t//\tHttpStatus.OK);\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7795556530888474610"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/api/controller/tools/codegen/GeneratorController.java",
      "language": "JAVA",
      "line": 118,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 116,
        "length": 2,
        "offset": 157,
        "surroundingCode": "\tpublic Result<Object> generator(@PathVariable String tableName,\n\t\t@PathVariable Integer type, HttpServletRequest request, HttpServletResponse response) {\n\t\t//if (!generatorEnabled && type == 0) {\n\t\t//\tthrow new BusinessException(\"此环境不允许生成代码，请选择预览或者下载查看！\");\n\t\t//}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-8789035114112999024"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (114 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/api/controller/tools/monitor/KafkaController.java",
      "language": "JAVA",
      "line": 21,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 19,
        "length": 2,
        "offset": 33,
        "surroundingCode": "public class KafkaController {\n\n\t//@Autowired\n\t//private IKafkaService kafkaService;\n\t//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "1806038333447579371"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (5 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/api/controller/manager/SensitiveWordsController.java",
      "language": "JAVA",
      "line": 45,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 43,
        "length": 2,
        "offset": 5,
        "surroundingCode": "\t}\n\n\t//@ApiOperation(value = \"分页获取\")\n\t//@GetMapping\n\t//public Result<IPage<SensitiveWord>> getByPage(PageVO page) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "1123037413337375818"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/task/quartz/PublishPostJob.java",
      "language": "JAVA",
      "line": 18,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 16,
        "length": 2,
        "offset": 56,
        "surroundingCode": "\t@Autowired\n\tprivate IScheduleService scheduleService;\n\t//@Autowired\n\t//private IPostsService postsService;\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2760517199672328457"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/forest/AmapClient.java",
      "language": "JAVA",
      "line": 29,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 27,
        "length": 2,
        "offset": 41,
        "surroundingCode": "\t * 将对象参数解析为JSON字符串，并放在请求的Body进行传输\n\t */\n\t//@Post(\"/register\")\n\t//String registerUser(@JSONBody MyUser user);\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-8839113281425110547"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/forest/AmapClient.java",
      "language": "JAVA",
      "line": 48,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 46,
        "length": 2,
        "offset": 25,
        "surroundingCode": "\t * 并放在请求的Body进行传输\n\t */\n\t//@Post(\"/message\")\n\t//String sendXmlMessage(@XMLBody MyMessage message);\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "4867078719421589801"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/forest/AmapClient.java",
      "language": "JAVA",
      "line": 64,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 62,
        "length": 2,
        "offset": 37,
        "surroundingCode": "\t * 注: 需要引入 google protobuf 依赖\n\t */\n\t//@Post(url = \"/message\", contentType = \"application/octet-stream\")\n\t//String sendProtobufMessage(@ProtobufBody ProtobufProto.MyMessage message);\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8646717763724448089"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (6 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/forest/AmapClient.java",
      "language": "JAVA",
      "line": 73,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 71,
        "length": 2,
        "offset": 73,
        "surroundingCode": "\tMap upload(@DataFile(\"file\") String filePath, OnProgress onProgress);\n\n\t//Map result = myClient.upload(\"D:\\\\TestUpload\\\\xxx.jpg\", progress -> {\n\t//\tSystem.out.println(\"progress: \" + Math.round(progress.getRate() * 100) + \"%\");  // 已上传百分比\n\t//\tif (progress.isDone()) {   // 是否上传完成"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-3760172476255324542"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (6 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/forest/AmapClient.java",
      "language": "JAVA",
      "line": 101,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 99,
        "length": 2,
        "offset": 57,
        "surroundingCode": "\tFile downloadFile(String dir, OnProgress onProgress);\n\n\t//File file = myClient.downloadFile(\"D:\\\\TestDownload\", progress -> {\n\t//\tSystem.out.println(\"progress: \" + Math.round(progress.getRate() * 100) + \"%\");  // 已下载百分比\n\t//\tif (progress.isDone()) {   // 是否下载完成"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "1733232053830409205"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (53 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/forest/MyAuthLifeCycle.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.sys.biz.forest;\n//\n//import com.dtflys.forest.extensions.BasicAuth;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "4785439444715516324"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (61 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/service/IndexService.java",
      "language": "JAVA",
      "line": 8,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 6,
        "length": 2,
        "offset": 34,
        "surroundingCode": "\npublic interface IndexService {\n\t///**\n\t// * 创建索引映射\n\t// * @param indexname"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8662019773685054089"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (27 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/service/IFileService.java",
      "language": "JAVA",
      "line": 36,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 34,
        "length": 2,
        "offset": 61,
        "surroundingCode": "\tUploadFileVO uploadFile(String type, MultipartFile file);\n\n\t// /**\n\t//  * 删除文件\n\t//  *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7814287498585936245"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (71 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/service/impl/DictItemServiceImpl.java",
      "language": "JAVA",
      "line": 41,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 39,
        "length": 2,
        "offset": 56,
        "surroundingCode": "\timplements IDubboDictItemService, IDictItemService {\n\n\t//private final static QDictItem SYS_DICT_ITEM = QDictItem.sysDictItem;\n\t//private final static BooleanExpression PREDICATE = SYS_DICT_ITEM.delFlag.eq(false);\n\t//private final static OrderSpecifier<LocalDateTime> CREATE_TIME_DESC = SYS_DICT_ITEM.createTime.desc();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-6072384347362459439"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (7 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/service/impl/RoleMenuServiceImpl.java",
      "language": "JAVA",
      "line": 52,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 50,
        "length": 2,
        "offset": 15,
        "surroundingCode": "\n\t\t// 批量添加数据\n\t\t//List<RoleMenu> collect = menuIds.stream()\n\t\t//\t.map(resourceId -> RoleMenu.builder()\n\t\t//\t\t.roleId(roleId)"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-427864757540110435"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (27 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/mapstruct/IDictMapStruct.java",
      "language": "JAVA",
      "line": 42,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 40,
        "length": 2,
        "offset": 70,
        "surroundingCode": "\tIDictMapStruct INSTANCE = Mappers.getMapper(IDictMapStruct.class);\n\n\t///**\n\t// * DictDTO转SysDict\n\t// *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-9175660192147982990"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (44 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/mapstruct/IFileMapStruct.java",
      "language": "JAVA",
      "line": 50,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 48,
        "length": 2,
        "offset": 35,
        "surroundingCode": "\tFileVO fileToFileVO(File file);\n\n\t// /**\n\t//  * SysUser转AddUserVO\n\t//  *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8636106489854271258"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (38 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-api/src/main/java/com/taotao/cloud/auth/api/tmp/config/CustomOAuth2AuthenticationSuccessHandler.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.auth.api.tmp.config;\n//\n//import groovy.util.logging.Log4j2;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-3108245752814721076"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (91 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-api/src/main/java/com/taotao/cloud/auth/api/tmp/config/Oauth2AuthorizationServerConfig.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.auth.api.tmp.config;\n//\n//import static org.springframework.security.oauth2.server.authorization.config.TokenSettings.ACCESS_TOKEN_TIME_TO_LIVE;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-241665313328873685"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (27 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-api/src/main/java/com/taotao/cloud/auth/api/tmp/config/CustomizedAccessDeniedHandler.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.auth.api.tmp.config;\n//\n//import com.taotao.cloud.common.enums.ResultEnum;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-678740666269028175"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (27 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-api/src/main/java/com/taotao/cloud/auth/api/tmp/social/user/GiteeOAuth2User.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.auth.api.tmp.social.user;\n//\n//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-8337848698700443825"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (39 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-api/src/main/java/com/taotao/cloud/auth/api/oauth2_server/handler/OauthLogoutSuccessHandler.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "///*\n// * Copyright (c) 2020-2030, Shuigedeng (981376577@qq.com & https://blog.taotaocloud.top/).\n// *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8641418502562919783"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (14 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-api/src/main/java/com/taotao/cloud/auth/api/oauth2_server/authentication/mobile/MobileAuthenticationProvider.java",
      "language": "JAVA",
      "line": 1,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 1,
        "surroundingCode": " /*\n//  * Copyright (c) 2017-2020 original authors\n//  *\n//  * Licensed under the Apache License, Version 2.0 (the \"License\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-3849807958173129875"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (58 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-api/src/main/java/com/taotao/cloud/auth/api/oauth2_server/authentication/mobile/MobileAuthenticationProvider.java",
      "language": "JAVA",
      "line": 16,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 14,
        "length": 2,
        "offset": 44,
        "surroundingCode": "//  * limitations under the License.\n//  */\n// package com.taotao.cloud.auth.biz.authentication.mobile;\n//\n// import com.taotao.cloud.core.model.SecurityUser;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-3665272617256201734"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (9 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-biz/src/main/java/com/taotao/cloud/auth/biz/utils/SimpleAuthenticationEntryPoint.java",
      "language": "JAVA",
      "line": 34,
      "offset": 4,
      "length": 2,
      "code": {
        "startLine": 32,
        "length": 2,
        "offset": 11,
        "surroundingCode": "    }\n\n    //@Override\n    //protected Map<String, Object> body(HttpServletRequest request) {\n    //    Map<String, Object> map = new LinkedHashMap<>(3);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7447753247082651370"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-biz/src/main/java/com/taotao/cloud/auth/biz/utils/SimpleAuthenticationEntryPoint.java",
      "language": "JAVA",
      "line": 29,
      "offset": 8,
      "length": 2,
      "code": {
        "startLine": 27,
        "length": 2,
        "offset": 183,
        "surroundingCode": "    @Override\n    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n        //String message = exceptionMessage(authException);\n        //request.setAttribute(\"exMsg\", message);\n        //this.write(request, response);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "6680927732796896944"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (120 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-biz/src/main/java/com/taotao/cloud/auth/biz/models/CloudRegisteredClient.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.oauth2.biz.models;\n//\n//import java.time.Instant;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "4006725350432338400"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (6 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-biz/src/main/java/com/taotao/cloud/auth/biz/service/SysUserDetailsService.java",
      "language": "JAVA",
      "line": 27,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 25,
        "length": 2,
        "offset": 104,
        "surroundingCode": "\t@Override\n\tpublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\t\t//Result<SecurityUser> memberSecurityUser = feignUserService.getSysSecurityUser(username);\n\t\t//if (!memberSecurityUser.success() || memberSecurityUser.data() == null) {\n\t\t//\tLogUtil.error(\"系统用户 [{}] not found.\", username);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5224874675356586272"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (5 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-biz/src/main/java/com/taotao/cloud/auth/biz/configuration/AuthorizationServerConfiguration.java",
      "language": "JAVA",
      "line": 305,
      "offset": 3,
      "length": 2,
      "code": {
        "startLine": 303,
        "length": 2,
        "offset": 16,
        "surroundingCode": "\n\t\t\t// 校验验证码\n\t\t\t//Object code = redisRepository.get(SMS_KEY_PREFIX + mobile);\n\t\t\t//if (!verificationCode.equals(code)) {\n\t\t\t//\tthrow new BadCredentialsException(\"验证码错误\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2884903950665895733"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (38 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-biz/src/main/java/com/taotao/cloud/auth/biz/configuration/AuthorizationServerConfiguration.java",
      "language": "JAVA",
      "line": 150,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 148,
        "length": 2,
        "offset": 5,
        "surroundingCode": "\t}\n\n\t//@Bean\n\t//public OAuth2AuthorizationService authorizationService(\n\t//\tJdbcTemplate jdbcTemplate,"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-3623258280740923479"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (5 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-auth/taotao-cloud-auth-biz/src/main/java/com/taotao/cloud/auth/biz/configuration/AuthorizationServerConfiguration.java",
      "language": "JAVA",
      "line": 235,
      "offset": 3,
      "length": 2,
      "code": {
        "startLine": 233,
        "length": 2,
        "offset": 16,
        "surroundingCode": "\n\t\t\t// 校验验证码\n\t\t\t//captchaService.checkCaptcha(verificationCode, t);\n\t\t\t//Object code = redisRepository.get(CAPTCHA_KEY_PREFIX + mobile);\n\t\t\t//if (!verificationCode.equals(code)) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-auth.taotao-cloud-auth-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-6733293880397343814"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-front/src/main/java/com/taotao/cloud/front/controller/RegisterController.java",
      "language": "JAVA",
      "line": 39,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 37,
        "length": 2,
        "offset": 36,
        "surroundingCode": "public class RegisterController {\n\n\t// @Autowired\n\t// private UserServiceFegin userServiceFegin;\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-front.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5269745096529769079"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (42 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/media/config/FileStaticConfig.java",
      "language": "JAVA",
      "line": 2,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 73,
        "surroundingCode": "package com.taotao.cloud.media.biz.media.config;//package com.zj.config;\n// \n//import java.io.File;\n//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-4061692917006554742"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/media/mapper/CameraMapper.java",
      "language": "JAVA",
      "line": 8,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 6,
        "length": 2,
        "offset": 59,
        "surroundingCode": "public interface CameraMapper extends BaseMapper<Camera>{\n\n//\t@Select(\"select id from camera\")\n//\tList<Camera> listCamera();\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "3343489696051705527"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/media/thread/MediaConvert.java",
      "language": "JAVA",
      "line": 188,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 186,
        "length": 2,
        "offset": 60,
        "surroundingCode": "\t\t\t\t\t//判断时间偏移\n\t\t\t\t\tif (videoTS > recorder.getTimestamp()) {\n//\t\t\t\t\tSystem.out.println(\"矫正时间戳: \" + videoTS + \" : \" + recorder.getTimestamp() + \" -> \"\n//\t\t\t\t\t\t\t+ (videoTS - recorder.getTimestamp()));\n\t\t\t\t\t\trecorder.setTimestamp((videoTS));"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "6478454847966417636"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (4 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/base/BaseMethodController.java",
      "language": "JAVA",
      "line": 1081,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 1079,
        "length": 2,
        "offset": 8,
        "surroundingCode": "\t// }\n\n\t//public static void main(String[] args) {\n\t//\tSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\t//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "5117124597507191505"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/base/BaseMethodController.java",
      "language": "JAVA",
      "line": 646,
      "offset": 4,
      "length": 2,
      "code": {
        "startLine": 644,
        "length": 2,
        "offset": 162,
        "surroundingCode": "\t\t\t\tCore.circle(source1, center, 3, new Scalar(0, 255, 0), -1, 8, 0);// 绿色圆心\n\t\t\t\tCore.circle(source1, center, radius, new Scalar(0, 0, 255), 3, 8, 0);// 红色圆边\n\t\t\t\t// anchor01.x = vCircle[0];\n\t\t\t\t// anchor01.y = vCircle[1];\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "4483445219498011470"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (5 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/base/BaseMethodController.java",
      "language": "JAVA",
      "line": 264,
      "offset": 3,
      "length": 2,
      "code": {
        "startLine": 262,
        "length": 2,
        "offset": 72,
        "surroundingCode": "\t\ttry {\n\t\t\tMultiFormatReader formatReader = new MultiFormatReader();\n\t\t\t// if (!file.exists()) {\n\t\t\t// System.out.println(\"nofile\");\n\t\t\t// return;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "3743660677025638971"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (25 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/common/mapper/JsonMapper.java",
      "language": "JAVA",
      "line": 273,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 271,
        "length": 2,
        "offset": 13,
        "surroundingCode": "\t * 测试\n\t */\n\t//public static void main(String[] args) {\n\t//\tList<Map<String, Object>> list = new ArrayList<Map<String, Object>>();\n\t//\tMap<String, Object> map = new HashMap<String, Object>();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7195345252834527065"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-media/taotao-cloud-media-biz/src/main/java/com/taotao/cloud/media/biz/opencv/common/mapper/JsonMapper.java",
      "language": "JAVA",
      "line": 217,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 215,
        "length": 2,
        "offset": 51,
        "surroundingCode": "\t */\n\tpublic JsonMapper enableJaxbAnnotation() {\n\t\t//JaxbAnnotationModule module = new JaxbAnnotationModule();\n\t\t//this.registerModule(module);\n\t\treturn this;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-media.taotao-cloud-media-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-3530061136666962409"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (37 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-order/taotao-cloud-order-api/src/main/java/com/taotao/cloud/order/api/dubbo/IDubboOrderItemService.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "// /*\n//  * Copyright (c) 2020-2030, Shuigedeng (981376577@qq.com & https://blog.taotaocloud.top/).\n//  *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-order.taotao-cloud-order-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5417638422376361910"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (6 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-stock/taotao-cloud-stock-api/src/main/java/com/taotao/cloud/stock/api/common/util/IPUtils.java",
      "language": "JAVA",
      "line": 43,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 41,
        "length": 2,
        "offset": 19,
        "surroundingCode": "        }\n        \n//        //使用代理，则获取第一个IP地址\n//        if(StringUtils.isEmpty(ip) && ip.length() > 15) {\n//\t\t\tif(ip.indexOf(\",\") > 0) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-stock.taotao-cloud-stock-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2428426001046756877"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-stock/taotao-cloud-stock-api/src/main/java/com/taotao/cloud/stock/api/common/util/xss/HTMLFilter.java",
      "language": "JAVA",
      "line": 351,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 349,
        "length": 2,
        "offset": 55,
        "surroundingCode": "                    paramValue = paramValues.get(ii);\n\n//          debug( \"paramName='\" + paramName + \"'\" );\n//          debug( \"paramValue='\" + paramValue + \"'\" );\n//          debug( \"allowed? \" + vAllowed.get( name ).contains( paramName ) );"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-stock.taotao-cloud-stock-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-8459339043167656202"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-stock/taotao-cloud-stock-api/src/main/java/com/taotao/cloud/stock/api/common/util/mybatis/MybatisInterceptor.java",
      "language": "JAVA",
      "line": 36,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 34,
        "length": 2,
        "offset": 155,
        "surroundingCode": "    public Object intercept(Invocation invocation) throws Throwable {\n        MappedStatement mappedStatement = (MappedStatement) invocation.getArgs()[0];\n//        String sqlId = mappedStatement.getId();\n//        log.debug(\"------sqlId------\" + sqlId);\n        SqlCommandType sqlCommandType = mappedStatement.getSqlCommandType();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-stock.taotao-cloud-stock-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2198861234420067817"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (97 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-member/taotao-cloud-member-biz/src/main/java/com/taotao/cloud/member/biz/api/controller/seller/BillStoreController.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "// package com.taotao.cloud.member.biz.controller.seller;\n//\n// import com.baomidou.mybatisplus.core.metadata.IPage;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-member.taotao-cloud-member-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "4672914171513662865"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (28 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-member/taotao-cloud-member-biz/src/main/java/com/taotao/cloud/member/biz/connect/SysGithubUser.java",
      "language": "JAVA",
      "line": 2,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 88,
        "surroundingCode": "package com.taotao.cloud.member.biz.connect;// package com.taotao.cloud.sys.biz.entity;\n//\n// import com.baomidou.mybatisplus.annotation.TableName;\n// import com.taotao.cloud.data.mybatis.plus.mapper.SuperEntity;\n//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-member.taotao-cloud-member-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-2305805703747856357"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (9 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-member/taotao-cloud-member-biz/src/main/java/com/taotao/cloud/member/biz/connect/SysGiteeUserMapper.java",
      "language": "JAVA",
      "line": 2,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 88,
        "surroundingCode": "package com.taotao.cloud.member.biz.connect;// package com.taotao.cloud.sys.biz.mapper;\n//\n// import com.taotao.cloud.data.mybatis.plus.mapper.SuperMapper;\n// import com.taotao.cloud.sys.biz.entity.SysGiteeUser;\n//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-member.taotao-cloud-member-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-1513069324844220359"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (22 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-report/taotao-cloud-report-api/src/main/java/com/taotao/cloud/report/api/dubbo/IDubboOrderItemService.java",
      "language": "JAVA",
      "line": 16,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 14,
        "length": 2,
        "offset": 44,
        "surroundingCode": "//  * limitations under the License.\n//  */\n// package com.taotao.cloud.order.api.dubbo;\n//\n// import com.taotao.cloud.order.api.bo.order_info.OrderBO;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-report.taotao-cloud-report-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7690723297227177129"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-xxljob/src/main/java/com/taotao/cloud/xxljob/controller/IndexController.java",
      "language": "JAVA",
      "line": 82,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 80,
        "length": 2,
        "offset": 27,
        "surroundingCode": "\tpublic String help() {\n\n\t\t/*if (!PermissionInterceptor.ifLogin(request)) {\n\t\t\treturn \"redirect:/toLogin\";\n\t\t}*/"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-xxljob.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-4515612801222438347"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (4 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-gateway/src/main/java/com/taotao/cloud/gateway/authentication/ResourceServerConfiguration.java",
      "language": "JAVA",
      "line": 171,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 169,
        "length": 2,
        "offset": 16,
        "surroundingCode": "\t\t\t.build();\n\n\t\t//String issuerUri = null;\n\t\t//Supplier<OAuth2TokenValidator<Jwt>> defaultValidator = (issuerUri != null)\n\t\t//\t? () -> JwtValidators.createDefaultWithIssuer(issuerUri) : JwtValidators::createDefault;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-gateway.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "3485040762903467167"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (4 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-gateway/src/main/java/com/taotao/cloud/gateway/authentication/ResourceServerConfiguration.java",
      "language": "JAVA",
      "line": 179,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 177,
        "length": 2,
        "offset": 38,
        "surroundingCode": "\t\treturn nimbusReactiveJwtDecoder;\n\n\t\t//return NimbusReactiveJwtDecoder\n\t\t//\t.withJwkSetUri(FuncUtil.predicate(jwkSetUri, StrUtil::isBlank,\n\t\t//\t\t\"http://127.0.0.1:33336/oauth2/jwks\"))"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-gateway.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-1596549007344079704"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-gateway/src/main/java/com/taotao/cloud/gateway/authentication/ResourceServerConfiguration.java",
      "language": "JAVA",
      "line": 104,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 102,
        "length": 2,
        "offset": 8,
        "surroundingCode": "\t\t};\n\n\t\t//ServerBearerTokenAuthenticationConverter serverBearerTokenAuthenticationConverter =\n\t\t//\tnew ServerBearerTokenAuthenticationConverter();\n\t\t//serverBearerTokenAuthenticationConverter.setAllowUriQueryParameter(true);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-gateway.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-655912552397685824"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-graphql/taotao-cloud-front-graphql/src/main/java/com/taotao/cloud/front/graphql/datafetchers/ReviewsDataFetcher.java",
      "language": "JAVA",
      "line": 88,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 86,
        "length": 2,
        "offset": 47,
        "surroundingCode": "\t\treviewsService.saveReviews(reviewsInput);\n\n\t\t//List<Integer> showIds = reviewsInput.stream().map(review -> review.getShowId()).collect(\n\t\t//\tCollectors.toList());\n\t\t//Map<Integer, List<Review>> reviews = reviewsService.reviewsForShows(showIds);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-graphql.taotao-cloud-front-graphql.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2297030352538056212"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (17 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-message/taotao-cloud-message-biz/src/main/java/com/taotao/cloud/message/biz/austin/handler/receipt/DingDingWorkReceipt.java",
      "language": "JAVA",
      "line": 33,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 31,
        "length": 2,
        "offset": 64,
        "surroundingCode": "    private AccountUtils accountUtils;\n    public void pull() {\n//        try {\n//            for (int index = SendAccountConstant.START; true; index = index + SendAccountConstant.STEP) {\n//                DingDingWorkNoticeAccount account = accountUtils.getAccount(index, SendAccountConstant.DING_DING_WORK_NOTICE_ACCOUNT_KEY, SendAccountConstant.DING_DING_WORK_NOTICE_PREFIX, DingDingWorkNoticeAccount.class);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-message.taotao-cloud-message-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2441038907170556452"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-payment/taotao-cloud-payment-biz/src/main/java/com/taotao/cloud/payment/biz/jeepay/mq/vender/rabbitmq/RabbitMQConfig.java",
      "language": "JAVA",
      "line": 90,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 88,
        "length": 2,
        "offset": 66,
        "surroundingCode": "\n                            // 支持 延迟的 FanoutExchange 交换机， 配置无效果。\n//                            Map<String, Object> args = new HashMap<>();\n//                            args.put(\"x-delayed-type\", ExchangeTypes.FANOUT);\n//                            return new CustomExchange(RabbitMQConfig.DELAYED_EXCHANGE_NAME, \"x-delayed-message\", true, false, args);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-payment.taotao-cloud-payment-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-2715851666863840372"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (9 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-sms/taotao-cloud-starter-sms-chinamobile/src/main/java/com/taotao/cloud/sms/chinamobile/ChinaMobileSendHandler.java",
      "language": "JAVA",
      "line": 120,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 118,
        "length": 2,
        "offset": 7,
        "surroundingCode": "\t\t}\n\n\t\t//StringBuilder receiverBuilder = new StringBuilder();\n\t\t//for (String phone : phones) {\n\t\t//\tif (StringUtils.isBlank(phone)) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-sms.taotao-cloud-starter-sms-chinamobile.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-2783637626450120298"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (232 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-web/src/main/java/com/taotao/cloud/web/configuration/ScheduleConfiguration.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "///**\n// * Copyright (c) 2019 Yanzheng (https://github.com/micyo202). All rights reserved.\n// * <p>"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-web.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-4211015961664938496"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (14 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-redis/src/main/java/com/taotao/cloud/redis/delay/message/FastJsonCodec.java",
      "language": "JAVA",
      "line": 52,
      "offset": 9,
      "length": 2,
      "code": {
        "startLine": 50,
        "length": 2,
        "offset": 103,
        "surroundingCode": "\t        Map<String, Object> headers = JsonUtil.readMap(jsonNode.get(\"headers\").toString());\n\n\t        //JsonNode payload = JsonUtil.parse(new String(result, StandardCharsets.UTF_8)).get(\"payload\");\n\t        //String payloadStr = payload.traverse(JsonUtil.MAPPER).readValueAs(String.class);\n\t        //"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-redis.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-8404222780076087948"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-redis/src/main/java/com/taotao/cloud/redis/delay/message/FastJsonCodec.java",
      "language": "JAVA",
      "line": 3,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 47,
        "surroundingCode": "package com.taotao.cloud.redis.delay.message;\n\n//import com.alibaba.fastjson.JSON;\n//import com.alibaba.fastjson.JSONObject;\nimport com.fasterxml.jackson.databind.JsonNode;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-redis.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-8019044818008363187"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (27 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-seata/src/main/java/com/taotao/cloud/seata/configuration/SeataDataSourceConfiguration.java",
      "language": "JAVA",
      "line": 162,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 160,
        "length": 2,
        "offset": 5,
        "surroundingCode": "\t}\n\n\t//@Bean\n\t//public SeataAspect seataAspect() {\n\t//\treturn new SeataAspect();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-seata.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8973155341858683371"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/log/LogUtil.java",
      "language": "JAVA",
      "line": 70,
      "offset": 3,
      "length": 2,
      "code": {
        "startLine": 68,
        "length": 2,
        "offset": 90,
        "surroundingCode": "\tpublic static void debug(String msg, Object... arguments) {\n\t\tif (isDebugEnabled()) {\n\t\t\t//if (arguments != null && arguments.length > 0) {\n\t\t\t//\tmsg = MessageFormatter.format(msg, arguments).getMessage();\n\t\t\t//}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7651692056707789622"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/reflect/ClassTypeUtil.java",
      "language": "JAVA",
      "line": 199,
      "offset": 8,
      "length": 2,
      "code": {
        "startLine": 197,
        "length": 2,
        "offset": 83,
        "surroundingCode": "     */\n    public static boolean isWildcardGenericType(final Type type) {\n        //final Class clazz = type.getClass();\n        //return WildcardTypeImpl.class.equals(clazz);\n\t    return false;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "7716251936979102479"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (194 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-health/src/main/java/com/taotao/cloud/health/collect/RocketMQCollectTask.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.health.collect;\n//\n//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-health.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-261773124018720884"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (127 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-health/src/main/java/com/taotao/cloud/health/collect/FileCollectTask.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.health.collect;\n//\n//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-health.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-73103860214431466"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (6 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-health/src/main/java/com/taotao/cloud/health/strategy/Rule.java",
      "language": "JAVA",
      "line": 269,
      "offset": 3,
      "length": 2,
      "code": {
        "startLine": 267,
        "length": 2,
        "offset": 75,
        "surroundingCode": "\t\t */\n\t\tpublic void registerRules(String field, List<RuleInfo> rules) {\n\t\t\t//if(this.rules.containsKey(field)) {\n\t\t\t//    this.rules.get(field).addAll(rules);\n\t\t\t//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-health.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-6188132719998121022"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (5 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-logger/src/main/java/com/taotao/cloud/logger/logRecord/service/impl/RabbitMqLogServiceImpl.java",
      "language": "JAVA",
      "line": 39,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 37,
        "length": 2,
        "offset": 62,
        "surroundingCode": "public class RabbitMqLogServiceImpl implements LogService {\n\n\t///**\n\t// * 土包子交换模板\n\t// */"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-logger.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7893367830719493013"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-logger/src/main/java/com/taotao/cloud/logger/logRecord/service/impl/RabbitMqLogServiceImpl.java",
      "language": "JAVA",
      "line": 53,
      "offset": 8,
      "length": 2,
      "code": {
        "startLine": 51,
        "length": 2,
        "offset": 65,
        "surroundingCode": "\t@Override\n    public boolean createLog(LogDTO logDTO) {\n        //LogUtil.info(\"LogRecord RabbitMq ready to send routingKey [{}] LogDTO [{}]\", properties.getRabbitMqProperties().getRoutingKey(), logDTO);\n        //rubeExchangeTemplate.convertAndSend(properties.getRabbitMqProperties().getRoutingKey(), JSON.toJSONString(logDTO));\n        //return true;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-logger.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7636335432132498301"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (137 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-logger/src/main/java/com/taotao/cloud/logger/logRecord/configuration/StreamSenderConfiguration.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "///*\n// * Copyright (c) 2020-2030, Shuigedeng (981376577@qq.com & https://blog.taotaocloud.top/).\n// *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-logger.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-6599855157781415392"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (31 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-stream/src/main/java/com/taotao/cloud/stream/consumer/event/impl/RegisteredCouponActivityExecute.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.stream.consumer.event.impl;\n//\n//import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-stream.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8730993003440285167"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (22 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-stream/src/main/java/com/taotao/cloud/stream/consumer/event/impl/MemberWalletExecute.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.stream.consumer.event.impl;\n//\n//"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-stream.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5706070291225026518"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (43 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-stream/src/main/java/com/taotao/cloud/stream/consumer/listener/AfterSaleMessageListener.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "//package com.taotao.cloud.stream.consumer.listener;\n//\n//import cn.hutool.json.JSONUtil;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-stream.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-6961127730731293338"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 50,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 48,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 等于\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-1266699861708028445"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 76,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 74,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 不等于\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "975874908050502804"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 102,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 100,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 小于\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5886932721420208486"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 128,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 126,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 小于或等于\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2303047001922653112"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 154,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 152,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 大于\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-2282650656936124616"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 180,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 178,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 大于或等于\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-3137192695843292694"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 206,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 204,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 包含\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2579837372329393673"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 232,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 230,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 包含,以或连接\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "3859439107928833944"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 259,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 257,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 包含,以或连接\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-8198955237547611481"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 285,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 283,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 包含,以且连接\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5480883030939816180"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 312,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 310,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 包含,以且连接\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5363692449992730569"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 338,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 336,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 相似于\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8980189306352863058"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 364,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 362,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 在其中\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7816853757855838563"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 388,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 386,
        "length": 2,
        "offset": 18,
        "surroundingCode": "\t\treturn this;\n\t}\n//\n//\t/**\n//\t * 在其中\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-742376964215992612"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 415,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 413,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 不在其中\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8664503952658677931"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 440,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 438,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 不在其中\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-1940147651494781965"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 466,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 464,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 为空\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-4632935878675434046"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (11 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 491,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 489,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 不为空\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "8558772915982321951"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (12 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 515,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 513,
        "length": 2,
        "offset": 18,
        "surroundingCode": "\t\treturn this;\n\t}\n//\n//\t/**\n//\t * 数组查询\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "2707196551454411228"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (12 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-mongodb/src/main/java/com/taotao/cloud/mongodb/helper/utils/CriteriaOrWrapper.java",
      "language": "JAVA",
      "line": 544,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 542,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * 数组模糊查询\n//\t * "
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-mongodb.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-7505416393046093648"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (21 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-security/src/main/java/com/taotao/cloud/security/configuration/SecurityConfiguration.java",
      "language": "JAVA",
      "line": 59,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 57,
        "length": 2,
        "offset": 4,
        "surroundingCode": "\t}\n\n//\t/**\n//\t * OAuth2AccessDeniedHandler 用来解决认证过的用户访问无权限资源时的异常\n//\t *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-security.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5302823915689540250"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (5 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-elasticsearch/src/main/java/com/taotao/cloud/elasticsearch/service/impl/SearchServiceImpl.java",
      "language": "JAVA",
      "line": 41,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 39,
        "length": 2,
        "offset": 106,
        "surroundingCode": "\t@Override\n\tpublic PageModel<String> strQuery(String indexName, SearchDto searchDto) throws IOException {\n//\t\treturn SearchBuilder.builder(elasticsearchRestTemplate, indexName)\n//\t\t\t.setStringQuery(searchDto.getQueryStr())\n//\t\t\t.addSort(searchDto.getSortCol(), SortOrder.DESC)"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-elasticsearch.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "1819100567471994506"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (15 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-shardingsphere/src/main/java/com/taotao/cloud/shardingsphere/configuration/ShardingJdbcConfiguration.java",
      "language": "JAVA",
      "line": 55,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 53,
        "length": 2,
        "offset": 5,
        "surroundingCode": "\t}\n\n\t//@ConstructorProperties({\n\t//\t\"shardingRule\",\n\t//\t\"masterSlaveRule\","
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-shardingsphere.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "3528891207509640868"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (6 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-promotion/taotao-cloud-promotion-api/src/main/java/com/taotao/cloud/promotion/api/web/vo/PintuanMemberVO.java",
      "language": "JAVA",
      "line": 49,
      "offset": 4,
      "length": 2,
      "code": {
        "startLine": 47,
        "length": 2,
        "offset": 32,
        "surroundingCode": "    private Long groupNum;\n\n    //public PintuanMemberVO(Member member) {\n    //    this.memberId = member.getId();\n    //    this.memberName = member.getUsername();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-promotion.taotao-cloud-promotion-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "491471602262364056"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (2 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-promotion/taotao-cloud-promotion-api/src/main/java/com/taotao/cloud/promotion/api/web/vo/kanjia/KanjiaActivityGoodsVO.java",
      "language": "JAVA",
      "line": 21,
      "offset": 1,
      "length": 2,
      "code": {
        "startLine": 19,
        "length": 2,
        "offset": 63,
        "surroundingCode": "public class KanjiaActivityGoodsVO implements Serializable {\n\n\t//@Schema(description =  \"商品规格详细信息\")\n\t//private GoodsSku goodsSku;\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-promotion.taotao-cloud-promotion-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "1661412467278606741"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (4 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-promotion/taotao-cloud-promotion-api/src/main/java/com/taotao/cloud/promotion/api/web/vo/kanjia/KanjiaActivityGoodsVO.java",
      "language": "JAVA",
      "line": 28,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 26,
        "length": 2,
        "offset": 41,
        "surroundingCode": "\n\tpublic BigDecimal getPurchasePrice() {\n//\t\tif (purchasePrice < 0) {\n//\t\t\treturn 0D;\n//\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-promotion.taotao-cloud-promotion-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "1572924135445080140"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-promotion/taotao-cloud-promotion-api/src/main/java/com/taotao/cloud/promotion/api/web/query/MemberCouponSearchQuery.java",
      "language": "JAVA",
      "line": 80,
      "offset": 2,
      "length": 2,
      "code": {
        "startLine": 78,
        "length": 2,
        "offset": 91,
        "surroundingCode": "\t\t\tqueryWrapper.eq(\"scope_type\", PromotionsScopeTypeEnum.valueOf(scopeType).name());\n\t\t}\n\t\t//if (CharSequenceUtil.isNotEmpty(getType)) {\n\t\t//    queryWrapper.eq(\"get_type\", CouponGetEnum.valueOf(getType).name());\n\t\t//}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-promotion.taotao-cloud-promotion-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "5687821097430232075"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (5 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-promotion/taotao-cloud-promotion-api/src/main/java/com/taotao/cloud/promotion/api/feign/fallback/FeignPintuanServiceFallback.java",
      "language": "JAVA",
      "line": 36,
      "offset": 3,
      "length": 2,
      "code": {
        "startLine": 34,
        "length": 2,
        "offset": 25,
        "surroundingCode": "\t\t\t\treturn null;\n\t\t\t}\n\t\t\t//@Override\n\t\t\t//public Result<CouponVO> getMemberSecurityUser(Long id) {\n\t\t\t//\tLogUtil.error(\"调用getMemberSecurityUser异常：{}\", throwable, id);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-promotion.taotao-cloud-promotion-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "-5447413914436935995"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (5 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-promotion/taotao-cloud-promotion-api/src/main/java/com/taotao/cloud/promotion/api/feign/fallback/FeignKanjiaActivityServiceFallback.java",
      "language": "JAVA",
      "line": 36,
      "offset": 3,
      "length": 2,
      "code": {
        "startLine": 34,
        "length": 2,
        "offset": 25,
        "surroundingCode": "\t\t\t\treturn null;\n\t\t\t}\n\t\t\t//@Override\n\t\t\t//public Result<CouponVO> getMemberSecurityUser(Long id) {\n\t\t\t//\tLogUtil.error(\"调用getMemberSecurityUser异常：{}\", throwable, id);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-promotion.taotao-cloud-promotion-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "6748729535915258578"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (3 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-promotion/taotao-cloud-promotion-api/src/main/java/com/taotao/cloud/promotion/api/tools/PromotionTools.java",
      "language": "JAVA",
      "line": 97,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 95,
        "length": 2,
        "offset": 101,
        "surroundingCode": "\t\t\tBasePromotionsVO basePromotions = promotionsObj.toBean(BasePromotionsVO.class);\n\t\t\t// todo 此处需要修改\n//\t\t\tif (basePromotions.getStartTime() != null && basePromotions.getEndTime() != null) {\n//\t\t\t\treturn basePromotions.getStartTime().getTime() <= System.currentTimeMillis() && basePromotions.getEndTime().getTime() >= System.currentTimeMillis();\n//\t\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-promotion.taotao-cloud-promotion-api.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "7944890192317592176"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Commented out code",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Commented out code (34 lines)",
  "detailsInfo": "Reports comments that contain Java code.\n\nUsually, code that is commented out gets outdated very quickly and becomes misleading.\nAs most projects use some kind of version control system,\nit is better to delete commented out code completely and use the VCS history instead.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "file",
      "path": "taotao-cloud-microservice/taotao-cloud-promotion/taotao-cloud-promotion-biz/src/main/java/com/taotao/cloud/promotion/biz/repository/CouponSuperRepository.java",
      "language": "JAVA",
      "line": 1,
      "offset": 0,
      "length": 2,
      "code": {
        "startLine": 1,
        "length": 2,
        "offset": 0,
        "surroundingCode": "///*\n// * Copyright (c) 2020-2030, Shuigedeng (981376577@qq.com & https://blog.taotaocloud.top/).\n// *"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-promotion.taotao-cloud-promotion-biz.main",
    "inspectionName": "CommentedOutCode"
  },
  "hash": "1198478575201338790"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/proto/StreamRequest.java",
      "language": "JAVA",
      "line": 66,
      "offset": 18,
      "length": 5,
      "code": {
        "startLine": 64,
        "length": 5,
        "offset": 25,
        "surroundingCode": "    }\n\n    public static final com.google.protobuf.Descriptors.Descriptor\n    getDescriptor() {\n        return  StudentProto.internal_static_com_shengsiyuan_proto_StreamRequest_descriptor;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "-6727547040382973084"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/proto/StreamRequest.java",
      "language": "JAVA",
      "line": 289,
      "offset": 22,
      "length": 5,
      "code": {
        "startLine": 287,
        "length": 5,
        "offset": 135,
        "surroundingCode": "            // @@protoc_insertion_point(builder_implements: StreamRequest)\n             StreamRequestOrBuilder {\n        public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n            return  StudentProto.internal_static_com_shengsiyuan_proto_StreamRequest_descriptor;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "3054373172993265946"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/codec2/MyDataInfo.java",
      "language": "JAVA",
      "line": 1521,
      "offset": 20,
      "length": 5,
      "code": {
        "startLine": 1519,
        "length": 5,
        "offset": 111,
        "surroundingCode": "        // @@protoc_insertion_point(builder_implements:Student)\n        StudentOrBuilder {\n      public static final com.google.protobuf.Descriptors.Descriptor\n          getDescriptor() {\n        return MyDataInfo.internal_static_Student_descriptor;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "9086173702903742082"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/codec2/MyDataInfo.java",
      "language": "JAVA",
      "line": 1932,
      "offset": 18,
      "length": 5,
      "code": {
        "startLine": 1930,
        "length": 5,
        "offset": 32,
        "surroundingCode": "      }\n    }\n    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return MyDataInfo.internal_static_Worker_descriptor;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "6034283688662306621"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/codec2/MyDataInfo.java",
      "language": "JAVA",
      "line": 2161,
      "offset": 20,
      "length": 5,
      "code": {
        "startLine": 2159,
        "length": 5,
        "offset": 109,
        "surroundingCode": "        // @@protoc_insertion_point(builder_implements:Worker)\n        WorkerOrBuilder {\n      public static final com.google.protobuf.Descriptors.Descriptor\n          getDescriptor() {\n        return MyDataInfo.internal_static_Worker_descriptor;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "4269003610260496959"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/codec2/MyDataInfo.java",
      "language": "JAVA",
      "line": 1282,
      "offset": 18,
      "length": 5,
      "code": {
        "startLine": 1280,
        "length": 5,
        "offset": 32,
        "surroundingCode": "      }\n    }\n    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return MyDataInfo.internal_static_Student_descriptor;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "5454375461725729825"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/codec2/MyDataInfo.java",
      "language": "JAVA",
      "line": 608,
      "offset": 20,
      "length": 5,
      "code": {
        "startLine": 606,
        "length": 5,
        "offset": 115,
        "surroundingCode": "        // @@protoc_insertion_point(builder_implements:MyMessage)\n        MyMessageOrBuilder {\n      public static final com.google.protobuf.Descriptors.Descriptor\n          getDescriptor() {\n        return MyDataInfo.internal_static_MyMessage_descriptor;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "3347551953786860177"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/codec2/MyDataInfo.java",
      "language": "JAVA",
      "line": 258,
      "offset": 20,
      "length": 5,
      "code": {
        "startLine": 256,
        "length": 5,
        "offset": 60,
        "surroundingCode": "        return getDescriptor();\n      }\n      public static final com.google.protobuf.Descriptors.EnumDescriptor\n          getDescriptor() {\n        return MyMessage.getDescriptor().getEnumTypes().get(0);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "-460236183746130669"
},{
  "tool": "Code Inspection",
  "category": "Class structure",
  "type": "'static' method declared 'final'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "'static' method declared <code>final</code>",
  "detailsInfo": "Reports static methods that are marked as `final`.\n\nSuch code might indicate an error or an incorrect assumption about the effect of the `final` keyword.\nStatic methods are not subject to runtime polymorphism, so the only purpose of the `final` keyword used with static methods\nis to ensure the method will not be hidden in a subclass.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/codec2/MyDataInfo.java",
      "language": "JAVA",
      "line": 163,
      "offset": 18,
      "length": 5,
      "code": {
        "startLine": 161,
        "length": 5,
        "offset": 32,
        "surroundingCode": "      }\n    }\n    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return MyDataInfo.internal_static_MyMessage_descriptor;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "FinalStaticMethod"
  },
  "hash": "-5289402712183147553"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'String.indexOf()' expression can be replaced with 'contains()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>contentType.toLowerCase().indexOf(\"application/json\") >= 0</code> can be replaced with 'contentType.toLowerCase().contains(\"application/json\")'",
  "detailsInfo": "Reports comparisons with `String.indexOf()` calls that can be replaced with a call to the `String.contains()` method.\n\n**Example:**\n\n\n      boolean b = \"abcd\".indexOf('e') >= 0;\n\nAfter the quick-fix is applied:\n\n\n      boolean b = \"abcd\".contains('e');\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-payment/taotao-cloud-payment-biz/src/main/java/com/taotao/cloud/payment/biz/jeepay/core/beans/RequestKitBean.java",
      "language": "JAVA",
      "line": 163,
      "offset": 19,
      "length": 58,
      "code": {
        "startLine": 161,
        "length": 58,
        "offset": 95,
        "surroundingCode": "        //有contentType  && json格式，  get请求不转换\n        if(contentType != null\n                && contentType.toLowerCase().indexOf(\"application/json\") >= 0\n                && !request.getMethod().equalsIgnoreCase(\"GET\")\n        ){ //application/json 需要转换为json格式；\n            return true;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-payment.taotao-cloud-payment-biz.main",
    "inspectionName": "IndexOfReplaceableByContains"
  },
  "hash": "-6595791215911996931"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'String.indexOf()' expression can be replaced with 'contains()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>url.indexOf(\"?\") < 0</code> can be replaced with '!url.contains(\"?\")'",
  "detailsInfo": "Reports comparisons with `String.indexOf()` calls that can be replaced with a call to the `String.contains()` method.\n\n**Example:**\n\n\n      boolean b = \"abcd\".indexOf('e') >= 0;\n\nAfter the quick-fix is applied:\n\n\n      boolean b = \"abcd\".contains('e');\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-payment/taotao-cloud-payment-biz/src/main/java/com/taotao/cloud/payment/biz/jeepay/core/utils/StringKit.java",
      "language": "JAVA",
      "line": 51,
      "offset": 5,
      "length": 20,
      "code": {
        "startLine": 49,
        "length": 20,
        "offset": 51,
        "surroundingCode": "\n\t\tStringBuilder sb = new StringBuilder(url);\n\t\tif(url.indexOf(\"?\") < 0){\n\t\t\tsb.append(\"?\");\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-payment.taotao-cloud-payment-biz.main",
    "inspectionName": "IndexOfReplaceableByContains"
  },
  "hash": "-8110902239359266778"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'String.indexOf()' expression can be replaced with 'contains()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>url.indexOf(\"=\") >= 0</code> can be replaced with 'url.contains(\"=\")'",
  "detailsInfo": "Reports comparisons with `String.indexOf()` calls that can be replaced with a call to the `String.contains()` method.\n\n**Example:**\n\n\n      boolean b = \"abcd\".indexOf('e') >= 0;\n\nAfter the quick-fix is applied:\n\n\n      boolean b = \"abcd\".contains('e');\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-payment/taotao-cloud-payment-biz/src/main/java/com/taotao/cloud/payment/biz/jeepay/core/utils/StringKit.java",
      "language": "JAVA",
      "line": 56,
      "offset": 27,
      "length": 21,
      "code": {
        "startLine": 54,
        "length": 21,
        "offset": 44,
        "surroundingCode": "\n\t\t//是否包含query条件\n\t\tboolean isHasCondition = url.indexOf(\"=\") >= 0;\n\n\t\tfor (String k : map.keySet()) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-payment.taotao-cloud-payment-biz.main",
    "inspectionName": "IndexOfReplaceableByContains"
  },
  "hash": "-3517630436080362608"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'String.indexOf()' expression can be replaced with 'contains()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>-1 != agent.indexOf(\"msie\")</code> can be replaced with 'agent.contains(\"msie\")'",
  "detailsInfo": "Reports comparisons with `String.indexOf()` calls that can be replaced with a call to the `String.contains()` method.\n\n**Example:**\n\n\n      boolean b = \"abcd\".indexOf('e') >= 0;\n\nAfter the quick-fix is applied:\n\n\n      boolean b = \"abcd\".contains('e');\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-oss/taotao-cloud-starter-oss-minio/src/main/java/com/taotao/cloud/oss/minio/MinioUploadFileServiceImpl.java",
      "language": "JAVA",
      "line": 278,
      "offset": 8,
      "length": 27,
      "code": {
        "startLine": 276,
        "length": 27,
        "offset": 104,
        "surroundingCode": "\t\t\t\tString codeFileName = \"\";\n\t\t\t\tString agent = request.getHeader(\"USER-AGENT\").toLowerCase();\n\t\t\t\tif (-1 != agent.indexOf(\"msie\") || -1 != agent.indexOf(\"trident\")) {\n\t\t\t\t\t//IE\n\t\t\t\t\tcodeFileName = URLEncoder.encode(fileName, \"UTF-8\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-oss.taotao-cloud-starter-oss-minio.main",
    "inspectionName": "IndexOfReplaceableByContains"
  },
  "hash": "7871026021330427881"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'String.indexOf()' expression can be replaced with 'contains()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>-1 != agent.indexOf(\"trident\")</code> can be replaced with 'agent.contains(\"trident\")'",
  "detailsInfo": "Reports comparisons with `String.indexOf()` calls that can be replaced with a call to the `String.contains()` method.\n\n**Example:**\n\n\n      boolean b = \"abcd\".indexOf('e') >= 0;\n\nAfter the quick-fix is applied:\n\n\n      boolean b = \"abcd\".contains('e');\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-oss/taotao-cloud-starter-oss-minio/src/main/java/com/taotao/cloud/oss/minio/MinioUploadFileServiceImpl.java",
      "language": "JAVA",
      "line": 278,
      "offset": 39,
      "length": 30,
      "code": {
        "startLine": 276,
        "length": 30,
        "offset": 135,
        "surroundingCode": "\t\t\t\tString codeFileName = \"\";\n\t\t\t\tString agent = request.getHeader(\"USER-AGENT\").toLowerCase();\n\t\t\t\tif (-1 != agent.indexOf(\"msie\") || -1 != agent.indexOf(\"trident\")) {\n\t\t\t\t\t//IE\n\t\t\t\t\tcodeFileName = URLEncoder.encode(fileName, \"UTF-8\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-oss.taotao-cloud-starter-oss-minio.main",
    "inspectionName": "IndexOfReplaceableByContains"
  },
  "hash": "-7768651436241378066"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'String.indexOf()' expression can be replaced with 'contains()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>-1 != agent.indexOf(\"mozilla\")</code> can be replaced with 'agent.contains(\"mozilla\")'",
  "detailsInfo": "Reports comparisons with `String.indexOf()` calls that can be replaced with a call to the `String.contains()` method.\n\n**Example:**\n\n\n      boolean b = \"abcd\".indexOf('e') >= 0;\n\nAfter the quick-fix is applied:\n\n\n      boolean b = \"abcd\".contains('e');\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-oss/taotao-cloud-starter-oss-minio/src/main/java/com/taotao/cloud/oss/minio/MinioUploadFileServiceImpl.java",
      "language": "JAVA",
      "line": 281,
      "offset": 15,
      "length": 30,
      "code": {
        "startLine": 279,
        "length": 30,
        "offset": 83,
        "surroundingCode": "\t\t\t\t\t//IE\n\t\t\t\t\tcodeFileName = URLEncoder.encode(fileName, \"UTF-8\");\n\t\t\t\t} else if (-1 != agent.indexOf(\"mozilla\")) {\n\t\t\t\t\t//火狐，谷歌\n\t\t\t\t\tcodeFileName = new String(fileName.getBytes(\"UTF-8\"), \"iso-8859-1\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-oss.taotao-cloud-starter-oss-minio.main",
    "inspectionName": "IndexOfReplaceableByContains"
  },
  "hash": "-2551161871129344081"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>sum = sum + score</code> could be simplified to 'sum += score'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day04/Demo04/TestFor2.java",
      "language": "JAVA",
      "line": 24,
      "offset": 3,
      "length": 17,
      "code": {
        "startLine": 22,
        "length": 17,
        "offset": 16,
        "surroundingCode": "\n\t\t\t//2.累加总和\n\t\t\tsum = sum + score;\n\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "8994172361131888762"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>bitField0_ = (bitField0_ & ~0x00000001)</code> could be simplified to 'bitField0_ &= ~0x00000001'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/proto/StudentResponseList.java",
      "language": "JAVA",
      "line": 441,
      "offset": 24,
      "length": 39,
      "code": {
        "startLine": 439,
        "length": 39,
        "offset": 145,
        "surroundingCode": "                    if (studentResponse_.isEmpty()) {\n                        studentResponse_ = other.studentResponse_;\n                        bitField0_ = (bitField0_ & ~0x00000001);\n                    } else {\n                        ensureStudentResponseIsMutable();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "-7151400208684677992"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>bitField0_ = (bitField0_ & ~0x00000001)</code> could be simplified to 'bitField0_ &= ~0x00000001'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/proto/StudentResponseList.java",
      "language": "JAVA",
      "line": 454,
      "offset": 24,
      "length": 39,
      "code": {
        "startLine": 452,
        "length": 39,
        "offset": 147,
        "surroundingCode": "                        studentResponseBuilder_ = null;\n                        studentResponse_ = other.studentResponse_;\n                        bitField0_ = (bitField0_ & ~0x00000001);\n                        studentResponseBuilder_ =\n                                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "-8236941278165972366"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>bitField0_ = (bitField0_ & ~0x00000001)</code> could be simplified to 'bitField0_ &= ~0x00000001'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/proto/StudentResponseList.java",
      "language": "JAVA",
      "line": 375,
      "offset": 20,
      "length": 39,
      "code": {
        "startLine": 373,
        "length": 39,
        "offset": 182,
        "surroundingCode": "                if (((bitField0_ & 0x00000001) == 0x00000001)) {\n                    studentResponse_ = java.util.Collections.unmodifiableList(studentResponse_);\n                    bitField0_ = (bitField0_ & ~0x00000001);\n                }\n                result.studentResponse_ = studentResponse_;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "2841896726028517854"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>bitField0_ = (bitField0_ & ~0x00000001)</code> could be simplified to 'bitField0_ &= ~0x00000001'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/proto/StudentResponseList.java",
      "language": "JAVA",
      "line": 662,
      "offset": 16,
      "length": 39,
      "code": {
        "startLine": 660,
        "length": 39,
        "offset": 137,
        "surroundingCode": "            if (studentResponseBuilder_ == null) {\n                studentResponse_ = java.util.Collections.emptyList();\n                bitField0_ = (bitField0_ & ~0x00000001);\n                onChanged();\n            } else {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "6124077059499713712"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>bitField0_ = (bitField0_ & ~0x00000001)</code> could be simplified to 'bitField0_ &= ~0x00000001'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/proto/StudentResponseList.java",
      "language": "JAVA",
      "line": 341,
      "offset": 16,
      "length": 39,
      "code": {
        "startLine": 339,
        "length": 39,
        "offset": 137,
        "surroundingCode": "            if (studentResponseBuilder_ == null) {\n                studentResponse_ = java.util.Collections.emptyList();\n                bitField0_ = (bitField0_ & ~0x00000001);\n            } else {\n                studentResponseBuilder_.clear();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "1009699159774933306"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>count = count - 1</code> could be simplified to 'count -= 1'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-goods/taotao-cloud-goods-biz/src/main/java/com/taotao/cloud/goods/biz/service/impl/EsGoodsSearchServiceImpl.java",
      "language": "JAVA",
      "line": 124,
      "offset": 2,
      "length": 17,
      "code": {
        "startLine": 122,
        "length": 17,
        "offset": 105,
        "surroundingCode": "\t\tList<String> hotWords = new ArrayList<>();\n\t\t// redis 排序中，下标从0开始，所以这里需要 -1 处理 reverseRangeWithScores\n\t\tcount = count - 1;\n\t\tSet<TypedTuple<Object>> set = redisRepository.zReverseRangeByScoreWithScores(\n\t\t\tCachePrefix.HOT_WORD.getPrefix(),0, count);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-goods.taotao-cloud-goods-biz.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "7565472499928959475"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'StringBuffer' may be 'StringBuilder'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>StringBuffer idKey</code> may be declared as 'StringBuilder'",
  "detailsInfo": "Reports variables declared as `StringBuffer` and suggests replacing them with `StringBuilder`. `StringBuilder` is a non-thread-safe replacement for `StringBuffer`.\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/MyAnnoEventListener.java",
      "language": "JAVA",
      "line": 82,
      "offset": 17,
      "length": 5,
      "code": {
        "startLine": 80,
        "length": 5,
        "offset": 83,
        "surroundingCode": "\n\t\t\t\tsql += \"DELETE FROM \" + canalMsg.getTableName() + \" WHERE \";\n\t\t\t\tStringBuffer idKey = new StringBuffer();\n\t\t\t\tStringBuffer idValue = new StringBuffer();\n\t\t\t\tfor (CanalEntry.Column c : rowData.getBeforeColumnsList()) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "StringBufferReplaceableByStringBuilder"
  },
  "hash": "3458386017924127603"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'StringBuffer' may be 'StringBuilder'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>StringBuffer idValue</code> may be declared as 'StringBuilder'",
  "detailsInfo": "Reports variables declared as `StringBuffer` and suggests replacing them with `StringBuilder`. `StringBuilder` is a non-thread-safe replacement for `StringBuffer`.\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/MyAnnoEventListener.java",
      "language": "JAVA",
      "line": 83,
      "offset": 17,
      "length": 7,
      "code": {
        "startLine": 81,
        "length": 7,
        "offset": 127,
        "surroundingCode": "\t\t\t\tsql += \"DELETE FROM \" + canalMsg.getTableName() + \" WHERE \";\n\t\t\t\tStringBuffer idKey = new StringBuffer();\n\t\t\t\tStringBuffer idValue = new StringBuffer();\n\t\t\t\tfor (CanalEntry.Column c : rowData.getBeforeColumnsList()) {\n\t\t\t\t\tif (c.getIsKey()) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "StringBufferReplaceableByStringBuilder"
  },
  "hash": "-1657322786284152844"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'StringBuffer' may be 'StringBuilder'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>StringBuffer idKey</code> may be declared as 'StringBuilder'",
  "detailsInfo": "Reports variables declared as `StringBuffer` and suggests replacing them with `StringBuilder`. `StringBuilder` is a non-thread-safe replacement for `StringBuffer`.\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/option/RealDeleteOption.java",
      "language": "JAVA",
      "line": 29,
      "offset": 17,
      "length": 5,
      "code": {
        "startLine": 27,
        "length": 5,
        "offset": 69,
        "surroundingCode": "\n\t\t\t\tsql += \"DELETE FROM \" + tableName + \" WHERE \";\n\t\t\t\tStringBuffer idKey = new StringBuffer();\n\t\t\t\tStringBuffer idValue = new StringBuffer();\n\t\t\t\tfor (CanalEntry.Column c : rowData.getBeforeColumnsList()) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "StringBufferReplaceableByStringBuilder"
  },
  "hash": "-1176535845432158342"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'StringBuffer' may be 'StringBuilder'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>StringBuffer idValue</code> may be declared as 'StringBuilder'",
  "detailsInfo": "Reports variables declared as `StringBuffer` and suggests replacing them with `StringBuilder`. `StringBuilder` is a non-thread-safe replacement for `StringBuffer`.\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/option/RealDeleteOption.java",
      "language": "JAVA",
      "line": 30,
      "offset": 17,
      "length": 7,
      "code": {
        "startLine": 28,
        "length": 7,
        "offset": 113,
        "surroundingCode": "\t\t\t\tsql += \"DELETE FROM \" + tableName + \" WHERE \";\n\t\t\t\tStringBuffer idKey = new StringBuffer();\n\t\t\t\tStringBuffer idValue = new StringBuffer();\n\t\t\t\tfor (CanalEntry.Column c : rowData.getBeforeColumnsList()) {\n\t\t\t\t\tif (c.getIsKey()) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "StringBufferReplaceableByStringBuilder"
  },
  "hash": "6159569023908939762"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'StringBuffer' may be 'StringBuilder'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>StringBuffer handleMsg</code> may be declared as 'StringBuilder'",
  "detailsInfo": "Reports variables declared as `StringBuffer` and suggests replacing them with `StringBuilder`. `StringBuilder` is a non-thread-safe replacement for `StringBuffer`.\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-xxljob/src/main/java/com/taotao/cloud/xxljob/core/thread/JobCompleteHelper.java",
      "language": "JAVA",
      "line": 165,
      "offset": 15,
      "length": 9,
      "code": {
        "startLine": 163,
        "length": 9,
        "offset": 32,
        "surroundingCode": "\n\t\t// handle msg\n\t\tStringBuffer handleMsg = new StringBuffer();\n\t\tif (log.getHandleMsg()!=null) {\n\t\t\thandleMsg.append(log.getHandleMsg()).append(\"<br>\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-xxljob.main",
    "inspectionName": "StringBufferReplaceableByStringBuilder"
  },
  "hash": "-7087102673044320805"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'StringBuffer' may be 'StringBuilder'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>StringBuffer runResultSB</code> may be declared as 'StringBuilder'",
  "detailsInfo": "Reports variables declared as `StringBuffer` and suggests replacing them with `StringBuilder`. `StringBuilder` is a non-thread-safe replacement for `StringBuffer`.\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-xxljob/src/main/java/com/taotao/cloud/xxljob/core/trigger/XxlJobTrigger.java",
      "language": "JAVA",
      "line": 217,
      "offset": 21,
      "length": 11,
      "code": {
        "startLine": 215,
        "length": 11,
        "offset": 32,
        "surroundingCode": "        }\n\n        StringBuffer runResultSB = new StringBuffer(I18nUtil.getString(\"jobconf_trigger_run\") + \"：\");\n        runResultSB.append(\"<br>address：\").append(address);\n        runResultSB.append(\"<br>code：\").append(runResult.getCode());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-xxljob.main",
    "inspectionName": "StringBufferReplaceableByStringBuilder"
  },
  "hash": "3277011787891140868"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'StringBuffer' may be 'StringBuilder'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>StringBuffer triggerMsgSb</code> may be declared as 'StringBuilder'",
  "detailsInfo": "Reports variables declared as `StringBuffer` and suggests replacing them with `StringBuilder`. `StringBuilder` is a non-thread-safe replacement for `StringBuffer`.\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-xxljob/src/main/java/com/taotao/cloud/xxljob/core/trigger/XxlJobTrigger.java",
      "language": "JAVA",
      "line": 170,
      "offset": 21,
      "length": 12,
      "code": {
        "startLine": 168,
        "length": 12,
        "offset": 59,
        "surroundingCode": "\n        // 5、collection trigger info\n        StringBuffer triggerMsgSb = new StringBuffer();\n        triggerMsgSb.append(I18nUtil.getString(\"jobconf_trigger_type\")).append(\"：\").append(triggerType.getTitle());\n        triggerMsgSb.append(\"<br>\").append(I18nUtil.getString(\"jobconf_trigger_admin_adress\")).append(\"：\").append(IpUtil.getIp());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-xxljob.main",
    "inspectionName": "StringBufferReplaceableByStringBuilder"
  },
  "hash": "6123358430508921784"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 231,
      "offset": 29,
      "length": 6,
      "code": {
        "startLine": 229,
        "length": 6,
        "offset": 95,
        "surroundingCode": "\t\t//左侧从上到下 3个\n\t\tString leftUp = getGeoHashBase32(leftLat, upLng);\n\t\tif (!(leftUp == null || \"\".equals(leftUp))) {\n\t\t\tbase32ForAround.add(leftUp);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "5744653237633483690"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 235,
      "offset": 30,
      "length": 6,
      "code": {
        "startLine": 233,
        "length": 6,
        "offset": 85,
        "surroundingCode": "\t\t}\n\t\tString leftMid = getGeoHashBase32(leftLat, lng);\n\t\tif (!(leftMid == null || \"\".equals(leftMid))) {\n\t\t\tbase32ForAround.add(leftMid);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "-6162240739275418659"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 239,
      "offset": 31,
      "length": 6,
      "code": {
        "startLine": 237,
        "length": 6,
        "offset": 91,
        "surroundingCode": "\t\t}\n\t\tString leftDown = getGeoHashBase32(leftLat, downLng);\n\t\tif (!(leftDown == null || \"\".equals(leftDown))) {\n\t\t\tbase32ForAround.add(leftDown);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "1501094370790750227"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 244,
      "offset": 28,
      "length": 6,
      "code": {
        "startLine": 242,
        "length": 6,
        "offset": 89,
        "surroundingCode": "\t\t//中间从上到下 3个\n\t\tString midUp = getGeoHashBase32(lat, upLng);\n\t\tif (!(midUp == null || \"\".equals(midUp))) {\n\t\t\tbase32ForAround.add(midUp);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "6455048046630727580"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 248,
      "offset": 29,
      "length": 6,
      "code": {
        "startLine": 246,
        "length": 6,
        "offset": 79,
        "surroundingCode": "\t\t}\n\t\tString midMid = getGeoHashBase32(lat, lng);\n\t\tif (!(midMid == null || \"\".equals(midMid))) {\n\t\t\tbase32ForAround.add(midMid);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "-346737246317868653"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 252,
      "offset": 30,
      "length": 6,
      "code": {
        "startLine": 250,
        "length": 6,
        "offset": 85,
        "surroundingCode": "\t\t}\n\t\tString midDown = getGeoHashBase32(lat, downLng);\n\t\tif (!(midDown == null || \"\".equals(midDown))) {\n\t\t\tbase32ForAround.add(midDown);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "-3042198266504251606"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 257,
      "offset": 30,
      "length": 6,
      "code": {
        "startLine": 255,
        "length": 6,
        "offset": 98,
        "surroundingCode": "\t\t//右侧从上到下 3个\n\t\tString rightUp = getGeoHashBase32(rightLat, upLng);\n\t\tif (!(rightUp == null || \"\".equals(rightUp))) {\n\t\t\tbase32ForAround.add(rightUp);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "1308361235767280088"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 261,
      "offset": 31,
      "length": 6,
      "code": {
        "startLine": 259,
        "length": 6,
        "offset": 88,
        "surroundingCode": "\t\t}\n\t\tString rightMid = getGeoHashBase32(rightLat, lng);\n\t\tif (!(rightMid == null || \"\".equals(rightMid))) {\n\t\t\tbase32ForAround.add(rightMid);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "4203406168276693409"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "'String.equals()' can be replaced with 'String.isEmpty()'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>equals(\"\")</code> can be replaced with 'isEmpty()'",
  "detailsInfo": "Reports `equals()` being called to compare a `String` with an empty string. In this case, using `.isEmpty()` is better as it shows you exactly what you're checking.\n\n**Example:**\n\n\n      void checkString(String s){\n        if (\"\".equals(s)) throw new IllegalArgumentException();\n      }\n\nAfter the quick-fix is applied:\n\n\n      void checkString(String s){\n        if (s != null && s.isEmpty()) throw new IllegalArgumentException();\n      }\n\n\n`\"\".equals(str)` returns false when `str` is null. For safety, this inspection's quick-fix inserts an explicit\nnull-check when\nthe `equals()` argument is nullable. Use the option to make the inspection ignore such cases.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-common/src/main/java/com/taotao/cloud/common/utils/location/GeoHash.java",
      "language": "JAVA",
      "line": 265,
      "offset": 32,
      "length": 6,
      "code": {
        "startLine": 263,
        "length": 6,
        "offset": 94,
        "surroundingCode": "\t\t}\n\t\tString rightDown = getGeoHashBase32(rightLat, downLng);\n\t\tif (!(rightDown == null || \"\".equals(rightDown))) {\n\t\t\tbase32ForAround.add(rightDown);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-common.main",
    "inspectionName": "StringEqualsEmptyString"
  },
  "hash": "9182606839592612698"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/option/RealDropTableOption.java",
      "language": "JAVA",
      "line": 20,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 18,
        "length": 10,
        "offset": 117,
        "surroundingCode": "\tpublic void doOption(String destination, String schemaName, String tableName,\n\t\tCanalEntry.RowChange rowChange) {\n\t\tSystem.out.println(\"======================接口方式（删除表操作）==========================\");\n\t\tSystem.out.println(\"use \" + schemaName + \";\\n\" + rowChange.getSql());\n\t\tSystem.out.println(\"\\n======================================================\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8720028177991746187"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/option/RealDropTableOption.java",
      "language": "JAVA",
      "line": 21,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 123,
        "surroundingCode": "\t\tCanalEntry.RowChange rowChange) {\n\t\tSystem.out.println(\"======================接口方式（删除表操作）==========================\");\n\t\tSystem.out.println(\"use \" + schemaName + \";\\n\" + rowChange.getSql());\n\t\tSystem.out.println(\"\\n======================================================\");\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8752248268887795100"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/option/RealDropTableOption.java",
      "language": "JAVA",
      "line": 22,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 159,
        "surroundingCode": "\t\tSystem.out.println(\"======================接口方式（删除表操作）==========================\");\n\t\tSystem.out.println(\"use \" + schemaName + \";\\n\" + rowChange.getSql());\n\t\tSystem.out.println(\"\\n======================================================\");\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "4082040548265004949"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/option/RealDeleteOption.java",
      "language": "JAVA",
      "line": 22,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 117,
        "surroundingCode": "\tpublic void doOption(String destination, String schemaName, String tableName,\n\t\tCanalEntry.RowChange rowChange) {\n\t\tSystem.out.println(\"======================接口方式（删除数据操作）==========================\");\n\t\tList<CanalEntry.RowData> rowDatasList = rowChange.getRowDatasList();\n\t\tfor (CanalEntry.RowData rowData : rowDatasList) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2089398936647572298"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/option/RealDeleteOption.java",
      "language": "JAVA",
      "line": 43,
      "offset": 4,
      "length": 10,
      "code": {
        "startLine": 41,
        "length": 10,
        "offset": 46,
        "surroundingCode": "\t\t\t\tsql += idKey + \" =\" + idValue + \";\";\n\n\t\t\t\tSystem.out.println(sql);\n\t\t\t}\n\t\t\tSystem.out.println(\"\\n======================================================\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2048214330290473142"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/canal/option/RealDeleteOption.java",
      "language": "JAVA",
      "line": 45,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 43,
        "length": 10,
        "offset": 37,
        "surroundingCode": "\t\t\t\tSystem.out.println(sql);\n\t\t\t}\n\t\t\tSystem.out.println(\"\\n======================================================\");\n\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1215557673168330056"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 64,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 62,
        "length": 10,
        "offset": 71,
        "surroundingCode": "\t@OnClose\n\tpublic void onClose(Session session) throws IOException {\n\t\tSystem.out.println(\"one connection closed\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "4700831849346637568"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 81,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 79,
        "length": 10,
        "offset": 83,
        "surroundingCode": "\tpublic void onBinary(Session session, byte[] bytes) {\n\t\tfor (byte b : bytes) {\n\t\t\tSystem.out.println(b);\n\t\t}\n\t\tsession.sendBinary(bytes);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8575406749522682859"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 74,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 72,
        "length": 10,
        "offset": 72,
        "surroundingCode": "\t@OnMessage\n\tpublic void onMessage(Session session, String message) {\n\t\tSystem.out.println(message);\n\t\tsession.sendText(\"Hello Netty!\");\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5899058504582014418"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 92,
      "offset": 5,
      "length": 10,
      "code": {
        "startLine": 90,
        "length": 10,
        "offset": 64,
        "surroundingCode": "\t\t\tswitch (idleStateEvent.state()) {\n\t\t\t\tcase READER_IDLE:\n\t\t\t\t\tSystem.out.println(\"read idle\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase WRITER_IDLE:"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "952229304284896061"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 95,
      "offset": 5,
      "length": 10,
      "code": {
        "startLine": 93,
        "length": 10,
        "offset": 39,
        "surroundingCode": "\t\t\t\t\tbreak;\n\t\t\t\tcase WRITER_IDLE:\n\t\t\t\t\tSystem.out.println(\"write idle\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase ALL_IDLE:"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7656667139181279268"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 98,
      "offset": 5,
      "length": 10,
      "code": {
        "startLine": 96,
        "length": 10,
        "offset": 36,
        "surroundingCode": "\t\t\t\t\tbreak;\n\t\t\t\tcase ALL_IDLE:\n\t\t\t\t\tSystem.out.println(\"all idle\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2989702799380607386"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 58,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 56,
        "length": 10,
        "offset": 179,
        "surroundingCode": "\tpublic void onOpen(Session session, HttpHeaders headers, @RequestParam String req,\n\t\t@RequestParam MultiValueMap reqMap, @PathVariable String arg, @PathVariable Map pathMap) {\n\t\tSystem.out.println(\"new connection\");\n\t\tSystem.out.println(req);\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7198663544376166853"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 59,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 57,
        "length": 10,
        "offset": 135,
        "surroundingCode": "\t\t@RequestParam MultiValueMap reqMap, @PathVariable String arg, @PathVariable Map pathMap) {\n\t\tSystem.out.println(\"new connection\");\n\t\tSystem.out.println(req);\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-3782990060037050389"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-demo/src/main/java/com/taotao/cloud/demo/websocket/MyWebSocket.java",
      "language": "JAVA",
      "line": 50,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 48,
        "length": 10,
        "offset": 66,
        "surroundingCode": "\t\tsession.setSubprotocols(\"stomp\");\n\t\tif (!\"ok\".equals(req)) {\n\t\t\tSystem.out.println(\"Authentication failed!\");\n\t\t\tsession.close();\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-demo.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8843017591799872018"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c5_springmvc/p2/java/web/MyRestController.java",
      "language": "JAVA",
      "line": 44,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 42,
        "length": 10,
        "offset": 87,
        "surroundingCode": "    @PostMapping(\"/users\")\n    public String saveUser(@RequestBody User user){\n        System.out.println(\"save user with post:\"+user);\n        return \"ok\";\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8209158711897611421"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c5_springmvc/p2/java/web/MyRestController.java",
      "language": "JAVA",
      "line": 38,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 36,
        "length": 10,
        "offset": 97,
        "surroundingCode": "    @DeleteMapping(\"/users/{id}\")\n    public String deleteOne(@PathVariable Integer id){\n        System.out.println(\"delete one user with delete :\"+id);\n        return \"ok\";\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6252724225001760531"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c5_springmvc/p2/java/web/MyRestController.java",
      "language": "JAVA",
      "line": 50,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 48,
        "length": 10,
        "offset": 88,
        "surroundingCode": "    @PutMapping(\"/users\")\n    public String updateUser(@RequestBody User user){\n        System.out.println(\"update user with put:\"+user);\n        return \"ok\";\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "4816168568347937773"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c5_springmvc/p2/java/web/MyRestController.java",
      "language": "JAVA",
      "line": 32,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 30,
        "length": 10,
        "offset": 91,
        "surroundingCode": "    @GetMapping(\"/users/{id}\")\n    public User queryOne(@PathVariable Integer id){\n        System.out.println(\"query one user with get:\"+id);\n        return new User(1, \"张三\");\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6147501775301764458"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s1/c5_springmvc/p2/java/web/MyRestController.java",
      "language": "JAVA",
      "line": 24,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 22,
        "length": 10,
        "offset": 70,
        "surroundingCode": "    @GetMapping(\"/users\")\n    public List<User> queryUsers(){\n        System.out.println(\"query users with get\");\n        User user1 = new User(1, \"张三\");\n        User user2 = new User(1, \"李四\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-3784793544409832628"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c8_rabbitmq/java/topic/Consumer1.java",
      "language": "JAVA",
      "line": 42,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 40,
        "length": 10,
        "offset": 71,
        "surroundingCode": "        channel.basicConsume(\"topic-queue-1\",false,consumer);\n\n        System.out.println(\"开始消费消息。。。。\");\n        // System.in.read();\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5137021220714304830"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c8_rabbitmq/java/topic/Consumer1.java",
      "language": "JAVA",
      "line": 33,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 31,
        "length": 10,
        "offset": 75,
        "surroundingCode": "                    e.printStackTrace();\n                }\n                System.out.println(\"对红色动物感兴趣接收到消息：\" + new String(body,\"UTF-8\"));\n\n                // 手动ack"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-896760159843339986"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c8_rabbitmq/java/pubsub/Consumer1.java",
      "language": "JAVA",
      "line": 43,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 41,
        "length": 10,
        "offset": 71,
        "surroundingCode": "        channel.basicConsume(\"pubsub-queue1\",false,consumer);\n\n        System.out.println(\"开始消费消息。。。。\");\n        // System.in.read();\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2050572083419553466"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c8_rabbitmq/java/pubsub/Consumer1.java",
      "language": "JAVA",
      "line": 34,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 32,
        "length": 10,
        "offset": 75,
        "surroundingCode": "                    e.printStackTrace();\n                }\n                System.out.println(\"消费者1号接收到消息：\" + new String(body,\"UTF-8\"));\n\n                // 手动ack"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7415789058178582354"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c9_springcloud/p2_customer/java/service/CustomerService.java",
      "language": "JAVA",
      "line": 29,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 27,
        "length": 10,
        "offset": 81,
        "surroundingCode": "    @HystrixCommand\n    public void clearFindById(@CacheKey Integer id){\n        System.out.println(\"findById被清空\");\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1946625927819785485"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c6_elasticsearch/java/test/Demo8.java",
      "language": "JAVA",
      "line": 36,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 34,
        "length": 10,
        "offset": 29,
        "surroundingCode": "\n        //4. 输出返回结果\n        System.out.println(resp.toString());\n\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-280971661369334399"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c6_elasticsearch/java/test/Demo12.java",
      "language": "JAVA",
      "line": 97,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 95,
        "length": 10,
        "offset": 106,
        "surroundingCode": "        Cardinality agg = resp.getAggregations().get(\"agg\");\n        long value = agg.getValue();\n        System.out.println(value);\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5172693792330853793"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaee/src/main/java/com/taotao/cloud/java/javaee/s2/c6_elasticsearch/java/test/Demo12.java",
      "language": "JAVA",
      "line": 75,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 73,
        "length": 10,
        "offset": 102,
        "surroundingCode": "            Object to = bucket.getTo();\n            long docCount = bucket.getDocCount();\n            System.out.println(String.format(\"key：%s，from：%s，to：%s，docCount：%s\",key,from,to,docCount));\n        }\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaee.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8556664399323387043"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day07/chap07_1/Dog.java",
      "language": "JAVA",
      "line": 23,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 21,
        "length": 10,
        "offset": 29,
        "surroundingCode": "\t\tint age=100;\n\t\tint n=10;\n\t\tSystem.out.println(\"狗狗正在吃东西...\"+breed);\n\t\tSystem.out.println(n);\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5555039631981080405"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day07/chap07_1/Dog.java",
      "language": "JAVA",
      "line": 24,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 22,
        "length": 10,
        "offset": 56,
        "surroundingCode": "\t\tint n=10;\n\t\tSystem.out.println(\"狗狗正在吃东西...\"+breed);\n\t\tSystem.out.println(n);\n\t}\n\t//sleep睡"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1273814361273997221"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day07/chap07_1/Dog.java",
      "language": "JAVA",
      "line": 30,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 28,
        "length": 10,
        "offset": 20,
        "surroundingCode": "\t\tint age=100;\n\t\t\n\t\tSystem.out.println(\"狗狗开始睡觉了...\"+age);\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7923187437027291902"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day09/abs/Dog.java",
      "language": "JAVA",
      "line": 6,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 4,
        "length": 10,
        "offset": 34,
        "surroundingCode": "\t@Override\n\tpublic void eat() {\n\t\tSystem.out.println(\"狗在吃骨头\");\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6667373057260301"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day09/abs2/Bike.java",
      "language": "JAVA",
      "line": 17,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 15,
        "length": 10,
        "offset": 34,
        "surroundingCode": "\t@Override\n\tpublic void run() {\n\t\tSystem.out.println(super.getBrand()+\"牌的自行车正在前进...\");\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-9190339952412229356"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day09/abs2/Car.java",
      "language": "JAVA",
      "line": 15,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 13,
        "length": 10,
        "offset": 34,
        "surroundingCode": "\t@Override\n\tpublic void run() {\n\t\tSystem.out.println(super.getBrand()+\"牌的汽车正在前进\");\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7491642780954358461"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day10/interface_3/Animal.java",
      "language": "JAVA",
      "line": 5,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 3,
        "length": 10,
        "offset": 54,
        "surroundingCode": "public abstract class Animal {\n\tpublic void eat() {\n\t\tSystem.out.println(\"吃\");\n\t}\n\tpublic void sleep() {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "283680888774579908"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day10/interface_3/Animal.java",
      "language": "JAVA",
      "line": 8,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 6,
        "length": 10,
        "offset": 28,
        "surroundingCode": "\t}\n\tpublic void sleep() {\n\t\tSystem.out.println(\"睡\");\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2467317393852795852"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day10/interface_5/Upan.java",
      "language": "JAVA",
      "line": 7,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 5,
        "length": 10,
        "offset": 38,
        "surroundingCode": "\t@Override\n\tpublic void service() {\n\t\tSystem.out.println(\"Upan连接电脑成功，开始工作...\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "226192462166253336"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 14,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 12,
        "length": 10,
        "offset": 69,
        "surroundingCode": "\t\tString str=new String(\"java\");\n\t\tString str2=new String(\"java\");\n\t\tSystem.out.println(str==str2);\n\t\tSystem.out.println(str.equals(str2));\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6656111887895073320"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 15,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 13,
        "length": 10,
        "offset": 69,
        "surroundingCode": "\t\tString str2=new String(\"java\");\n\t\tSystem.out.println(str==str2);\n\t\tSystem.out.println(str.equals(str2));\n\t\t\n\t\tSystem.out.println(\"------------字符串方法的使用 1------------------\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1670656999939508666"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 17,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 15,
        "length": 10,
        "offset": 45,
        "surroundingCode": "\t\tSystem.out.println(str.equals(str2));\n\t\t\n\t\tSystem.out.println(\"------------字符串方法的使用 1------------------\");\n\t\t//字符串方法的使用\n\t\t//1、length();返回字符串的长度"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6479365565100041969"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 24,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 22,
        "length": 10,
        "offset": 52,
        "surroundingCode": "\t\t\n\t\tString content=\"java是世界上最好的java编程语言,java真香\";\n\t\tSystem.out.println(content.length());\n\t\tSystem.out.println(content.charAt(content.length()-1));\n\t\tSystem.out.println(content.contains(\"java\"));"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6327596365836173782"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 25,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 23,
        "length": 10,
        "offset": 89,
        "surroundingCode": "\t\tString content=\"java是世界上最好的java编程语言,java真香\";\n\t\tSystem.out.println(content.length());\n\t\tSystem.out.println(content.charAt(content.length()-1));\n\t\tSystem.out.println(content.contains(\"java\"));\n\t\tSystem.out.println(content.contains(\"php\"));"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "4490312185133309333"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 26,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 24,
        "length": 10,
        "offset": 100,
        "surroundingCode": "\t\tSystem.out.println(content.length());\n\t\tSystem.out.println(content.charAt(content.length()-1));\n\t\tSystem.out.println(content.contains(\"java\"));\n\t\tSystem.out.println(content.contains(\"php\"));\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2424837574499059056"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 27,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 25,
        "length": 10,
        "offset": 108,
        "surroundingCode": "\t\tSystem.out.println(content.charAt(content.length()-1));\n\t\tSystem.out.println(content.contains(\"java\"));\n\t\tSystem.out.println(content.contains(\"php\"));\n\t\t\n\t\tSystem.out.println(\"------------字符串方法的使用 2------------------\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "9183310200634045568"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 29,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 27,
        "length": 10,
        "offset": 52,
        "surroundingCode": "\t\tSystem.out.println(content.contains(\"php\"));\n\t\t\n\t\tSystem.out.println(\"------------字符串方法的使用 2------------------\");\n\t\t//字符串方法的使用\n\t\t//4、toCharArray();返回字符串对应的数组"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6561674967508747010"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 34,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 32,
        "length": 10,
        "offset": 67,
        "surroundingCode": "\t\t//5、indexOf();返回子字符串首次出现的位置\n\t\t//6、lastIndexOf();返回字符串最后一次出现的位置\n\t\tSystem.out.println(Arrays.toString(content.toCharArray()));\n\t\tSystem.out.println(content.indexOf(\"java\"));\n\t\tSystem.out.println(content.indexOf(\"java\", 4));"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5097750854514321462"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 35,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 33,
        "length": 10,
        "offset": 99,
        "surroundingCode": "\t\t//6、lastIndexOf();返回字符串最后一次出现的位置\n\t\tSystem.out.println(Arrays.toString(content.toCharArray()));\n\t\tSystem.out.println(content.indexOf(\"java\"));\n\t\tSystem.out.println(content.indexOf(\"java\", 4));\n\t\tSystem.out.println(content.lastIndexOf(\"java\"));"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7772918265453729269"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 36,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 34,
        "length": 10,
        "offset": 111,
        "surroundingCode": "\t\tSystem.out.println(Arrays.toString(content.toCharArray()));\n\t\tSystem.out.println(content.indexOf(\"java\"));\n\t\tSystem.out.println(content.indexOf(\"java\", 4));\n\t\tSystem.out.println(content.lastIndexOf(\"java\"));\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8778681837553284293"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 37,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 35,
        "length": 10,
        "offset": 99,
        "surroundingCode": "\t\tSystem.out.println(content.indexOf(\"java\"));\n\t\tSystem.out.println(content.indexOf(\"java\", 4));\n\t\tSystem.out.println(content.lastIndexOf(\"java\"));\n\t\t\n\t\tSystem.out.println(\"------------字符串方法的使用3------------------\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "9064406819546896037"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 39,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 37,
        "length": 10,
        "offset": 56,
        "surroundingCode": "\t\tSystem.out.println(content.lastIndexOf(\"java\"));\n\t\t\n\t\tSystem.out.println(\"------------字符串方法的使用3------------------\");\n\t\t\n\t\t//7、trim();去掉字符串前后的空格"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-18211719137747461"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 46,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 44,
        "length": 10,
        "offset": 44,
        "surroundingCode": "\t\t\n\t\tString content2=\"   hello World   \";\n\t\tSystem.out.println(content2.trim());\n\t\tSystem.out.println(content2.toUpperCase());\n\t\tSystem.out.println(content2.toLowerCase());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7146663584988944840"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 47,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 45,
        "length": 10,
        "offset": 80,
        "surroundingCode": "\t\tString content2=\"   hello World   \";\n\t\tSystem.out.println(content2.trim());\n\t\tSystem.out.println(content2.toUpperCase());\n\t\tSystem.out.println(content2.toLowerCase());\n\t\tString filename=\"hello.java\";"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "4984822722600677908"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 48,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 46,
        "length": 10,
        "offset": 87,
        "surroundingCode": "\t\tSystem.out.println(content2.trim());\n\t\tSystem.out.println(content2.toUpperCase());\n\t\tSystem.out.println(content2.toLowerCase());\n\t\tString filename=\"hello.java\";\n\t\tSystem.out.println(filename.endsWith(\".java\"));"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8904584785671853242"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 50,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 48,
        "length": 10,
        "offset": 80,
        "surroundingCode": "\t\tSystem.out.println(content2.toLowerCase());\n\t\tString filename=\"hello.java\";\n\t\tSystem.out.println(filename.endsWith(\".java\"));\n\t\tSystem.out.println(filename.startsWith(\"hello\"));\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1747494974943132751"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 51,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 49,
        "length": 10,
        "offset": 84,
        "surroundingCode": "\t\tString filename=\"hello.java\";\n\t\tSystem.out.println(filename.endsWith(\".java\"));\n\t\tSystem.out.println(filename.startsWith(\"hello\"));\n\t\t\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7282339902401066345"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 54,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 52,
        "length": 10,
        "offset": 8,
        "surroundingCode": "\t\t\n\t\t\n\t\tSystem.out.println(\"------------字符串方法的使用4------------------\");\n\t\t\n\t\t//10、replace(char old,char new); 用新的字符或字符串替换旧的字符或字符串"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7627901628529089925"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 59,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 57,
        "length": 10,
        "offset": 29,
        "surroundingCode": "\t\t//11、split();对字符串进行拆分\n\t\t\n\t\tSystem.out.println(content.replace(\"java\", \"php\"));\n\t\t\n\t\tString say=\"java is the best   programing language,java xiang\";"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7372628100781207492"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 63,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 61,
        "length": 10,
        "offset": 103,
        "surroundingCode": "\t\tString say=\"java is the best   programing language,java xiang\";\n\t\tString[] arr=say.split(\"[ ,]+\");\n\t\tSystem.out.println(arr.length);\n\t\tfor (String string : arr) {\n\t\t\tSystem.out.println(string);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6316332054556086961"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 65,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 63,
        "length": 10,
        "offset": 67,
        "surroundingCode": "\t\tSystem.out.println(arr.length);\n\t\tfor (String string : arr) {\n\t\t\tSystem.out.println(string);\n\t\t}\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1325163549842533767"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 69,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 67,
        "length": 10,
        "offset": 40,
        "surroundingCode": "\t\t\n\t\t//补充两个方法equals 、compareTo();比较大小\n\t\tSystem.out.println(\"---------补充---------\");\n\t\tString s1=\"hello\";\n\t\tString s2=\"HELLO\";"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2528913023488897226"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 72,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 70,
        "length": 10,
        "offset": 44,
        "surroundingCode": "\t\tString s1=\"hello\";\n\t\tString s2=\"HELLO\";\n\t\tSystem.out.println(s1.equalsIgnoreCase(s2));\n\t\t\n\t\tString s3=\"abc\";//97"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "29979448784474093"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 76,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 74,
        "length": 10,
        "offset": 52,
        "surroundingCode": "\t\tString s3=\"abc\";//97\n\t\tString s4=\"ayzawe\";//120\n\t\tSystem.out.println(s3.compareTo(s4));\n\t\t\n\t\tString s5=\"abc\";"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1704509230696838796"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_5/Demo3.java",
      "language": "JAVA",
      "line": 80,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 78,
        "length": 10,
        "offset": 40,
        "surroundingCode": "\t\tString s5=\"abc\";\n\t\tString s6=\"abc\";\n\t\tSystem.out.println(s5.compareTo(s6));\n\t\t\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "827623271440289939"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day11/chapter11_6/Student.java",
      "language": "JAVA",
      "line": 33,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 31,
        "length": 10,
        "offset": 59,
        "surroundingCode": "\t@Override\n\tprotected void finalize() throws Throwable {\n\t\tSystem.out.println(\"回收了\"+name+\"\"+\"   \"+age);\n\t}\n\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-4197216385792330587"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day12/chapter12_1/Demo4.java",
      "language": "JAVA",
      "line": 21,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 34,
        "surroundingCode": "\t\tlist.add(50);\n\t\tlist.add(60);\n\t\tSystem.out.println(\"元素个数:\"+list.size());\n\t\tSystem.out.println(list.toString());\n\t\t//2删除操作"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2780061334992005056"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day12/chapter12_1/Demo4.java",
      "language": "JAVA",
      "line": 22,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 61,
        "surroundingCode": "\t\tlist.add(60);\n\t\tSystem.out.println(\"元素个数:\"+list.size());\n\t\tSystem.out.println(list.toString());\n\t\t//2删除操作\n\t\t//list.remove(0);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-9173642574705730743"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day12/chapter12_1/Demo4.java",
      "language": "JAVA",
      "line": 31,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 29,
        "length": 10,
        "offset": 66,
        "surroundingCode": "\t\t//3补充方法subList：返回子集合,含头不含尾\n\t\tList subList=list.subList(1, 3);\n\t\tSystem.out.println(subList.toString());\n\t\t\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1065794286815051946"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day12/chapter12_3/Demo7.java",
      "language": "JAVA",
      "line": 34,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 32,
        "length": 10,
        "offset": 28,
        "surroundingCode": "\t\ttreeSet.add(\"xian\");\n\t\t\n\t\tSystem.out.println(treeSet.toString());\n\t\t\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8753723077461680656"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day13/chapter13_1/TestPerson.java",
      "language": "JAVA",
      "line": 8,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 6,
        "length": 10,
        "offset": 51,
        "surroundingCode": "\t\txiaozhang.setAge(20);\n\t\txiaozhang.setSex(\"妖\");\n\t\tSystem.out.println(xiaozhang.toString());\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-607506926496090969"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day13/chapter13_1/Demo5.java",
      "language": "JAVA",
      "line": 19,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 17,
        "length": 10,
        "offset": 77,
        "surroundingCode": "//\t\t\tString string=null;\n//\t\t\tSystem.out.println(string.equals(\"hello\"));\n\t\t\tSystem.out.println(\"请输入第一个数字\");\n\t\t\tint num1=input.nextInt();//InputMismatchException\n\t\t\tSystem.out.println(\"请输入第二个数字\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2275372289810630068"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day13/chapter13_1/Demo5.java",
      "language": "JAVA",
      "line": 21,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 91,
        "surroundingCode": "\t\t\tSystem.out.println(\"请输入第一个数字\");\n\t\t\tint num1=input.nextInt();//InputMismatchException\n\t\t\tSystem.out.println(\"请输入第二个数字\");\n\t\t\tint num2=input.nextInt();\n\t\t\tresult=num1/num2;//发生异常// ArethmicException"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5273435559625614596"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day13/chapter13_1/Demo5.java",
      "language": "JAVA",
      "line": 25,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 23,
        "length": 10,
        "offset": 109,
        "surroundingCode": "\t\t\tresult=num1/num2;//发生异常// ArethmicException\n\t\t}catch (ArithmeticException e) {//捕获 Exception：是所有异常的父类\t\n\t\t\tSystem.out.println(\"算术异常\");\n\t\t}catch (InputMismatchException e) {\n\t\t\tSystem.out.println(\"输入不匹配异常\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2500636184795401826"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day13/chapter13_1/Demo5.java",
      "language": "JAVA",
      "line": 27,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 25,
        "length": 10,
        "offset": 72,
        "surroundingCode": "\t\t\tSystem.out.println(\"算术异常\");\n\t\t}catch (InputMismatchException e) {\n\t\t\tSystem.out.println(\"输入不匹配异常\");\n\t\t}catch (Exception e) {\n\t\t\tSystem.out.println(\"未知异常\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6598833280526399377"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day13/chapter13_1/Demo5.java",
      "language": "JAVA",
      "line": 29,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 27,
        "length": 10,
        "offset": 62,
        "surroundingCode": "\t\t\tSystem.out.println(\"输入不匹配异常\");\n\t\t}catch (Exception e) {\n\t\t\tSystem.out.println(\"未知异常\");\n\t\t}\n\t\tSystem.out.println(\"结果是:\"+result);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5948654337737870864"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day13/chapter13_1/Demo5.java",
      "language": "JAVA",
      "line": 31,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 29,
        "length": 10,
        "offset": 37,
        "surroundingCode": "\t\t\tSystem.out.println(\"未知异常\");\n\t\t}\n\t\tSystem.out.println(\"结果是:\"+result);\n\t\tSystem.out.println(\"程序结束了...\");\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-3885313395467329222"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day13/chapter13_1/Demo5.java",
      "language": "JAVA",
      "line": 32,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 30,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\t\t}\n\t\tSystem.out.println(\"结果是:\"+result);\n\t\tSystem.out.println(\"程序结束了...\");\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5639440980488729477"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day14/chapter14_1/MyRunnable.java",
      "language": "JAVA",
      "line": 8,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 6,
        "length": 10,
        "offset": 51,
        "surroundingCode": "\tpublic void run() {\n\t\tfor(int i=0;i<100;i++) {\n\t\t\tSystem.out.println(Thread.currentThread().getName()+\" .........\"+i);\n\t\t}\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7437842568124472570"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day14/chatper14_3/JoinThread.java",
      "language": "JAVA",
      "line": 11,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 9,
        "length": 10,
        "offset": 50,
        "surroundingCode": "\tpublic void run() {\n\t\tfor(int i=0;i<30;i++) {\n\t\t\tSystem.out.println(Thread.currentThread().getName()+\"......\"+i);\n\t\t\ttry {\n\t\t\t\tThread.sleep(500);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1814766957687801316"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day14/chatper14_4/ThreadSafe.java",
      "language": "JAVA",
      "line": 51,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 49,
        "length": 10,
        "offset": 23,
        "surroundingCode": "\t\tb.join();//加入线程\n\t\t\n\t\tSystem.out.println(Arrays.toString(s));\n\t\t\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6093536408656828496"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day14/chatper14_9/TestMyList.java",
      "language": "JAVA",
      "line": 31,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 29,
        "length": 10,
        "offset": 28,
        "surroundingCode": "\t\tt1.join();\n\t\tt2.join();\n\t\tSystem.out.println(Arrays.toString(list.getStr()));\n\t\t\n\t\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6777639521251131373"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day14/chatper14_10/Demo5.java",
      "language": "JAVA",
      "line": 39,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 37,
        "length": 10,
        "offset": 28,
        "surroundingCode": "\t\tt1.join();\n\t\tt2.join();\n\t\tSystem.out.println(\"-------------出队-------------\");\n\t\t//4出队操作\n\t\tint size=queue.size();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-4219108290676415753"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day14/chatper14_10/Demo5.java",
      "language": "JAVA",
      "line": 43,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 41,
        "length": 10,
        "offset": 56,
        "surroundingCode": "\t\tint size=queue.size();\n\t\tfor(int i=0;i<size;i++) {\n\t\t\tSystem.out.println(queue.poll());\n\t\t}\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8108162460558494786"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 46,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 44,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\t\t// 5接收\n\t\tString reply = br.readLine();\n\t\tSystem.out.println(\"服务器回复:\" + reply);\n\t\t// 6关闭\n\t\tbw.close();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6697841081771862068"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 82,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 80,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\t\t// 5接收\n\t\tString reply = br.readLine();\n\t\tSystem.out.println(\"服务器回复:\" + reply);\n\t\t// 6关闭\n\t\tbw.close();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2218567516046846911"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 55,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 53,
        "length": 10,
        "offset": 84,
        "surroundingCode": "\tpublic static String getRegistInfo() {\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"请输入用户编号\");\n\t\tint id = input.nextInt();\n\t\tSystem.out.println(\"请输入姓名\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7912193019907750899"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 57,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 55,
        "length": 10,
        "offset": 63,
        "surroundingCode": "\t\tSystem.out.println(\"请输入用户编号\");\n\t\tint id = input.nextInt();\n\t\tSystem.out.println(\"请输入姓名\");\n\t\tString name = input.next();\n\t\tSystem.out.println(\"请输入密码\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2101260823188696654"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 59,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 57,
        "length": 10,
        "offset": 63,
        "surroundingCode": "\t\tSystem.out.println(\"请输入姓名\");\n\t\tString name = input.next();\n\t\tSystem.out.println(\"请输入密码\");\n\t\tString pwd = input.next();\n\t\tSystem.out.println(\"请输入年龄\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6157332412894193713"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 61,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 59,
        "length": 10,
        "offset": 62,
        "surroundingCode": "\t\tSystem.out.println(\"请输入密码\");\n\t\tString pwd = input.next();\n\t\tSystem.out.println(\"请输入年龄\");\n\t\tint age = input.nextInt();\n\t\t// {id : 1001, name :tom, pwd :123, age : 20 }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6442720190481166000"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 90,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 88,
        "length": 10,
        "offset": 83,
        "surroundingCode": "\tpublic static String getLoginInfo() {\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"请输入用户编号\");\n\t\tint id = input.nextInt();\n\t\tSystem.out.println(\"请输入密码\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8149132315721533925"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 92,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 90,
        "length": 10,
        "offset": 63,
        "surroundingCode": "\t\tSystem.out.println(\"请输入用户编号\");\n\t\tint id = input.nextInt();\n\t\tSystem.out.println(\"请输入密码\");\n\t\tString pwd = input.next();\n\t\t// {id : 1001, name :tom, pwd :123, age : 20 }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7909966059632332400"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day16/chap16_4/UserClient.java",
      "language": "JAVA",
      "line": 18,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 16,
        "length": 10,
        "offset": 87,
        "surroundingCode": "public class UserClient {\n\tpublic static void main(String[] args) throws Exception {\n\t\tSystem.out.println(\"---------请选择 1 注册 2 登录-----------\");\n\t\tScanner input = new Scanner(System.in);\n\t\tint choice = input.nextInt();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6947064701409213228"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day17/chap17_1/Person.java",
      "language": "JAVA",
      "line": 30,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 28,
        "length": 10,
        "offset": 28,
        "surroundingCode": "\t//吃\n\tpublic void eat() {\n\t\tSystem.out.println(name+\"正在吃东西......\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7692447529937502105"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day17/chap17_1/Person.java",
      "language": "JAVA",
      "line": 45,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 43,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\t//私有的方法\n\tprivate void privateMethod() {\n\t\tSystem.out.println(\"这是一个私有方法\");\n\t}\n\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7908202990821267921"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day17/chap17_1/Person.java",
      "language": "JAVA",
      "line": 40,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 38,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\t//带参的方法\n\tpublic void eat(String food) {\n\t\tSystem.out.println(name+\"开始吃....\"+food);\n\t}\n\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8239164633855445578"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day17/chap17_1/Person.java",
      "language": "JAVA",
      "line": 24,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 22,
        "length": 10,
        "offset": 40,
        "surroundingCode": "\t\tthis.name = name;\n\t\tthis.age = age;\n\t\tSystem.out.println(\"带参构造方法执行了...\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7646550937937970748"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day17/chap17_1/Person.java",
      "language": "JAVA",
      "line": 50,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 48,
        "length": 10,
        "offset": 47,
        "surroundingCode": "\t//静态方法\n\tpublic static void staticMethod() {\n\t\tSystem.out.println(\"这是一个静态方法\");\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1183105198074476260"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day17/chap17_1/Person.java",
      "language": "JAVA",
      "line": 17,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 15,
        "length": 10,
        "offset": 23,
        "surroundingCode": "\t\n\tpublic Person() {\n\t\tSystem.out.println(\"无参构造执行了...\");\n\t}\n\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7439047789614829108"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day17/chap17_3/TestSingleTon.java",
      "language": "JAVA",
      "line": 10,
      "offset": 5,
      "length": 10,
      "code": {
        "startLine": 8,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\t\t\t\t@Override\n\t\t\t\tpublic void run() {\n\t\t\t\t\tSystem.out.println(SingleTon3.getInstance().hashCode());\n\t\t\t\t}\n\t\t\t}).start();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1865976824214070821"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_1/Demo3.java",
      "language": "JAVA",
      "line": 49,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 47,
        "length": 10,
        "offset": 92,
        "surroundingCode": "\t\tlist.add(\"zhaoliu\");\n\t\tList<String> result=filterNames(s->s.startsWith(\"zhang\"), list);\n\t\tSystem.out.println(result.toString());\n\t\t\n\t\tList<String> result2=filterNames(s->s.length()>5, list);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7532649305713768066"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_1/Demo3.java",
      "language": "JAVA",
      "line": 52,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 50,
        "length": 10,
        "offset": 64,
        "surroundingCode": "\t\t\n\t\tList<String> result2=filterNames(s->s.length()>5, list);\n\t\tSystem.out.println(result2);\n\t}\n\t//Consumer 消费型接口"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1820070719509789422"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo4.java",
      "language": "JAVA",
      "line": 17,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 15,
        "length": 10,
        "offset": 71,
        "surroundingCode": "\t\t//(1)把时间格式化成字符串\n\t\tString format = dtf.format(LocalDateTime.now());\n\t\tSystem.out.println(format);\n\t\t//(2)把字符串解析成时间\n\t\tLocalDateTime localDateTime = LocalDateTime.parse(\"2020/03/10 10:20:35\", dtf);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-4629298767191230212"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo4.java",
      "language": "JAVA",
      "line": 20,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 18,
        "length": 10,
        "offset": 100,
        "surroundingCode": "\t\t//(2)把字符串解析成时间\n\t\tLocalDateTime localDateTime = LocalDateTime.parse(\"2020/03/10 10:20:35\", dtf);\n\t\tSystem.out.println(localDateTime);\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1333536572872920253"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 21,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 54,
        "surroundingCode": "\t\t//1创建Instant：时间戳\n\t\tInstant instant=Instant.now();\n\t\tSystem.out.println(instant.toString());\n\t\tSystem.out.println(instant.toEpochMilli());\n\t\tSystem.out.println(System.currentTimeMillis());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6119995216025222406"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 22,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 77,
        "surroundingCode": "\t\tInstant instant=Instant.now();\n\t\tSystem.out.println(instant.toString());\n\t\tSystem.out.println(instant.toEpochMilli());\n\t\tSystem.out.println(System.currentTimeMillis());\n\t\t//2添加减少时间"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7013651943436959257"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 23,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 21,
        "length": 10,
        "offset": 90,
        "surroundingCode": "\t\tSystem.out.println(instant.toString());\n\t\tSystem.out.println(instant.toEpochMilli());\n\t\tSystem.out.println(System.currentTimeMillis());\n\t\t//2添加减少时间\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6062009180087492456"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 28,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 26,
        "length": 10,
        "offset": 51,
        "surroundingCode": "\t\tInstant instant2 = instant.plusSeconds(10);\n\t\t\n\t\tSystem.out.println(Duration.between(instant, instant2).toMillis());\n\t\t\n\t\t//3ZoneId"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6223790366129214580"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 33,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 31,
        "length": 10,
        "offset": 109,
        "surroundingCode": "\t\tSet<String> availableZoneIds = ZoneId.getAvailableZoneIds();\n\t\tfor (String string : availableZoneIds) {\n\t\t\tSystem.out.println(string);\n\t\t}\n\t\t"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2887746612635166029"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 36,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 34,
        "length": 10,
        "offset": 9,
        "surroundingCode": "\t\t}\n\t\t\n\t\tSystem.out.println(ZoneId.systemDefault().toString());\n\t\t\n\t\t//1 Date --->Instant---->LocalDateTime"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-191737978575648026"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 39,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 37,
        "length": 10,
        "offset": 46,
        "surroundingCode": "\t\t\n\t\t//1 Date --->Instant---->LocalDateTime\n\t\tSystem.out.println(\"-------------Date --->Instant---->LocalDateTime-----------\");\n\t\tDate date=new Date();\n\t\tInstant instant3 = date.toInstant();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5849710642468587020"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 42,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 40,
        "length": 10,
        "offset": 65,
        "surroundingCode": "\t\tDate date=new Date();\n\t\tInstant instant3 = date.toInstant();\n\t\tSystem.out.println(instant3);\n\t\t\n\t\tLocalDateTime localDateTime = LocalDateTime.ofInstant(instant3, ZoneId.systemDefault());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "3146165456403027638"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 45,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 43,
        "length": 10,
        "offset": 96,
        "surroundingCode": "\t\t\n\t\tLocalDateTime localDateTime = LocalDateTime.ofInstant(instant3, ZoneId.systemDefault());\n\t\tSystem.out.println(localDateTime);\n\t\t\n\t\t//1 LocalDateTime --->Instant---->Date"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7119943829205610280"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 48,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 46,
        "length": 10,
        "offset": 46,
        "surroundingCode": "\t\t\n\t\t//1 LocalDateTime --->Instant---->Date\n\t\tSystem.out.println(\"-------------LocalDateTime --->Instant---->Date-----------\");\n\t\n\t\tInstant instant4 = localDateTime.atZone(ZoneId.systemDefault()).toInstant();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1283953157688312082"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 51,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 49,
        "length": 10,
        "offset": 83,
        "surroundingCode": "\t\n\t\tInstant instant4 = localDateTime.atZone(ZoneId.systemDefault()).toInstant();\n\t\tSystem.out.println(instant4);\n\t\tDate from = Date.from(instant4);\n\t\tSystem.out.println(from);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-3736338121627858600"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day18/chap18_2/Demo3.java",
      "language": "JAVA",
      "line": 53,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 51,
        "length": 10,
        "offset": 69,
        "surroundingCode": "\t\tSystem.out.println(instant4);\n\t\tDate from = Date.from(instant4);\n\t\tSystem.out.println(from);\n\t\t\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "9000210088235591545"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaweb/src/main/java/com/taotao/cloud/java/javaweb/p2_jdbc/druid/jdbc/Demo1.java",
      "language": "JAVA",
      "line": 14,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 12,
        "length": 10,
        "offset": 134,
        "surroundingCode": "    public static void main(String[] args) throws SQLException {\n        Connection connection = DBUtilDruid.getConnection();\n        System.out.println(connection);\n        DBUtilDruid.close(null,null,connection);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaweb.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1632129339322241260"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaweb/src/main/java/com/taotao/cloud/java/javaweb/p5_servlet/WebProject/java/filter/HtmlFilter.java",
      "language": "JAVA",
      "line": 15,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 13,
        "length": 10,
        "offset": 175,
        "surroundingCode": "    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        System.out.println(\"拦截HTML请求\");\n        filterChain.doFilter(servletRequest,servletResponse);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaweb.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7303586124319537957"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaweb/src/main/java/com/taotao/cloud/java/javaweb/p5_servlet/WebProject/java/sessions/GetValueServlet.java",
      "language": "JAVA",
      "line": 21,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 71,
        "surroundingCode": "        String s = (String) session.getAttribute(\"username\");\n\n        System.out.println(\"从session中获得了：\"+s);\n        System.out.println(\"从reqeust中获得了：\"+password);\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaweb.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5402318784585143859"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javaweb/src/main/java/com/taotao/cloud/java/javaweb/p5_servlet/WebProject/java/sessions/GetValueServlet.java",
      "language": "JAVA",
      "line": 22,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 56,
        "surroundingCode": "\n        System.out.println(\"从session中获得了：\"+s);\n        System.out.println(\"从reqeust中获得了：\"+password);\n\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javaweb.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6011007844537150189"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/queue/ConsumerTool.java",
      "language": "JAVA",
      "line": 44,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 42,
        "length": 10,
        "offset": 110,
        "surroundingCode": "\t\tconsumer.setMessageListener(this);\n\t\tconnection.setExceptionListener((javax.jms.ExceptionListener) this);\n\t\tSystem.out.println(\"Consumer:->Begin listening...\");\n\t\tisconnection = true;\n\t\t// 开始监听"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-683419752896016800"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/queue/ConsumerTool.java",
      "language": "JAVA",
      "line": 48,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 46,
        "length": 10,
        "offset": 52,
        "surroundingCode": "\t\t// 开始监听\n\t\tMessage message = consumer.receive();\n\t\tSystem.out.println(message.getJMSMessageID());\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1792861617541234276"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/queue/ConsumerTool.java",
      "language": "JAVA",
      "line": 72,
      "offset": 4,
      "length": 10,
      "code": {
        "startLine": 70,
        "length": 10,
        "offset": 87,
        "surroundingCode": "\t\t\t\tTextMessage txtMsg = (TextMessage) message;\n\t\t\t\tString msg = txtMsg.getText();\n\t\t\t\tSystem.out.println(\"Consumer:->Received: \" + msg);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Consumer:->Received: \" + message);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7537386338400795527"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/queue/ConsumerTool.java",
      "language": "JAVA",
      "line": 74,
      "offset": 4,
      "length": 10,
      "code": {
        "startLine": 72,
        "length": 10,
        "offset": 71,
        "surroundingCode": "\t\t\t\tSystem.out.println(\"Consumer:->Received: \" + msg);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Consumer:->Received: \" + message);\n\t\t\t}\n\t\t} catch (JMSException e) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "4064085041994445673"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/mq/queue/ConsumerTool.java",
      "language": "JAVA",
      "line": 53,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 51,
        "length": 10,
        "offset": 54,
        "surroundingCode": "\t// 关闭连接\n\tpublic void close() throws JMSException {\n\t\tSystem.out.println(\"Consumer:->Closing connection\");\n\t\tif (consumer != null) {\n\t\t\tconsumer.close();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6176088630016319752"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/jvm/demo/TestThread.java",
      "language": "JAVA",
      "line": 38,
      "offset": 4,
      "length": 10,
      "code": {
        "startLine": 36,
        "length": 10,
        "offset": 40,
        "surroundingCode": "\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tSystem.out.println(\"createLockThread\");\n\t\t\t\tsynchronized (lock) {\n\t\t\t\t\ttry {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5147576322611854526"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/jvm/demo/TestThread.java",
      "language": "JAVA",
      "line": 21,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 81,
        "surroundingCode": "\tpublic static void createBusyThread() {\n\t\tThread thread = new Thread(() -> {\n\t\t\tSystem.out.println(\"createBusyThread\");\n\t\t\twhile (true) {\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7978567349988776320"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/netty/sendorder/server/EchoInHandler2.java",
      "language": "JAVA",
      "line": 15,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 13,
        "length": 10,
        "offset": 106,
        "surroundingCode": "    public void channelRead(ChannelHandlerContext ctx, Object msg)\n            throws Exception {\n        System.out.println(\"in2\");\n        ByteBuf buf = (ByteBuf) msg;\n        byte[] req = new byte[buf.readableBytes()];"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "766081585542884172"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/netty/sendorder/server/EchoInHandler2.java",
      "language": "JAVA",
      "line": 20,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 18,
        "length": 10,
        "offset": 84,
        "surroundingCode": "        buf.readBytes(req);\n        String body = new String(req, \"UTF-8\");\n        System.out.println(\"接收客户端数据:\" + body);\n        //向客户端写数据\n        System.out.println(\"server向client发送数据\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5499007466485406762"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/netty/sendorder/server/EchoInHandler2.java",
      "language": "JAVA",
      "line": 22,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 73,
        "surroundingCode": "        System.out.println(\"接收客户端数据:\" + body);\n        //向客户端写数据\n        System.out.println(\"server向client发送数据\");\n        String currentTime = new Date(System.currentTimeMillis()).toString();\n        ByteBuf resp = Unpooled.copiedBuffer(currentTime.getBytes());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8576199689747700901"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/netty/sendobject/server/EchoServer.java",
      "language": "JAVA",
      "line": 50,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 48,
        "length": 10,
        "offset": 175,
        "surroundingCode": "            // 最后绑定服务器等待直到绑定完成，调用sync()方法会阻塞直到服务器完成绑定,然后服务器等待通道关闭，因为使用sync()，所以关闭操作也会被阻塞。\n            ChannelFuture channelFuture = serverBootstrap.bind().sync();\n            System.out.println(\"开始监听，端口为：\" + channelFuture.channel().localAddress());\n            channelFuture.channel().closeFuture().sync();\n        } finally {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-4526559500725896963"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/proxy/action/SaleAction.java",
      "language": "JAVA",
      "line": 13,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 11,
        "length": 10,
        "offset": 108,
        "surroundingCode": "    public static void saleByBossSelf() throws Exception {\n        IBoss boss = (IBoss) new Boss();\n        System.out.println(\"老板自营！\");\n        int money = boss.yifu(\"xxl\");// 老板自己卖衣服，不需要客服，结果就是没有聊天记录\n        System.out.println(\"衣服成交价：\" + money);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1727240200864860666"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/proxy/action/SaleAction.java",
      "language": "JAVA",
      "line": 15,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 13,
        "length": 10,
        "offset": 110,
        "surroundingCode": "        System.out.println(\"老板自营！\");\n        int money = boss.yifu(\"xxl\");// 老板自己卖衣服，不需要客服，结果就是没有聊天记录\n        System.out.println(\"衣服成交价：\" + money);\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5252547586047300596"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/proxy/action/ProxySaleAction.java",
      "language": "JAVA",
      "line": 19,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 17,
        "length": 10,
        "offset": 143,
        "surroundingCode": "        IBoss boss = ProxyBoss.getProxy(10, IBoss.class, Boss.class);// 将代理的方法实例化成接口\n        //IBoss boss = new Boss();// 将代理的方法实例化成接口\n        System.out.println(\"代理经营！\");\n        int money = boss.yifu(\"xxl\");// 调用接口的方法，实际上调用方式没有变\n        System.out.println(\"衣服成交价：\" + money);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5156374547830334480"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/proxy/action/ProxySaleAction.java",
      "language": "JAVA",
      "line": 21,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 104,
        "surroundingCode": "        System.out.println(\"代理经营！\");\n        int money = boss.yifu(\"xxl\");// 调用接口的方法，实际上调用方式没有变\n        System.out.println(\"衣服成交价：\" + money);\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-3557484939030229388"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/queue/main/TestBlockingQueueProducer.java",
      "language": "JAVA",
      "line": 22,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 106,
        "surroundingCode": "                String task = Thread.currentThread().getName() + \" made a product \" + i;\n\n                System.out.println(task);\n                queue.put(task);\n            } catch (InterruptedException e) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8656651066623076095"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/thread/lock/MyInterruptibly.java",
      "language": "JAVA",
      "line": 62,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 60,
        "length": 10,
        "offset": 69,
        "surroundingCode": "\t\t\ttest.insert(Thread.currentThread());\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(Thread.currentThread().getName() + \"被中断\");\n\t\t}\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7310235658140156446"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/thread/lock/MyInterruptibly.java",
      "language": "JAVA",
      "line": 33,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 31,
        "length": 10,
        "offset": 98,
        "surroundingCode": "\t\tlock.lockInterruptibly();   //注意，如果需要正确中断等待锁的线程，必须将获取锁放在外面，然后将InterruptedException抛出\n\t\ttry {\n\t\t\tSystem.out.println(thread.getName() + \"得到了锁\");\n\t\t\tlong startTime = System.currentTimeMillis();\n\t\t\tfor (; ; ) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5180278859567629898"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/thread/lock/MyInterruptibly.java",
      "language": "JAVA",
      "line": 43,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 41,
        "length": 10,
        "offset": 35,
        "surroundingCode": "\t\t} finally {\n\t\t\tlock.unlock();\n\t\t\tSystem.out.println(Thread.currentThread().getName() + \"执行finally\");\n\t\t\tSystem.out.println(thread.getName() + \"释放了锁\");\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5354828010701936096"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/thread/lock/MyInterruptibly.java",
      "language": "JAVA",
      "line": 44,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 42,
        "length": 10,
        "offset": 92,
        "surroundingCode": "\t\t\tlock.unlock();\n\t\t\tSystem.out.println(Thread.currentThread().getName() + \"执行finally\");\n\t\t\tSystem.out.println(thread.getName() + \"释放了锁\");\n\t\t}\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6856346380591194978"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/thread/lock/MyInterruptibly.java",
      "language": "JAVA",
      "line": 27,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 25,
        "length": 10,
        "offset": 29,
        "surroundingCode": "\t\t}\n\t\tthread1.interrupt();\n\t\tSystem.out.println(\"=====================\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "3108810283295818632"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/thread/pool/ThreadPoolWithRunable.java",
      "language": "JAVA",
      "line": 22,
      "offset": 20,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 82,
        "surroundingCode": "                @Override\n                public void run() {\n                    System.out.println(\"thread name: \" + Thread.currentThread().getName());\n                    try {\n                        Thread.sleep(1000);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-4658067899226658201"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/reflect/Person.java",
      "language": "JAVA",
      "line": 60,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 58,
        "length": 10,
        "offset": 42,
        "surroundingCode": "\n    private void testPrivate() {\n        System.out.println(\"this is a private method\");\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "979621489607770169"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/callback/MyFetcher.java",
      "language": "JAVA",
      "line": 18,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 16,
        "length": 10,
        "offset": 45,
        "surroundingCode": "        try {\n            //正常情况\n            System.out.println(\"调用fetchData方法正常\");\n            callback.onData(data);\n        } catch (Exception e) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "4871823471412597324"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/callback/MyFetcher.java",
      "language": "JAVA",
      "line": 22,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 63,
        "surroundingCode": "        } catch (Exception e) {\n            //报错情况\n            System.out.println(\"调用fetchData方法异常\");\n            callback.onError(e);\n        }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1985475406075994249"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/callback/MyFetcher.java",
      "language": "JAVA",
      "line": 7,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 5,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\n    public MyFetcher(Data data) {\n        System.out.println(\"调用MyFetcher的构造函数\");\n        this.data = data;\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5737168697546543097"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/callback/Data.java",
      "language": "JAVA",
      "line": 8,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 6,
        "length": 10,
        "offset": 32,
        "surroundingCode": "\n\tpublic Data(int n, int m) {\n\t\tSystem.out.println(\"调用data的构造函数\");\n\t\tthis.n = n;\n\t\tthis.m = m;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6370234850522451503"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/hadooprpc/server/SomeServiceImpl.java",
      "language": "JAVA",
      "line": 9,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 7,
        "length": 10,
        "offset": 65,
        "surroundingCode": "    @Override\n    public String heartBeat(String name) {\n        System.out.println(\"接收到客户端\" + name + \"的心跳，正常连接………………\");\n        return \"心跳成功！\";\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1892185306716089091"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/springannotation/userdefinedannotation/test/MyServer2.java",
      "language": "JAVA",
      "line": 23,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 21,
        "length": 10,
        "offset": 114,
        "surroundingCode": "            HelloService hello = (HelloService) obj;\n            String hello2 = hello.hello(\"mmmm\");\n            System.out.println(hello2);\n        }\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1648623180544911778"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/springannotation/userdefinedannotation/test/MyServer2.java",
      "language": "JAVA",
      "line": 42,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 40,
        "length": 10,
        "offset": 135,
        "surroundingCode": "                        new Class[]{String.class});\n                Object invoke = method.invoke(serviceBean, \"bbb\");\n                System.out.println(invoke);\n            } catch (Exception e) {\n                e.printStackTrace();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6519815899768744556"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/springannotation/userdefinedannotation/test/MyServer.java",
      "language": "JAVA",
      "line": 29,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 27,
        "length": 10,
        "offset": 144,
        "surroundingCode": "                //获取自定义注解上的value\n                String value = serviceBean.getClass().getAnnotation(RpcService.class).value();\n                System.out.println(\"注解上的value: \" + value);\n\n                //反射被注解类，并调用指定方法"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8199292359337652832"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/springannotation/userdefinedannotation/test/MyServer.java",
      "language": "JAVA",
      "line": 35,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 33,
        "length": 10,
        "offset": 135,
        "surroundingCode": "                        new Class[]{String.class});\n                Object invoke = method.invoke(serviceBean, \"bbb\");\n                System.out.println(invoke);\n            } catch (Exception e) {\n                e.printStackTrace();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8335390741860784126"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/nio/NioTest10.java",
      "language": "JAVA",
      "line": 16,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 14,
        "length": 10,
        "offset": 67,
        "surroundingCode": "        FileLock fileLock = fileChannel.lock(3, 6, true);\n\n        System.out.println(\"valid: \" + fileLock.isValid());\n        System.out.println(\"lock type: \" + fileLock.isShared());\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "587673225153371672"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/nio/NioTest10.java",
      "language": "JAVA",
      "line": 17,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 15,
        "length": 10,
        "offset": 69,
        "surroundingCode": "\n        System.out.println(\"valid: \" + fileLock.isValid());\n        System.out.println(\"lock type: \" + fileLock.isShared());\n\n        fileLock.release();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8766982424426397423"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/grpc/GrpcClient.java",
      "language": "JAVA",
      "line": 22,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 104,
        "surroundingCode": "                getRealNameByUsername(MyRequest.newBuilder().setUsername(\"zhangsan\").build());\n\n        System.out.println(myResponse.getRealname());\n\n//        System.out.println(\"--------------------\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6594912079644132728"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/netty/handler/MyLongToStringDecoder.java",
      "language": "JAVA",
      "line": 12,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 10,
        "length": 10,
        "offset": 122,
        "surroundingCode": "    @Override\n    protected void decode(ChannelHandlerContext ctx, Long msg, List<Object> out) throws Exception {\n        System.out.println(\"MyLongToStringDecoder decode invoked!\");\n        out.add(String.valueOf(msg));\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7335157631298164291"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/nio/NIOFileChannel02.java",
      "language": "JAVA",
      "line": 25,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 23,
        "length": 10,
        "offset": 47,
        "surroundingCode": "\n        //将byteBuffer 的 字节数据 转成String\n        System.out.println(new String(byteBuffer.array()));\n        fileInputStream.close();\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6093922186731029669"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/nio/NIOFileChannel03.java",
      "language": "JAVA",
      "line": 32,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 30,
        "length": 10,
        "offset": 110,
        "surroundingCode": "            byteBuffer.clear(); //清空buffer\n            int read = fileChannel01.read(byteBuffer);\n            System.out.println(\"read =\" + read);\n            if(read == -1) { //表示读完\n                break;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8615210513984857122"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 20,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 18,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\n            //将 content 转成字符串\n            System.out.println(new String(content, Charset.forName(\"utf-8\")));\n\n            System.out.println(\"byteBuf=\" + byteBuf);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5423466965807998490"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 22,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 20,
        "length": 10,
        "offset": 92,
        "surroundingCode": "            System.out.println(new String(content, Charset.forName(\"utf-8\")));\n\n            System.out.println(\"byteBuf=\" + byteBuf);\n\n            System.out.println(byteBuf.arrayOffset()); // 0"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8243746847909186697"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 24,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 22,
        "length": 10,
        "offset": 67,
        "surroundingCode": "            System.out.println(\"byteBuf=\" + byteBuf);\n\n            System.out.println(byteBuf.arrayOffset()); // 0\n            System.out.println(byteBuf.readerIndex()); // 0\n            System.out.println(byteBuf.writerIndex()); // 12"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2660604368353436239"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 25,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 23,
        "length": 10,
        "offset": 73,
        "surroundingCode": "\n            System.out.println(byteBuf.arrayOffset()); // 0\n            System.out.println(byteBuf.readerIndex()); // 0\n            System.out.println(byteBuf.writerIndex()); // 12\n            System.out.println(byteBuf.capacity()); // 36"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "3219254350625160289"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 26,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 24,
        "length": 10,
        "offset": 132,
        "surroundingCode": "            System.out.println(byteBuf.arrayOffset()); // 0\n            System.out.println(byteBuf.readerIndex()); // 0\n            System.out.println(byteBuf.writerIndex()); // 12\n            System.out.println(byteBuf.capacity()); // 36\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6857732058025352014"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 27,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 25,
        "length": 10,
        "offset": 133,
        "surroundingCode": "            System.out.println(byteBuf.readerIndex()); // 0\n            System.out.println(byteBuf.writerIndex()); // 12\n            System.out.println(byteBuf.capacity()); // 36\n\n            //System.out.println(byteBuf.readByte()); //"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5911200968452057025"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 30,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 28,
        "length": 10,
        "offset": 70,
        "surroundingCode": "\n            //System.out.println(byteBuf.readByte()); //\n            System.out.println(byteBuf.getByte(0)); // 104\n\n            int len = byteBuf.readableBytes(); //可读的字节数  12"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7149008453148080110"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 33,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 31,
        "length": 10,
        "offset": 73,
        "surroundingCode": "\n            int len = byteBuf.readableBytes(); //可读的字节数  12\n            System.out.println(\"len=\" + len);\n\n            //使用for取出各个字节"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2851167065084908330"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 37,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 35,
        "length": 10,
        "offset": 85,
        "surroundingCode": "            //使用for取出各个字节\n            for(int i = 0; i < len; i++) {\n                System.out.println((char) byteBuf.getByte(i));\n            }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "6214944400331960482"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 41,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 39,
        "length": 10,
        "offset": 36,
        "surroundingCode": "\n            //按照某个范围读取\n            System.out.println(byteBuf.getCharSequence(0, 4, Charset.forName(\"utf-8\")));\n            System.out.println(byteBuf.getCharSequence(4, 6, Charset.forName(\"utf-8\")));\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7876918250790569731"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/buf/NettyByteBuf02.java",
      "language": "JAVA",
      "line": 42,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 40,
        "length": 10,
        "offset": 124,
        "surroundingCode": "            //按照某个范围读取\n            System.out.println(byteBuf.getCharSequence(0, 4, Charset.forName(\"utf-8\")));\n            System.out.println(byteBuf.getCharSequence(4, 6, Charset.forName(\"utf-8\")));\n\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1374698448504572478"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/simple/NettyClient.java",
      "language": "JAVA",
      "line": 33,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 31,
        "length": 10,
        "offset": 37,
        "surroundingCode": "                    });\n\n            System.out.println(\"客户端 ok..\");\n\n            //启动客户端去连接服务器端"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-4294377199125955944"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/source/echo/Test.java",
      "language": "JAVA",
      "line": 5,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 3,
        "length": 10,
        "offset": 90,
        "surroundingCode": "public class Test {\n    public static void main(String[] args) throws Exception {\n        System.out.println(System.nanoTime());\n        Thread.sleep(1000);\n        System.out.println(System.nanoTime());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1771907711892141317"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/source/echo/Test.java",
      "language": "JAVA",
      "line": 7,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 5,
        "length": 10,
        "offset": 83,
        "surroundingCode": "        System.out.println(System.nanoTime());\n        Thread.sleep(1000);\n        System.out.println(System.nanoTime());\n\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "4544288877351253301"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/source/echo/Test.java",
      "language": "JAVA",
      "line": 14,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 12,
        "length": 10,
        "offset": 92,
        "surroundingCode": "        int c = 10;\n        c -= a - b; // c = c - (a-b) = c - a + b = 10 - 10 + 20\n        System.out.println(c);\n    }\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6966723509706421206"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/dubborpc/netty/NettyClientHandler.java",
      "language": "JAVA",
      "line": 18,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 16,
        "length": 10,
        "offset": 98,
        "surroundingCode": "    @Override\n    public void channelActive(ChannelHandlerContext ctx) throws Exception {\n        System.out.println(\" channelActive 被调用  \");\n        context = ctx; //因为我们在其它方法会使用到 ctx\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-48262029948165758"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/dubborpc/netty/NettyClientHandler.java",
      "language": "JAVA",
      "line": 26,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 24,
        "length": 10,
        "offset": 121,
        "surroundingCode": "    @Override\n    public synchronized void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n        System.out.println(\" channelRead 被调用  \");\n        result = msg.toString();\n        notify(); //唤醒等待的线程"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8566133674309080857"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/dubborpc/netty/NettyClientHandler.java",
      "language": "JAVA",
      "line": 49,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 47,
        "length": 10,
        "offset": 50,
        "surroundingCode": "    //(2)\n    void setPara(String para) {\n        System.out.println(\" setPara  \");\n        this.para = para;\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1886747457550560076"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/dubborpc/netty/NettyClientHandler.java",
      "language": "JAVA",
      "line": 39,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 37,
        "length": 10,
        "offset": 79,
        "surroundingCode": "    @Override\n    public synchronized Object call() throws Exception {\n        System.out.println(\" call1 被调用  \");\n        context.writeAndFlush(para);\n        //进行wait"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-330074451894067780"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/dubborpc/netty/NettyClientHandler.java",
      "language": "JAVA",
      "line": 43,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 41,
        "length": 10,
        "offset": 73,
        "surroundingCode": "        //进行wait\n        wait(); //等待channelRead 方法获取到服务器的结果后，唤醒\n        System.out.println(\" call2 被调用  \");\n        return  result; //服务方返回的结果\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5988208373892748478"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/groupchat/GroupChatClient.java",
      "language": "JAVA",
      "line": 52,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 50,
        "length": 10,
        "offset": 87,
        "surroundingCode": "        //得到channel\n            Channel channel = channelFuture.channel();\n            System.out.println(\"-------\" + channel.localAddress()+ \"--------\");\n            //客户端需要输入信息，创建一个扫描器\n            Scanner scanner = new Scanner(System.in);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "3987724157555647148"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/groupchat/GroupChatServer.java",
      "language": "JAVA",
      "line": 51,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 49,
        "length": 10,
        "offset": 37,
        "surroundingCode": "                    });\n\n            System.out.println(\"netty 服务器启动\");\n            ChannelFuture channelFuture = b.bind(port).sync();\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2776544678743426888"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/protocoltcp/MyMessageEncoder.java",
      "language": "JAVA",
      "line": 10,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 8,
        "length": 10,
        "offset": 128,
        "surroundingCode": "    @Override\n    protected void encode(ChannelHandlerContext ctx, MessageProtocol msg, ByteBuf out) throws Exception {\n        System.out.println(\"MyMessageEncoder encode 方法被调用\");\n        out.writeInt(msg.getLen());\n        out.writeBytes(msg.getContent());"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-1197799312169648622"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/atguigu/netty/inboundhandlerandoutboundhandler/MyServerInitializer.java",
      "language": "JAVA",
      "line": 21,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 86,
        "surroundingCode": "        //自定义的handler 处理业务逻辑\n        pipeline.addLast(new MyServerHandler());\n        System.out.println(\"xx\");\n    }\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5765928558540482334"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-netty/src/main/java/com/taotao/cloud/netty/decorator/ConcreteDecorator2.java",
      "language": "JAVA",
      "line": 16,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 14,
        "length": 10,
        "offset": 45,
        "surroundingCode": "\n    private void doAnotherThing() {\n        System.out.println(\"功能C\");\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-netty.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2897154776684546792"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/MainTest.java",
      "language": "JAVA",
      "line": 17,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 15,
        "length": 10,
        "offset": 160,
        "surroundingCode": "\t\tApplicationContext applicationContext = new AnnotationConfigApplicationContext(MainConfig.class);\n\t\tPerson bean = applicationContext.getBean(Person.class);\n\t\tSystem.out.println(bean);\n\n\t\tString[] namesForType = applicationContext.getBeanNamesForType(Person.class);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "5808244522973671072"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/MainTest.java",
      "language": "JAVA",
      "line": 21,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 19,
        "length": 10,
        "offset": 120,
        "surroundingCode": "\t\tString[] namesForType = applicationContext.getBeanNamesForType(Person.class);\n\t\tfor (String name : namesForType) {\n\t\t\tSystem.out.println(name);\n\t\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6454428758238310380"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/bean/Blue.java",
      "language": "JAVA",
      "line": 6,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 4,
        "length": 10,
        "offset": 20,
        "surroundingCode": "\n\tpublic Blue() {\n\t\tSystem.out.println(\"blue...constructor\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "3927386314659533961"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/bean/Blue.java",
      "language": "JAVA",
      "line": 14,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 12,
        "length": 10,
        "offset": 27,
        "surroundingCode": "\n\tpublic void detory() {\n\t\tSystem.out.println(\"blue...detory...\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6577190262504492365"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/bean/Blue.java",
      "language": "JAVA",
      "line": 10,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 8,
        "length": 10,
        "offset": 25,
        "surroundingCode": "\n\tpublic void init() {\n\t\tSystem.out.println(\"blue...init...\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-3054207578738413391"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/test/IOCTest_PropertyValue.java",
      "language": "JAVA",
      "line": 15,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 13,
        "length": 10,
        "offset": 75,
        "surroundingCode": "    public void test01() {\n        printBeans(applicationContext);\n        System.out.println(\"=============\");\n\n        Person person = (Person) applicationContext.getBean(\"person\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-513128085186580680"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/test/IOCTest_PropertyValue.java",
      "language": "JAVA",
      "line": 18,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 16,
        "length": 10,
        "offset": 80,
        "surroundingCode": "\n        Person person = (Person) applicationContext.getBean(\"person\");\n        System.out.println(person);\n\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-4324916085115345924"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/test/IOCTest_PropertyValue.java",
      "language": "JAVA",
      "line": 23,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 21,
        "length": 10,
        "offset": 161,
        "surroundingCode": "        ConfigurableEnvironment environment = applicationContext.getEnvironment();\n        String property = environment.getProperty(\"person.nickName\");\n        System.out.println(property);\n        applicationContext.close();\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7161142047475575428"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/test/IOCTest_PropertyValue.java",
      "language": "JAVA",
      "line": 30,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 28,
        "length": 10,
        "offset": 138,
        "surroundingCode": "        String[] definitionNames = applicationContext.getBeanDefinitionNames();\n        for (String name : definitionNames) {\n            System.out.println(name);\n        }\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2007333203960656979"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-spring/taotao-cloud-spring-source/src/main/java/com/taotao/cloud/spring/source/spring_annotation/service/BookService.java",
      "language": "JAVA",
      "line": 19,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 17,
        "length": 10,
        "offset": 35,
        "surroundingCode": "\n    public void print() {\n        System.out.println(bookDao);\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-spring.taotao-cloud-spring-source.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2279780030650112729"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-flink/src/main/java/com/taotao/cloud/bigdata/flink/atguigu/apitest/processfunction/ProcessTest1_KeyedProcessFunction.java",
      "language": "JAVA",
      "line": 62,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 60,
        "length": 10,
        "offset": 137,
        "surroundingCode": "        @Override\n        public void onTimer(long timestamp, OnTimerContext ctx, Collector<Integer> out) throws Exception {\n            System.out.println(timestamp + \" 定时器触发\");\n            ctx.getCurrentKey();\n//            ctx.output();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-flink.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-924470654069785748"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.err</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-hadoop/src/main/java/com/taotao/cloud/bigdata/hadoop/mr/component/combinefile/SmallFilesToSequenceFileConverter.java",
      "language": "JAVA",
      "line": 71,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 69,
        "length": 10,
        "offset": 114,
        "surroundingCode": "\t\tString[] otherArgs = new GenericOptionsParser(conf, args).getRemainingArgs();\n\t\tif (otherArgs.length != 2) {\n\t\t\tSystem.err.println(\"Usage: combinefiles <in> <out>\");\n\t\t\tSystem.exit(2);\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-hadoop.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8701802153148638412"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-zookeeper/src/main/java/com/taotao/cloud/bigdata/zookeeper/zkdist/DistributedServer.java",
      "language": "JAVA",
      "line": 54,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 52,
        "length": 10,
        "offset": 83,
        "surroundingCode": "\t */\n\tpublic void handleBussiness(String hostname) throws InterruptedException {\n\t\tSystem.out.println(hostname + \"start working.....\");\n\t\tThread.sleep(Long.MAX_VALUE);\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-zookeeper.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6188727095642585334"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-zookeeper/src/main/java/com/taotao/cloud/bigdata/zookeeper/zkdist/DistributedServer.java",
      "language": "JAVA",
      "line": 45,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 43,
        "length": 10,
        "offset": 194,
        "surroundingCode": "\tpublic void registerServer(String hostname) throws Exception {\n\t\tString create = zk.create(parentNode + \"/server\", hostname.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);\n\t\tSystem.out.println(hostname + \"is online..\" + create);\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-zookeeper.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5539088667620696260"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-zookeeper/src/main/java/com/taotao/cloud/bigdata/zookeeper/zkdist/DistributedServer.java",
      "language": "JAVA",
      "line": 27,
      "offset": 4,
      "length": 10,
      "code": {
        "startLine": 25,
        "length": 10,
        "offset": 85,
        "surroundingCode": "\t\t\tpublic void process(WatchedEvent event) {\n\t\t\t\t// 收到事件通知后的回调函数（应该是我们自己的事件处理逻辑）\n\t\t\t\tSystem.out.println(event.getType() + \"---\" + event.getPath());\n\t\t\t\ttry {\n\t\t\t\t\tzk.getChildren(\"/\", true);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-zookeeper.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2001559724752764958"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-elasticsearch/src/main/java/com/taotao/cloud/bigdata/elasticsearch/es_test/ESTest_Doc_Insert.java",
      "language": "JAVA",
      "line": 37,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 35,
        "length": 10,
        "offset": 91,
        "surroundingCode": "        IndexResponse response = esClient.index(request, RequestOptions.DEFAULT);\n\n        System.out.println(response.getResult());\n\n        esClient.close();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-elasticsearch.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7325530259221317978"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-elasticsearch/src/main/java/com/taotao/cloud/bigdata/elasticsearch/es_springdata/SpringDataESIndexTest.java",
      "language": "JAVA",
      "line": 20,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 18,
        "length": 10,
        "offset": 38,
        "surroundingCode": "\t@Test\n\tpublic void createIndex() {\n\t\tSystem.out.println(\"创建索引\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-elasticsearch.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7367115644606631501"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-elasticsearch/src/main/java/com/taotao/cloud/bigdata/elasticsearch/es_springdata/SpringDataESIndexTest.java",
      "language": "JAVA",
      "line": 27,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 25,
        "length": 10,
        "offset": 102,
        "surroundingCode": "\t\t//创建索引，系统初始化会自动创建索引\n//        boolean flg = elasticsearchRestTemplate.deleteIndex(Product.class);\n\t\tSystem.out.println(\"删除索引 = \");\n\t}\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-elasticsearch.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7247290093358700949"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-realtime/taotao-cloud-realtime-mall/src/main/java/com/taotao/cloud/bigdata/realtime/mall/app/func/DimAsyncFunction.java",
      "language": "JAVA",
      "line": 64,
      "offset": 6,
      "length": 10,
      "code": {
        "startLine": 62,
        "length": 10,
        "offset": 98,
        "surroundingCode": "\t\t\t\t\t\t//System.out.println(\"维度关联后的对象:\" + obj);\n\t\t\t\t\t\tlong end = System.currentTimeMillis();\n\t\t\t\t\t\tSystem.out.println(\"异步维度查询耗时\" + (end - start) + \"毫秒\");\n\t\t\t\t\t\t//将关联后的数据数据继续向下传递\n\t\t\t\t\t\tresultFuture.complete(Arrays.asList(obj));"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-realtime.taotao-cloud-realtime-mall.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5191484039980013944"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-realtime/taotao-cloud-realtime-mall/src/main/java/com/taotao/cloud/bigdata/realtime/mall/app/func/DimAsyncFunction.java",
      "language": "JAVA",
      "line": 31,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 29,
        "length": 10,
        "offset": 78,
        "surroundingCode": "\tpublic void open(Configuration parameters) throws Exception {\n\t\t//初始化线程池对象\n\t\tSystem.out.println(\"初始化线程池对象\");\n\t\texecutorService = ThreadPoolUtil.getInstance();\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-realtime.taotao-cloud-realtime-mall.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-5803486728882801128"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-realtime/taotao-cloud-realtime-mall/src/main/java/com/taotao/cloud/bigdata/realtime/mall/app/func/DimSink.java",
      "language": "JAVA",
      "line": 49,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 47,
        "length": 10,
        "offset": 109,
        "surroundingCode": "\t\t\t//根据data中属性名和属性值  生成upsert语句\n\t\t\tString upsertSql = genUpsertSql(tableName.toUpperCase(), dataJsonObj);\n\t\t\tSystem.out.println(\"向Phoenix插入数据的SQL:\" + upsertSql);\n\n\t\t\t//执行SQL"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-realtime.taotao-cloud-realtime-mall.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6565175220532558830"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-realtime/taotao-cloud-realtime-mall/src/main/java/com/taotao/cloud/bigdata/realtime/mall/utils/MySQLUtil.java",
      "language": "JAVA",
      "line": 108,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 106,
        "length": 10,
        "offset": 163,
        "surroundingCode": "        List<TableProcess> list = queryList(\"select * from table_process\", TableProcess.class, true);\n        for (TableProcess tableProcess : list) {\n            System.out.println(tableProcess);\n        }\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-realtime.taotao-cloud-realtime-mall.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7168584497421442485"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.err</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-api/src/main/java/com/taotao/cloud/sys/api/web/dto/jvm/HeapHistogramImpl.java",
      "language": "JAVA",
      "line": 214,
      "offset": 24,
      "length": 10,
      "code": {
        "startLine": 212,
        "length": 10,
        "offset": 84,
        "surroundingCode": "                        break;\n                    default:\n                        System.err.println(\"Uknown name \"+jvmName);     // NOI18N\n                        className = jvmName;\n                }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-api.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "579289209524201014"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/test/TestController.java",
      "language": "JAVA",
      "line": 43,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 41,
        "length": 10,
        "offset": 64,
        "surroundingCode": "\n        Queue q = testThreadPoolManager.getMsgQueue();\n        System.out.println(\"关闭了线程服务，还有未处理的信息条数：\" + q.size());\n        return \"Test ThreadPoolExecutor start\";\n    }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8283919516304855264"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/utils/PdfUtils.java",
      "language": "JAVA",
      "line": 150,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 148,
        "length": 10,
        "offset": 41,
        "surroundingCode": "\n\tprivate void LinuxExec(String cmd) {\n\t\tSystem.out.println(cmd);\n\t\ttry {\n\t\t\tRuntime.getRuntime().exec(cmd);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-9037713729974567515"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.err</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/utils/PdfUtils.java",
      "language": "JAVA",
      "line": 154,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 152,
        "length": 10,
        "offset": 66,
        "surroundingCode": "\t\t\tRuntime.getRuntime().exec(cmd);\n\t\t} catch (IOException e) {\n\t\t\tSystem.err.println(e.getMessage());\n\t\t}\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-6604955298614132764"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/utils/PdfUtils.java",
      "language": "JAVA",
      "line": 39,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 37,
        "length": 10,
        "offset": 98,
        "surroundingCode": "\t\tlong start = System.currentTimeMillis();\n\t\tString srcPath = filePath, desPath = targetFolder;\n\t\tSystem.out.println(\"源文件：\" + filePath);\n\t\tSystem.out.println(\"目标文件夹：\" + targetFolder);\n\t\tString command = \"\";"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "8186145448352848261"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/utils/PdfUtils.java",
      "language": "JAVA",
      "line": 40,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 38,
        "length": 10,
        "offset": 96,
        "surroundingCode": "\t\tString srcPath = filePath, desPath = targetFolder;\n\t\tSystem.out.println(\"源文件：\" + filePath);\n\t\tSystem.out.println(\"目标文件夹：\" + targetFolder);\n\t\tString command = \"\";\n\t\tString osName = System.getProperty(\"os.name\");"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-2752688717187055268"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/utils/PdfUtils.java",
      "language": "JAVA",
      "line": 43,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 41,
        "length": 10,
        "offset": 74,
        "surroundingCode": "\t\tString command = \"\";\n\t\tString osName = System.getProperty(\"os.name\");\n\t\tSystem.out.println(\"系统名称：\" + osName);\n\t\tif (osName.contains(\"Windows\")) {\n\t\t\tcommand = \"soffice --headless --convert-to pdf \" + srcPath + \" --outdir \" + desPath;"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "1594732495145688021"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/utils/PdfUtils.java",
      "language": "JAVA",
      "line": 53,
      "offset": 2,
      "length": 10,
      "code": {
        "startLine": 51,
        "length": 10,
        "offset": 47,
        "surroundingCode": "\t\t}\n\t\tlong end = System.currentTimeMillis();\n\t\tSystem.out.println(\"转换文件耗时：\" + (end - start) + \"毫秒\");\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2355251156800577568"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/utils/PdfUtils.java",
      "language": "JAVA",
      "line": 172,
      "offset": 4,
      "length": 10,
      "code": {
        "startLine": 170,
        "length": 10,
        "offset": 70,
        "surroundingCode": "\t\t\tFile file = new File(PdfFilePath);\n\t\t\twhile (!file.exists()) {\n\t\t\t\tSystem.out.println(\"文件未生成，等待1秒\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-7103667794368359430"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-sys/taotao-cloud-sys-biz/src/main/java/com/taotao/cloud/sys/biz/utils/PdfUtils.java",
      "language": "JAVA",
      "line": 195,
      "offset": 3,
      "length": 10,
      "code": {
        "startLine": 193,
        "length": 10,
        "offset": 50,
        "surroundingCode": "\t\t\t\tImageIO.write(image, \"png\", dstFile);\n\t\t\t}\n\t\t\tSystem.out.println(\"PDF文档转PNG图片成功！\");\n\t\t} catch (IOException | InterruptedException e) {\n\t\t\te.printStackTrace();"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-sys.taotao-cloud-sys-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-4789754579478801124"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-store/taotao-cloud-store-biz/src/main/java/com/taotao/cloud/store/biz/task/UserJobHandler.java",
      "language": "JAVA",
      "line": 30,
      "offset": 12,
      "length": 10,
      "code": {
        "startLine": 28,
        "length": 10,
        "offset": 93,
        "surroundingCode": "        for (int i = 0; i < 5; i++) {\n\t        XxlJobHelper.log(\"beat at:\" + i);\n            System.out.println(\"XXL-JOB测试-----\" + i);\n            TimeUnit.SECONDS.sleep(2);\n        }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-store.taotao-cloud-store-biz.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "2747440941276445297"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-core/src/main/java/com/taotao/cloud/core/generator/InsertSQLGenerator.java",
      "language": "JAVA",
      "line": 64,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 62,
        "length": 10,
        "offset": 136,
        "surroundingCode": "            for (int i = 1; i <= rsm.getColumnCount(); i++) {\n                String columnName = rsm.getColumnName(i);\n                System.out.print(\"Name: \" + columnName);\n                System.out.println(\", Type : \" + rsm.getColumnClassName(i));\n                columns.add(columnName);"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-core.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "7495656607265267306"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-core/src/main/java/com/taotao/cloud/core/generator/InsertSQLGenerator.java",
      "language": "JAVA",
      "line": 65,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 63,
        "length": 10,
        "offset": 131,
        "surroundingCode": "                String columnName = rsm.getColumnName(i);\n                System.out.print(\"Name: \" + columnName);\n                System.out.println(\", Type : \" + rsm.getColumnClassName(i));\n                columns.add(columnName);\n            }"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-core.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "-8469064643428735040"
},{
  "tool": "Code Inspection",
  "category": "Code maturity",
  "type": "Use of 'System.out' or 'System.err'",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Uses of <code>System.out</code> should probably be replaced with more robust logging",
  "detailsInfo": "Reports usages of `System.out` or `System.err`.\n\nSuch statements are often used for temporary debugging and should be either removed from the production code, or replaced by a more robust\nlogging facility.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-redis/src/main/java/com/taotao/cloud/redis/delay/listener/SimpleRedissonListenerContainer.java",
      "language": "JAVA",
      "line": 87,
      "offset": 6,
      "length": 10,
      "code": {
        "startLine": 85,
        "length": 10,
        "offset": 43,
        "surroundingCode": "\t\t\t\t\t} else {\n\t\t\t\t\t\t//reset counting\n\t\t\t\t\t\tSystem.out.println(\"message:\" + message);\n\t\t\t\t\t\temptyFetchTimes = 0;\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-redis.main",
    "inspectionName": "SystemOutErr"
  },
  "hash": "3197127947504493996"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Unnecessary semicolon",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Unnecessary semicolon <code>;</code>",
  "detailsInfo": "Reports any unnecessary semicolons, including semicolons that are used between class members, inside block statements, or after class definitions.\n\nEven though these semicolons are valid in Java, they are redundant and may be removed.\n\nExample:\n\n\n      class C {\n        ;\n        void m() throws Exception {\n            try (AutoCloseable r1 = createAutoCloseable();) {\n              ;\n            }\n        }\n        ;\n      }\n\nAfter the quick-fix is applied:\n\n\n      class C {\n        void m() throws Exception {\n          try (AutoCloseable r1 = createAutoCloseable()) {\n          }\n        }\n      }\n",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day17/chap17_4/Season.java",
      "language": "JAVA",
      "line": 8,
      "offset": 28,
      "length": 1,
      "code": {
        "startLine": 6,
        "length": 1,
        "offset": 53,
        "surroundingCode": " */\npublic enum Season {\n\tSPRING,SUMMER,AUTUMN,WINTER;\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "UnnecessarySemicolon"
  },
  "hash": "-8000295945365700199"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Unnecessary semicolon",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Unnecessary semicolon <code>;</code>",
  "detailsInfo": "Reports any unnecessary semicolons, including semicolons that are used between class members, inside block statements, or after class definitions.\n\nEven though these semicolons are valid in Java, they are redundant and may be removed.\n\nExample:\n\n\n      class C {\n        ;\n        void m() throws Exception {\n            try (AutoCloseable r1 = createAutoCloseable();) {\n              ;\n            }\n        }\n        ;\n      }\n\nAfter the quick-fix is applied:\n\n\n      class C {\n        void m() throws Exception {\n          try (AutoCloseable r1 = createAutoCloseable()) {\n          }\n        }\n      }\n",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/thread/lock/MyLockTest.java",
      "language": "JAVA",
      "line": 55,
      "offset": 3,
      "length": 1,
      "code": {
        "startLine": 53,
        "length": 1,
        "offset": 9,
        "surroundingCode": "\t\t\t}\n\n\t\t\t;\n\t\t}.start();\n\t}\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "UnnecessarySemicolon"
  },
  "hash": "8329835745558184762"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Unnecessary semicolon",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Unnecessary semicolon <code>;</code>",
  "detailsInfo": "Reports any unnecessary semicolons, including semicolons that are used between class members, inside block statements, or after class definitions.\n\nEven though these semicolons are valid in Java, they are redundant and may be removed.\n\nExample:\n\n\n      class C {\n        ;\n        void m() throws Exception {\n            try (AutoCloseable r1 = createAutoCloseable();) {\n              ;\n            }\n        }\n        ;\n      }\n\nAfter the quick-fix is applied:\n\n\n      class C {\n        void m() throws Exception {\n          try (AutoCloseable r1 = createAutoCloseable()) {\n          }\n        }\n      }\n",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-java/taotao-cloud-concurrent/src/main/java/com/taotao/cloud/java/concurrent/thread/lock/MyLockTest.java",
      "language": "JAVA",
      "line": 33,
      "offset": 3,
      "length": 1,
      "code": {
        "startLine": 31,
        "length": 1,
        "offset": 9,
        "surroundingCode": "\t\t\t}\n\n\t\t\t;\n\t\t}.start();\n\n\t\tnew Thread() {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-concurrent.main",
    "inspectionName": "UnnecessarySemicolon"
  },
  "hash": "-1068639504542228864"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Unnecessary semicolon",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Unnecessary semicolon <code>;</code>",
  "detailsInfo": "Reports any unnecessary semicolons, including semicolons that are used between class members, inside block statements, or after class definitions.\n\nEven though these semicolons are valid in Java, they are redundant and may be removed.\n\nExample:\n\n\n      class C {\n        ;\n        void m() throws Exception {\n            try (AutoCloseable r1 = createAutoCloseable();) {\n              ;\n            }\n        }\n        ;\n      }\n\nAfter the quick-fix is applied:\n\n\n      class C {\n        void m() throws Exception {\n          try (AutoCloseable r1 = createAutoCloseable()) {\n          }\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-offline/taotao-cloud-offline-weblog/src/main/java/com/taotao/cloud/bigdata/offline/weblog/step2_mapreduce_pre/mr/ClickStreamPageViews.java",
      "language": "JAVA",
      "line": 73,
      "offset": 21,
      "length": 1,
      "code": {
        "startLine": 71,
        "length": 1,
        "offset": 110,
        "surroundingCode": "                    } catch (Exception e) {\n                        e.printStackTrace();\n                    };\n                    beans.add(webLogBean);\n                }\n"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-offline.taotao-cloud-offline-weblog.main",
    "inspectionName": "UnnecessarySemicolon"
  },
  "hash": "-5359637210894884476"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Unnecessary semicolon",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Unnecessary semicolon <code>;</code>",
  "detailsInfo": "Reports any unnecessary semicolons, including semicolons that are used between class members, inside block statements, or after class definitions.\n\nEven though these semicolons are valid in Java, they are redundant and may be removed.\n\nExample:\n\n\n      class C {\n        ;\n        void m() throws Exception {\n            try (AutoCloseable r1 = createAutoCloseable();) {\n              ;\n            }\n        }\n        ;\n      }\n\nAfter the quick-fix is applied:\n\n\n      class C {\n        void m() throws Exception {\n          try (AutoCloseable r1 = createAutoCloseable()) {\n          }\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-web/src/main/java/com/taotao/cloud/web/filter/TraceFilter.java",
      "language": "JAVA",
      "line": 65,
      "offset": 30,
      "length": 1,
      "code": {
        "startLine": 63,
        "length": 1,
        "offset": 88,
        "surroundingCode": "\t\t\tfilterChain.doFilter(request, response);\n\t\t} finally {\n\t\t\tTraceContextHolder.clear();;\n\t\t\tMDC.clear();\n\t\t}\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-web.main",
    "inspectionName": "UnnecessarySemicolon"
  },
  "hash": "-7993065633308371354"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Unnecessary semicolon",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Unnecessary semicolon <code>;</code>",
  "detailsInfo": "Reports any unnecessary semicolons, including semicolons that are used between class members, inside block statements, or after class definitions.\n\nEven though these semicolons are valid in Java, they are redundant and may be removed.\n\nExample:\n\n\n      class C {\n        ;\n        void m() throws Exception {\n            try (AutoCloseable r1 = createAutoCloseable();) {\n              ;\n            }\n        }\n        ;\n      }\n\nAfter the quick-fix is applied:\n\n\n      class C {\n        void m() throws Exception {\n          try (AutoCloseable r1 = createAutoCloseable()) {\n          }\n        }\n      }\n",
  "sources": [
    {
      "type": "class",
      "path": "taotao-cloud-microservice/taotao-cloud-starter/taotao-cloud-starter-logger/src/main/java/com/taotao/cloud/logger/mztlog/beans/CodeVariableType.java",
      "language": "JAVA",
      "line": 6,
      "offset": 4,
      "length": 1,
      "code": {
        "startLine": 4,
        "length": 1,
        "offset": 35,
        "surroundingCode": "    ClassName,\n    MethodName,\n    ;\n}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-microservice.taotao-cloud-starter.taotao-cloud-starter-logger.main",
    "inspectionName": "UnnecessarySemicolon"
  },
  "hash": "-3803927967619698214"
},{
  "tool": "Code Inspection",
  "category": "Java language level migration aids",
  "type": "'compare()' method can be used to compare numbers",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Expression can be replaced with 'Long.compare'",
  "detailsInfo": "Reports cases where the static `Integer.compare()` method or similar methods can be used instead of more verbose or less efficient constructs.\n\nIf `x` and `y` are already boxed integers, then `x.compareTo(y)` is suggested.\n\n**Example:**\n\n\n      public int compare(int x, int y) {\n        return x > y ? 1 : x < y ? -1 : 0;\n      }\n\nAfter the quick-fix is applied:\n\n\n      public int compare(int x, int y) {\n        return Integer.compare(x, y);\n      }\n\n\nNote that `Double.compare` and `Float.compare` slightly change the code semantics. In particular,\nthey make `-0.0` and `0.0` distinguishable (`Double.compare(-0.0, 0.0)` yields -1).\nAlso, they consistently process `NaN` value. In most of the cases, this semantics change actually improves the\ncode. Use the checkbox to disable this inspection for floating point numbers if semantics change is unacceptable\nin your case.\n\nNew in 2017.2",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-bigdata/taotao-cloud-hadoop/src/main/java/com/taotao/cloud/bigdata/hadoop/atguigu/mapreduce/a7_partitionerandwritableComparable/FlowBean.java",
      "language": "JAVA",
      "line": 82,
      "offset": 12,
      "length": 2,
      "code": {
        "startLine": 80,
        "length": 2,
        "offset": 55,
        "surroundingCode": "        } else {\n            // 按照上行流量的正序排\n            if (this.upFlow > o.upFlow) {\n                return 1;\n            } else if (this.upFlow < o.upFlow) {"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-bigdata.taotao-cloud-hadoop.main",
    "inspectionName": "UseCompareMethod"
  },
  "hash": "1047906536897961712"
},{
  "tool": "Code Inspection",
  "category": "Java 5",
  "type": "'while' loop can be replaced with enhanced 'for' loop",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "<code>while</code> loop can be replaced with enhanced 'for'",
  "detailsInfo": "Reports `while` loops that iterate over collections and can be replaced with enhanced `for` loops (foreach iteration syntax).\n\n**Example:**\n\n\n      Iterator it = c.iterator();\n      while(it.hasNext()) {\n        Object obj = it.next();\n        System.out.println(obj);\n      }\n\nCan be replaced with:\n\n\n      for (Object obj : c) {\n        System.out.println(obj);\n      }\n\nThis inspection only reports if the language level of the project or module is 5 or higher.",
  "sources": [
    {
      "type": "method",
      "path": "taotao-cloud-java/taotao-cloud-javase/src/main/java/com/taotao/cloud/java/javase/day12/chapter12_3/Demo2.java",
      "language": "JAVA",
      "line": 37,
      "offset": 2,
      "length": 5,
      "code": {
        "startLine": 35,
        "length": 5,
        "offset": 91,
        "surroundingCode": "\t\tSystem.out.println(\"-------3.2迭代器--------\");\n\t\tIterator<String> it=hashSet.iterator();\n\t\twhile(it.hasNext()) {\n\t\t\tSystem.out.println(it.next());\n\t\t}"
      }
    }
  ],
  "attributes": {
    "module": "taotao-cloud-project.taotao-cloud-java.taotao-cloud-javase.main",
    "inspectionName": "WhileCanBeForeach"
  },
  "hash": "-5369905096600477168"
}]}