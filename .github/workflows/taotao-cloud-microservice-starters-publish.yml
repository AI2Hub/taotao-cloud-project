# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: microservice starters publish

on:
  push:
  #  paths:
  #    - 'taotao-cloud-microservice/taotao-cloud-starter/**'
  #  branches: [ master ]
  release:
    types: [created]

env:
  TAOTAO_CLOUD_OSSRH_USERNAME: ${{secrets.TAOTAO_CLOUD_OSSRH_USERNAME}}
  TAOTAO_CLOUD_OSSRH_PASSWORD: ${{secrets.TAOTAO_CLOUD_OSSRH_PASSWORD}}
  TAOTAO_CLOUD_MAVEN_USERNAME: ${{secrets.TAOTAO_CLOUD_MAVEN_USERNAME}}
  TAOTAO_CLOUD_MAVEN_PASSWORD: ${{secrets.TAOTAO_CLOUD_MAVEN_PASSWORD}}
  TAOTAO_CLOUD_GITHUB_USERNAME: ${{secrets.TAOTAO_CLOUD_GITHUB_USERNAME}}
  TAOTAO_CLOUD_GITHUB_TOKEN: ${{secrets.TAOTAO_CLOUD_GITHUB_TOKEN}}
  TAOTAO_CLOUD_REGISTRY_USERNAME: ${{secrets.TAOTAO_CLOUD_REGISTRY_USERNAME}}
  TAOTAO_CLOUD_REGISTRY_PASSWORD: ${{secrets.TAOTAO_CLOUD_REGISTRY_PASSWORD}}

jobs:
  publish:
    runs-on: ubuntu-latest
    #if: ${{ contains(github.event.head_commit.message, 'taotao-cloud-starter') }}
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v2

    - name: set up jdk 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        server-id: github

    - name: cache gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    #  base64 secring.gpg > secring.gpg.b64  SIGNING_SECRET_KEY_RING_FILE -> secring.gpg.b64
    - name: decode signing secret key ring file
      run: |
        echo "${{secrets.TAOTAO_CLOUD_SIGNING_SECRET_KEY_RING_FILE}}" > ~/secring.gpg.b64 && base64 -d ~/secring.gpg.b64 > ~/secring.gpg
        echo "signing.keyId=${{secrets.TAOTAO_CLOUD_SIGNING_KEY_ID}}" >> gradle.properties
        echo "signing.password=${{secrets.TAOTAO_CLOUD_SIGNING_PASSWORD}}" >> gradle.properties
        echo "signing.secretKeyRingFile=$HOME/secring.gpg" >> gradle.properties

    - name: build and publish dependencies
      run: |
        cd ${{ github.workspace }}/taotao-cloud-dependencies
        gradle publishToMavenLocal 
        gradle publishAllPublicationsToSonatypeRepository
    - name: build and publish starter
      run: |
        starter_dir=${{ github.workspace }}/taotao-cloud-microservice/taotao-cloud-starter
        for starter in `ls $starter_dir`
        do
          starter_inner_dir="$starter_dir/$starter"
          if [ -d $starter_inner_dir ];then
            if [ -d "$starter_inner_dir/src" ];then
               cd $starter_inner_dir
               gradle --continue clean build -x test -x bootJar
               gradle publishAllPublicationsToSonatypeRepository
            else
              for two_starter in `ls $starter_inner_dir`
              do
                if [ -d "$starter_inner_dir/$two_starter" ];then
                  cd "$starter_inner_dir/$two_starter"
                  gradle --continue clean build -x test -x bootJar
                  gradle publishAllPublicationsToSonatypeRepository
                fi
              done
            fi
          fi
        done
      #gradle publishAllPublicationsToSonatypeRepository -Psigning.keyId=${{secrets.TAOTAO_CLOUD_SIGNING_KEY_ID}} -Psigning.password=${{secrets.TAOTAO_CLOUD_SIGNING_PASSWORD}} -Psigning.secretKeyRingFile=$(echo ~/secring.gpg)
