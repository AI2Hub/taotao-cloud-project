pluginManagement {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://jetbrains.bintray.com/intellij-plugin-service' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
}

rootProject.name = 'taotao-cloud-project'

def oneLayerProjects = ['dependencies', 'scala', 'processor', 'netty', 'node', 'plugin', 'python', 'web']
for (project in oneLayerProjects) {
    include "taotao-cloud-${project}"
}

def twoLayerProjects = ['bigdata', 'java', 'rpc', 'standalone', 'container', 'offline', 'reactive', 'spring']
for (project in twoLayerProjects) {
    def dir = "taotao-cloud-${project}"
    file("${rootDir}/${dir}").eachDir { directory ->
        directory.eachDir {
            if (it.name != "build" && it.name != "out") {
                include "${dir}:${directory.name}"
            }
        }
    }
}

def threeLayerProjects = ['microservice', 'demo', 'realtime']
for (project in threeLayerProjects) {
    def dir = "taotao-cloud-${project}"
    file("${rootDir}/${dir}").eachDir { directory ->
        if (directory.name != "build" && directory.name != "out" && directory.name != "src") {
            include "${dir}:${directory.name}"
            directory.eachDir {
                if (it.name != "build" && it.name != "src" && it.name != "out") {
                    include "${dir}:${directory.name}:${it.name}"
                }
            }
        }
    }
}

//// gradle生命周期中的钩子方法
//gradle.settingsEvaluated {
//    println 'init phase: settingsEvaluated'
//}
//
//gradle.projectsLoaded {
//    println 'init phase: projectsLoaded'
//}
//
//gradle.beforeProject {
//    println 'init phase: projectsLoaded'
//}
