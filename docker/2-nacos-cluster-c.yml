  mysql –uroot –p
    create database `taotao-cloud-nacos`;
    use `taotao-cloud-nacos`;
    source /opt/cloud/nacos/conf/nacos-mysql.sql
    
    
    [defaul.conf]
    upstream nacos-cluster {
    server 172.16.6.151:8846 weight=1 max_fails=2 fail_timeout=10s;
    server 172.16.6.151:8847 weight=1 max_fails=2 fail_timeout=10s;
    server 172.16.6.151:8848 weight=1 max_fails=2 fail_timeout=10s;
  }
    
    server {
    listen       80;
    server_name  172.16.6.151;
    #新增，配置nginx的日志级别debug
    #error_log /var/log/nginx/debug.log debug;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    #新增，转向集群配置
    location / {
    proxy_pass http://nacos-cluster;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header REMOTE-HOST $remote_addr;
    add_header X-Cache $upstream_cache_status;
    add_header Cache-Control no-cache;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
    root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
  }


version: '3.7'
services:
  nacos1:
    image: nacos/nacos-server
    restart: always
    hostname: nacos1
    container_name: nacos1
    privileged: true
    ports:
      - "8846:8848"
    environment:
      MODE: cluster
      PREFER_HOST_MODE: hostname
      NACOS_APPLICATION_PORT: 8848
      NACOS_SERVERS: nacos1:8848,nacos2:8848,nacos3:8848
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: 172.16.6.151
      MYSQL_SERVICE_PORT: 3316
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
      MYSQL_SERVICE_DB_NAME: taotao-cloud-nacos
      JVM_XMS: 256m
      JVM_XMX: 512m
    networks:
      kafka-cluster-network:
        ipv4_address: 172.11.0.100
  nacos2:
    image: nacos/nacos-server
    restart: always
    hostname: nacos2
    container_name: nacos2
    privileged: true
    ports:
      - "8847:8848"
    environment:
      MODE: cluster
      NACOS_APPLICATION_PORT: 8848
      PREFER_HOST_MODE: hostname
      NACOS_SERVERS: nacos1:8848,nacos2:8848,nacos3:8848
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: 172.16.6.151
      MYSQL_SERVICE_PORT: 3316
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
      MYSQL_SERVICE_DB_NAME: taotao-cloud-nacos
      JVM_XMS: 256m
      JVM_XMX: 512m
    networks:
      kafka-cluster-network:
        ipv4_address: 172.11.0.101
  nacos3:
    image: nacos/nacos-server
    restart: always
    hostname: nacos3
    container_name: nacos3
    privileged: true
    ports:
      - "8848:8848"
    environment:
      MODE: cluster
      NACOS_APPLICATION_PORT: 8848
      PREFER_HOST_MODE: hostname
      NACOS_SERVERS: nacos1:8848,nacos2:8848,nacos3:8848
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: 172.16.6.151
      MYSQL_SERVICE_PORT: 3316
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
      MYSQL_SERVICE_DB_NAME: taotao-cloud-nacos
      JVM_XMS: 256m
      JVM_XMX: 512m
    networks:
      kafka-cluster-network:
        ipv4_address: 172.11.0.102

  nacos-nginx:
    image: nginx
    restart: always
    container_name: nacos-nginx
    ports:
      - "8000:80"
    volumes:
      - /root/config.d:/etc/nginx/conf.d
    networks:
      kafka-cluster-network:
        ipv4_address: 172.11.0.103

networks:
  kafka-cluster-network:
    external:
      name: kafka-cluster-network
