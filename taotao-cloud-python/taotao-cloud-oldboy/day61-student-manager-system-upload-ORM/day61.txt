内容回顾：
    1.ajax参数
        
        url:
        type:
        data:
            1. value不能是字典 {k1:'v1',k2:[1,2,3,],k3: JSON.stringify({})}
            2. $('').serilizer()
        dataType:"JSON",# text,html,xml
        单词太长了 traditional：
        success:function(arg){
            # arg=>obj
        },
        error:function(){
            
        }
    2. 序列化
        JavaScript:
            JSON.parse()
            JSON.stringify()
        
        Django:
            json.dumps()
            json.loads()
            问题：
                serilize:  model.TB.objects.all()
                
                json:  list(model.TB.objects.values())
                json:  list(model.TB.objects.values_list())
            
    
    3. Form
        作用：用于验证+（生成HTML+保存上次提交的数据）
        使用：
            1.创建类
            2.创建字段（）
            3. 验证用户输入：
                obj = Form(request.POST,request.FILES)
                if obj.is_valid():
                    obj.cleaned_data
                else:
                    obj.errors
            4. clean_字段
            
            5. clean()  _post_clean()
            
            PS: __all__
                
            
    4. 分页组件
    
        a. 内置
        b. 扩展
        c. 自定义
        
    5. XSS攻击
        跨站脚本攻击：
            
        防止：
            - 其他人输入的内容     不用safe
            - 自己输入的内容       可用safe
        
        
        <script>
            for(var i=0;i<9999;i++){
                alert(i)
            }
        </script>
        
        
        <script>
            获取本地cookie，发送到另外一个网站
        </script>
        
        
今日内容：

    - 文件上传
        - 普通上传
        - 自定义页面上传按钮
        - 基于Form做上传
        - Ajax上传文件？？？？？
        
    - Django Model操作补充
        参考博客：http://www.cnblogs.com/wupeiqi/articles/6216618.html
        1. 创建类
            class UserInfo(model.Model):
                
                age = CharFiled(是否为空,类型,长度,列名,索引=True||||错误提示，自定义验证规则)
                ..
                ..
                
                ### 一对多
                ### 一对一
                    - 
                
                
                ### 多对多
                    - 第三张表：a.自动创建；b.手动创建; c. 手动+自动
                
                    ### 自关联：互粉 ###
                    
            a. 索引
            b. 一对多： on_delete
            c. 一对一和一对多是什么关系？ unique=true
            d. 多对多：
                - a.自动创建；b.手动创建; c. 手动+自动
                - ### 自关联：互粉 ###
                
            PS：related_name
            
        2. 操作类
            obj = UserInfo.objects.all().all().all()
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        