from django.db import models

班级：
id    name
 1    3班
 2    6班

class School:
    name = models.CharField(max_length=32)
 
 
class Classes(models.Model):
    """
    班级表,男
    """
    titile = models.CharField(max_length=32)
    # m = models.ManyToManyField('Teachers')      # 多对多
    # sch = models.ForeignKey(School)

老师：
id   title
 1    Alex
 2    老妖
 3    瞎驴
 4    Eric
class Teachers(models.Model):
    """
    老师表，女
    """
    name = models.CharField (max_length=32)

学生
id   username    age    gender   cs_id
1      东北       18     男         1
2      东北1      118     男        2
2      东北1      118     男        1
class Student(models.Model):
    """
    学生表
    """
    username = models.CharField(max_length=32)
    age = models.IntegerField()
    gender = models.BooleanField()
    cs = models.ForeignKey(Classes) #
    
    
示例：
    - 所有学生的姓名以及其所在班级名称,QuerySet
        stu_list = Student.objects.all()
        select * from tb;
        [obj,obj,obj,obj]
        
        stu_list = Student.objects.all().values("id",'username')
        select id,username from tb;
        [{"id":1,'username':'xx'},{id:'',username:''}]   
        
        stu_list = Student.objects.all().values_list("id",'username')
        [(1,'root'), (2,'alex')]
        
        
        stu_list = Student.objects.all().values('username',"cs__name")
        for row in stu_list:
            print(row['username'],row['cs__name'])
        
        stu_list = Student.objects.all().values('username',"cs__titile",“cs__fk__name”)
        
    - 找到3班的所有学生
        Student.objects.filter(cs__name='3班')
        
        obj = Classes.objects.filter(name='3班').first()

    
1. 类代表数据库表
2. 类的对象代指数据库的一行记录
3. FK字段代指关联表中的一行数据（类的对象）
4. 
    - 正向：fk字段  (*****)
    - 反向：小写类名_set(默认)   ==> related_name='ssss'

5. 谁是主表？就全部列出其数据
    models.Student.objects.all().values('username', 'cs__titile')
    models.Classes.objects.all().values('titile', 'ssss__username')
    
4. M2M字段，自动生成第三张表；依赖关联表对第三张表间接操作


对话框添加，删除，修改：
    添加：
        Ajax偷偷向后台发请求：
            1. 下载引入jQuery
            2. 
                $.ajax({
                    url: '/add_classes.html',
                    type: 'POST',
                    data: {'username':'root','password': '123'},
                    success:function(arg){
                        // 回调函数，arg是服务端返回的数据
                    }
                })
            
作业:
    1.班级管理（排出老师列）
    2.学生管理
    添加，删除，修改
    3.select标签 val



















