server:
  port: 33337
  http2:
    enabled: false
  undertow:
    buffer-size: 2048
    direct-buffers: true
    threads:
      io: 16
      worker: 256
    accesslog:
      dir: ${user.home}/logs/undertow
      enabled: true
  servlet:
    application-display-name: ${spring.application.name}

#oss:
#  minio:
#    enable: true
#    endpoint: https://111111.1000fun.com
#    access-key: admin
#    secret-key: adminminio
#    bucket-name: annexpic
#    base-path: /test

logging:
  level:
    root: INFO
    org.springframework.web: off
    org.apache.zookeeper: debug
    org.springframework.security: off
    org.springframework.security.oauth2: off
    org.springframework.boot.autoconfigure: off
    org.springframework.cloud.openfeign: off
redisson:
  password: ${TAOTAO_CLOUD_REDIS_PASSWORD:taotao-cloud}
  single-server-config:
    address: ${TAOTAO_CLOUD_REDIS_HOST:192.168.10.200}:${TAOTAO_CLOUD_REDIS_PORT:6379}
spring:
  #  redis:
  #    #host: ${TAOTAO_CLOUD_REDIS_HOST:192.168.10.200}
  #    #port: ${TAOTAO_CLOUD_REDIS_PORT:6379}
  #    #database: 1
  #    #password: ${TAOTAO_CLOUD_REDIS_PASSWORD:taotao-cloud}
  #    connect-timeout: 60000
  #    cluster:
  #      nodes: 192.168.10.200:6381,192.168.10.6382:7101,192.168.10.6383:7102,192.168.10.6384:7103,192.168.10.200:6385,192.168.10.200:6386
  #      max-redirects: 3
  #    #sentinel:
  #    #  master:
  #    #  nodes:
  #    client-type: lettuce
  #    lettuce:
  #      pool:
  #        max-active: 1500
  #        max-wait: 5000
  #        max-idle: 500
  #        min-idle: 100

  lifecycle:
    timeout-per-shutdown-phase: 30s
  thymeleaf:
    mode: HTML5
    prefix: classpath:/static/
    suffix: .html
    encoding: UTF-8
    cache: false
    enabled: true
  main:
    allow-circular-references: false
    allow-bean-definition-overriding: true
    banner-mode: off
    register-shutdown-hook: true
    cloud-platform: kubernetes
    web-application-type: servlet
  application:
    name: taotao-cloud-demo
    admin:
      enabled: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
  web:
    resources:
      # pro环境关闭
      add-mappings: true
  mvc:
    servlet:
      load-on-startup: 1
    format:
      date-time: yyyy-MM-dd HH:mm:ss
      date: yyyy-MM-dd
    dispatch-trace-request: true
    dispatch-options-request: true
    log-request-details: true
    log-resolved-exception: true
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB

taotao:
  cloud:
    netty:
      socket:
        enabled: false
    rxjava:
      enabled: false
    disruptor:
      enabled: false
      multi-producer: false
      ring-buffer-size: 1024
      ring-thread-numbers: 4
      #handler-definitions:
      # - /Event-DC-Output/TagA-Output/** = emailHandler
      # - /Event-DC-Output/TagB-Output/** = smsHandler
    dinger:
      enabled: false
      project-id: ${spring.application.name}
      dingers:
        dingtalk:
          tokenId: ${DINGDING_TOKEN_ID:xxxxx}
          secret: ${DINGDING_SECRET:xxxx}
      httpclient:
        enabled: true
      threadpool:
        enabled: true
    canal:
      enabled: false
      instances:
        example:
          clusterEnabled: false
          zookeeperAddress: 192.168.10.200:2181
          host: 192.168.10.200
          port: 11111
          userName: canal
          password: 123456
          batchSize: 1000
          filter:
          retryCount: 3
          acquireInterval: 3000
    zookeeper:
      enabled: false
      connectString: 192.168.10.200:2181
      lock:
        enabled: true

#Apollo 配置
app:
  id: taotao-cloud-demo                          #应用ID
#apollo:
#  cacheDir: ${user.dir}/logs/apolloconfig/                       #配置本地配置缓存目录
#  cluster: default                           #指定使用哪个集群的配置
#  meta: http://192.168.10.200:8080            #DEV环境配置中心地址
#  autoUpdateInjectedSpringProperties: true   #是否开启 Spring 参数自动更新
#  bootstrap:
#    enabled: true                            #是否开启 Apollo
#    namespaces: application                  #设置 Namespace
#    eagerLoad:
#      enabled: false                         #将 Apollo 加载提到初始化日志系统之前
